<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Thinktecture.IdentityModel.3.4.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:System.Net.Http.Fakes.ShimHttpClientExtensions">
            <summary>Shim type of System.Net.Http.HttpClientExtensions</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Net.Http.Fakes.ShimHttpClientExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpClientExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpClientExtensions.SetBasicAuthenticationHttpClientStringString">
            <summary>Sets the shim of HttpClientExtensions.SetBasicAuthentication(HttpClient client, String userName, String password)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpClientExtensions.SetBearerTokenHttpClientString">
            <summary>Sets the shim of HttpClientExtensions.SetBearerToken(HttpClient client, String token)</summary>
        </member>
        <member name="P:System.Net.Http.Fakes.ShimHttpClientExtensions.SetTokenHttpClientStringString">
            <summary>Sets the shim of HttpClientExtensions.SetToken(HttpClient client, String scheme, String token)</summary>
        </member>
        <member name="T:System.Web.Http.Fakes.ShimHttpRequestMessageProxyExtensions">
            <summary>Shim type of System.Web.Http.HttpRequestMessageProxyExtensions</summary>
        </member>
        <member name="M:System.Web.Http.Fakes.ShimHttpRequestMessageProxyExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Web.Http.Fakes.ShimHttpRequestMessageProxyExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Web.Http.Fakes.ShimHttpRequestMessageProxyExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Web.Http.Fakes.ShimHttpRequestMessageProxyExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Web.Http.Fakes.ShimHttpRequestMessageProxyExtensions.GetClaimsPrincipalHttpRequestMessage">
            <summary>Sets the shim of HttpRequestMessageProxyExtensions.GetClaimsPrincipal(HttpRequestMessage request)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission">
            <summary>Shim type of Thinktecture.IdentityModel.Authorization.ClaimPermission</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.#ctor(Thinktecture.IdentityModel.Authorization.ClaimPermission)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.Bind(System.Security.IPermission)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.Bind(System.Security.ISecurityEncodable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.Bind(System.Security.Permissions.IUnrestrictedPermission)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.CheckAccessStringStringClaimArray">
            <summary>Sets the shim of ClaimPermission.CheckAccess(String action, String resource, Claim[] additionalResources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.ConstructorStringString">
            <summary>Sets the shim of ClaimPermission.ClaimPermission(String resource, String action)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.ConstructorStringStringStringString">
            <summary>Sets the shim of ClaimPermission.ClaimPermission(String resourceType, String resource, String actionType, String action)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.Copy">
            <summary>Sets the shim of ClaimPermission.Copy()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.Demand">
            <summary>Sets the shim of ClaimPermission.Demand()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.FromXmlSecurityElement">
            <summary>Sets the shim of ClaimPermission.FromXml(SecurityElement e)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.IntersectIPermission">
            <summary>Sets the shim of ClaimPermission.Intersect(IPermission target)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.IsSubsetOfIPermission">
            <summary>Sets the shim of ClaimPermission.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.IsUnrestricted">
            <summary>Sets the shim of ClaimPermission.IsUnrestricted()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.ThrowSecurityException">
            <summary>Sets the shim of ClaimPermission.ThrowSecurityException()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.ToXml">
            <summary>Sets the shim of ClaimPermission.ToXml()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.UnionIPermission">
            <summary>Sets the shim of ClaimPermission.Union(IPermission target)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.AllInstances.Copy">
            <summary>Sets the shim of ClaimPermission.Copy()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.AllInstances.Demand">
            <summary>Sets the shim of ClaimPermission.Demand()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.AllInstances.FromXmlSecurityElement">
            <summary>Sets the shim of ClaimPermission.FromXml(SecurityElement e)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.AllInstances.IntersectIPermission">
            <summary>Sets the shim of ClaimPermission.Intersect(IPermission target)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.AllInstances.IsSubsetOfIPermission">
            <summary>Sets the shim of ClaimPermission.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.AllInstances.IsUnrestricted">
            <summary>Sets the shim of ClaimPermission.IsUnrestricted()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.AllInstances.ThrowSecurityException">
            <summary>Sets the shim of ClaimPermission.ThrowSecurityException()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.AllInstances.ToXml">
            <summary>Sets the shim of ClaimPermission.ToXml()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermission.AllInstances.UnionIPermission">
            <summary>Sets the shim of ClaimPermission.Union(IPermission target)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute">
            <summary>Shim type of Thinktecture.IdentityModel.Authorization.ClaimPermissionAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.#ctor(Thinktecture.IdentityModel.Authorization.ClaimPermissionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.ConstructorSecurityAction">
            <summary>Sets the shim of ClaimPermissionAttribute.ClaimPermissionAttribute(SecurityAction action)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.CreatePermission">
            <summary>Sets the shim of ClaimPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.OperationGet">
            <summary>Sets the shim of ClaimPermissionAttribute.get_Operation()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.OperationSetString">
            <summary>Sets the shim of ClaimPermissionAttribute.set_Operation(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.OperationTypeGet">
            <summary>Sets the shim of ClaimPermissionAttribute.get_OperationType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.OperationTypeSetString">
            <summary>Sets the shim of ClaimPermissionAttribute.set_OperationType(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.ResourceGet">
            <summary>Sets the shim of ClaimPermissionAttribute.get_Resource()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.ResourceSetString">
            <summary>Sets the shim of ClaimPermissionAttribute.set_Resource(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.ResourceTypeGet">
            <summary>Sets the shim of ClaimPermissionAttribute.get_ResourceType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.ResourceTypeSetString">
            <summary>Sets the shim of ClaimPermissionAttribute.set_ResourceType(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.AllInstances.CreatePermission">
            <summary>Sets the shim of ClaimPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.AllInstances.OperationGet">
            <summary>Sets the shim of ClaimPermissionAttribute.get_Operation()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.AllInstances.OperationSetString">
            <summary>Sets the shim of ClaimPermissionAttribute.set_Operation(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.AllInstances.OperationTypeGet">
            <summary>Sets the shim of ClaimPermissionAttribute.get_OperationType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.AllInstances.OperationTypeSetString">
            <summary>Sets the shim of ClaimPermissionAttribute.set_OperationType(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.AllInstances.ResourceGet">
            <summary>Sets the shim of ClaimPermissionAttribute.get_Resource()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.AllInstances.ResourceSetString">
            <summary>Sets the shim of ClaimPermissionAttribute.set_Resource(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.AllInstances.ResourceTypeGet">
            <summary>Sets the shim of ClaimPermissionAttribute.get_ResourceType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimPermissionAttribute.AllInstances.ResourceTypeSetString">
            <summary>Sets the shim of ClaimPermissionAttribute.set_ResourceType(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization">
            <summary>Shim type of Thinktecture.IdentityModel.Authorization.ClaimsAuthorization</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.AuthorizationManagerGet">
            <summary>Sets the shim of ClaimsAuthorization.get_AuthorizationManager()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.CheckAccessAuthorizationContext">
            <summary>Sets the shim of ClaimsAuthorization.CheckAccess(AuthorizationContext context)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.CheckAccessClaimsPrincipalStringStringArray">
            <summary>Sets the shim of ClaimsAuthorization.CheckAccess(ClaimsPrincipal principal, String action, String[] resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.CheckAccessCollectionOfClaimCollectionOfClaim">
            <summary>Sets the shim of ClaimsAuthorization.CheckAccess(Collection`1&lt;Claim&gt; actions, Collection`1&lt;Claim&gt; resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.CheckAccessStringClaimArray">
            <summary>Sets the shim of ClaimsAuthorization.CheckAccess(String action, Claim[] resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.CheckAccessStringStringArray">
            <summary>Sets the shim of ClaimsAuthorization.CheckAccess(String action, String[] resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.CheckAccessStringStringClaimArray">
            <summary>Sets the shim of ClaimsAuthorization.CheckAccess(String action, String resource, Claim[] resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.CreateAuthorizationContextClaimsPrincipalStringStringArray">
            <summary>Sets the shim of ClaimsAuthorization.CreateAuthorizationContext(ClaimsPrincipal principal, String action, String[] resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.EnforceAuthorizationManagerImplementationGet">
            <summary>Sets the shim of ClaimsAuthorization.get_EnforceAuthorizationManagerImplementation()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.EnforceAuthorizationManagerImplementationSetBoolean">
            <summary>Sets the shim of ClaimsAuthorization.set_EnforceAuthorizationManagerImplementation(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.ShimClaimsAuthorization.StaticConstructor">
            <summary>Sets the shim of ClaimsAuthorization.ClaimsAuthorization()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute">
            <summary>Stub type of Thinktecture.IdentityModel.Authorization.ClaimPermissionAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.CreatePermission">
            <summary>Sets the stub of ClaimPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.CreatePermission01">
            <summary>Sets the stub of ClaimPermissionAttribute.CreatePermission()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubClaimPermissionAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Fakes.StubClaimPermissionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute">
            <summary>Shim type of Thinktecture.IdentityModel.Authorization.Mvc.ClaimsAuthorizeAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.#ctor(Thinktecture.IdentityModel.Authorization.Mvc.ClaimsAuthorizeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.Bind(System.Web.Mvc.IMvcFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.AuthorizeCoreHttpContextBase">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.AuthorizeCore(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.CheckAccessAuthorizationContext">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.CheckAccess(AuthorizationContext filterContext)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.Constructor">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.ClaimsAuthorizeAttribute()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.ConstructorStringStringArray">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.ClaimsAuthorizeAttribute(String action, String[] resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.OnAuthorizationAuthorizationContext">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.AllInstances.AuthorizeCoreHttpContextBase">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.AuthorizeCore(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.AllInstances.CheckAccessAuthorizationContext">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.CheckAccess(AuthorizationContext filterContext)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.ShimClaimsAuthorizeAttribute.AllInstances.OnAuthorizationAuthorizationContext">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute">
            <summary>Stub type of Thinktecture.IdentityModel.Authorization.Mvc.ClaimsAuthorizeAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.#ctor(System.String,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
            <summary>Sets the stub of ClaimsAuthorizeAttribute.AuthorizeCore(HttpContextBase httpContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.AuthorizeCoreHttpContextBase">
            <summary>Sets the stub of ClaimsAuthorizeAttribute.AuthorizeCore(HttpContextBase httpContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.CheckAccess(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of ClaimsAuthorizeAttribute.CheckAccess(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.CheckAccessAuthorizationContext">
            <summary>Sets the stub of ClaimsAuthorizeAttribute.CheckAccess(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of AuthorizeAttribute.HandleUnauthorizedRequest(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.HandleUnauthorizedRequestAuthorizationContext">
            <summary>Sets the stub of AuthorizeAttribute.HandleUnauthorizedRequest(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubClaimsAuthorizeAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of ClaimsAuthorizeAttribute.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of ClaimsAuthorizeAttribute.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.OnCacheAuthorization(System.Web.HttpContextBase)">
            <summary>Sets the stub of AuthorizeAttribute.OnCacheAuthorization(HttpContextBase httpContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.OnCacheAuthorizationHttpContextBase">
            <summary>Sets the stub of AuthorizeAttribute.OnCacheAuthorization(HttpContextBase httpContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.TypeIdGet">
            <summary>Sets the stub of AuthorizeAttribute.get_TypeId()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.Mvc.Fakes.StubClaimsAuthorizeAttribute.TypeId">
            <summary>Sets the stub of AuthorizeAttribute.get_TypeId()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute">
            <summary>Shim type of Thinktecture.IdentityModel.Authorization.WebApi.ClaimsAuthorizeAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.#ctor(Thinktecture.IdentityModel.Authorization.WebApi.ClaimsAuthorizeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.Bind(System.Web.Http.Filters.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.Bind(System.Web.Http.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.CheckAccessHttpActionContext">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.CheckAccess(HttpActionContext actionContext)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.Constructor">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.ClaimsAuthorizeAttribute()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.ConstructorStringStringArray">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.ClaimsAuthorizeAttribute(String action, String[] resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.IsAuthorizedHttpActionContext">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.IsAuthorized(HttpActionContext actionContext)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.AllInstances.CheckAccessHttpActionContext">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.CheckAccess(HttpActionContext actionContext)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimClaimsAuthorizeAttribute.AllInstances.IsAuthorizedHttpActionContext">
            <summary>Sets the shim of ClaimsAuthorizeAttribute.IsAuthorized(HttpActionContext actionContext)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute">
            <summary>Shim type of Thinktecture.IdentityModel.Authorization.WebApi.ScopeAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.#ctor(Thinktecture.IdentityModel.Authorization.WebApi.ScopeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.Bind(System.Web.Http.Filters.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.Bind(System.Web.Http.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.ConstructorStringArray">
            <summary>Sets the shim of ScopeAttribute.ScopeAttribute(String[] scopes)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.IsAuthorizedHttpActionContext">
            <summary>Sets the shim of ScopeAttribute.IsAuthorized(HttpActionContext actionContext)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.ScopeClaimTypeGet">
            <summary>Sets the shim of ScopeAttribute.get_ScopeClaimType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.ScopeClaimTypeSetString">
            <summary>Sets the shim of ScopeAttribute.set_ScopeClaimType(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.StaticConstructor">
            <summary>Sets the shim of ScopeAttribute.ScopeAttribute()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute._IsAuthorizedb__0Claim">
            <summary>Sets the shim of ScopeAttribute.&lt;IsAuthorized&gt;b__0(Claim c)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.ShimScopeAttribute.AllInstances.IsAuthorizedHttpActionContext">
            <summary>Sets the shim of ScopeAttribute.IsAuthorized(HttpActionContext actionContext)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute">
            <summary>Stub type of Thinktecture.IdentityModel.Authorization.WebApi.ClaimsAuthorizeAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.#ctor(System.String,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.AllowMultipleGet">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.CheckAccess(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of ClaimsAuthorizeAttribute.CheckAccess(HttpActionContext actionContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.CheckAccessHttpActionContext">
            <summary>Sets the stub of ClaimsAuthorizeAttribute.CheckAccess(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of AuthorizeAttribute.HandleUnauthorizedRequest(HttpActionContext actionContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.HandleUnauthorizedRequestHttpActionContext">
            <summary>Sets the stub of AuthorizeAttribute.HandleUnauthorizedRequest(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubClaimsAuthorizeAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of ClaimsAuthorizeAttribute.IsAuthorized(HttpActionContext actionContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.IsAuthorizedHttpActionContext">
            <summary>Sets the stub of ClaimsAuthorizeAttribute.IsAuthorized(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of AuthorizeAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.OnAuthorizationHttpActionContext">
            <summary>Sets the stub of AuthorizeAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.TypeIdGet">
            <summary>Sets the stub of AuthorizeAttribute.get_TypeId()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.AllowMultiple">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubClaimsAuthorizeAttribute.TypeId">
            <summary>Sets the stub of AuthorizeAttribute.get_TypeId()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute">
            <summary>Stub type of Thinktecture.IdentityModel.Authorization.WebApi.ScopeAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.#ctor(System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.AllowMultipleGet">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.HandleUnauthorizedRequest(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of AuthorizeAttribute.HandleUnauthorizedRequest(HttpActionContext actionContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.HandleUnauthorizedRequestHttpActionContext">
            <summary>Sets the stub of AuthorizeAttribute.HandleUnauthorizedRequest(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubScopeAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of ScopeAttribute.IsAuthorized(HttpActionContext actionContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.IsAuthorizedHttpActionContext">
            <summary>Sets the stub of ScopeAttribute.IsAuthorized(HttpActionContext actionContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>Sets the stub of AuthorizeAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.OnAuthorizationHttpActionContext">
            <summary>Sets the stub of AuthorizeAttribute.OnAuthorization(HttpActionContext actionContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.TypeIdGet">
            <summary>Sets the stub of AuthorizeAttribute.get_TypeId()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.AllowMultiple">
            <summary>Sets the stub of FilterAttribute.get_AllowMultiple()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Authorization.WebApi.Fakes.StubScopeAttribute.TypeId">
            <summary>Sets the stub of AuthorizeAttribute.get_TypeId()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient">
            <summary>Shim type of Thinktecture.IdentityModel.Clients.AccessControlService.IdentityProviderDiscoveryClient</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.#ctor(Thinktecture.IdentityModel.Clients.AccessControlService.IdentityProviderDiscoveryClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.AcsNamespaceGet">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.get_AcsNamespace()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.AcsNamespaceSetString">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.set_AcsNamespace(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.ConstructorStringString">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.IdentityProviderDiscoveryClient(String acsNamespace, String realm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.ContextGet">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.get_Context()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.ContextSetString">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.set_Context(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.GetAsyncString">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.GetAsync(String protocol)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.RealmGet">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.get_Realm()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.RealmSetString">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.set_Realm(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.AllInstances.AcsNamespaceGet">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.get_AcsNamespace()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.AllInstances.AcsNamespaceSetString">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.set_AcsNamespace(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.AllInstances.ContextGet">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.get_Context()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.AllInstances.ContextSetString">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.set_Context(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.AllInstances.GetAsyncString">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.GetAsync(String protocol)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.AllInstances.RealmGet">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.get_Realm()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderDiscoveryClient.AllInstances.RealmSetString">
            <summary>Sets the shim of IdentityProviderDiscoveryClient.set_Realm(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation">
            <summary>Shim type of Thinktecture.IdentityModel.Clients.AccessControlService.IdentityProviderInformation</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.#ctor(Thinktecture.IdentityModel.Clients.AccessControlService.IdentityProviderInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.Constructor">
            <summary>Sets the shim of IdentityProviderInformation.IdentityProviderInformation()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.EmailAddressSuffixesGet">
            <summary>Sets the shim of IdentityProviderInformation.get_EmailAddressSuffixes()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.EmailAddressSuffixesSetStringArray">
            <summary>Sets the shim of IdentityProviderInformation.set_EmailAddressSuffixes(String[] value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.ImageUrlGet">
            <summary>Sets the shim of IdentityProviderInformation.get_ImageUrl()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.ImageUrlSetString">
            <summary>Sets the shim of IdentityProviderInformation.set_ImageUrl(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.LoginUrlGet">
            <summary>Sets the shim of IdentityProviderInformation.get_LoginUrl()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.LoginUrlSetString">
            <summary>Sets the shim of IdentityProviderInformation.set_LoginUrl(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.NameGet">
            <summary>Sets the shim of IdentityProviderInformation.get_Name()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.NameSetString">
            <summary>Sets the shim of IdentityProviderInformation.set_Name(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.AllInstances.EmailAddressSuffixesGet">
            <summary>Sets the shim of IdentityProviderInformation.get_EmailAddressSuffixes()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.AllInstances.EmailAddressSuffixesSetStringArray">
            <summary>Sets the shim of IdentityProviderInformation.set_EmailAddressSuffixes(String[] value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.AllInstances.ImageUrlGet">
            <summary>Sets the shim of IdentityProviderInformation.get_ImageUrl()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.AllInstances.ImageUrlSetString">
            <summary>Sets the shim of IdentityProviderInformation.set_ImageUrl(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.AllInstances.LoginUrlGet">
            <summary>Sets the shim of IdentityProviderInformation.get_LoginUrl()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.AllInstances.LoginUrlSetString">
            <summary>Sets the shim of IdentityProviderInformation.set_LoginUrl(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.AllInstances.NameGet">
            <summary>Sets the shim of IdentityProviderInformation.get_Name()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimIdentityProviderInformation.AllInstances.NameSetString">
            <summary>Sets the shim of IdentityProviderInformation.set_Name(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse">
            <summary>Shim type of Thinktecture.IdentityModel.Clients.AccessControlService.JSNotifyRequestSecurityTokenResponse</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.#ctor(Thinktecture.IdentityModel.Clients.AccessControlService.JSNotifyRequestSecurityTokenResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AppliesToGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_AppliesTo()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AppliesToSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_AppliesTo(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.Constructor">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.JSNotifyRequestSecurityTokenResponse()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.ContextGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_Context()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.ContextSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_Context(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.CreatedGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_Created()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.CreatedSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_Created(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.ExpiresGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_Expires()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.ExpiresSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_Expires(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.FromJsonString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.FromJson(String jsonString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.ParseValuesJSNotifyRequestSecurityTokenResponse">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.ParseValues(JSNotifyRequestSecurityTokenResponse rstr)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.SecurityTokenGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_SecurityToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.SecurityTokenSetGenericXmlSecurityToken">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_SecurityToken(GenericXmlSecurityToken value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.SecurityTokenStringGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_SecurityTokenString()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.SecurityTokenStringSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_SecurityTokenString(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.TokenTypeGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.TokenTypeSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_TokenType(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.ValidFromGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_ValidFrom()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.ValidFromSetDateTime">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_ValidFrom(DateTime value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.ValidToGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_ValidTo()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.ValidToSetDateTime">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_ValidTo(DateTime value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.AppliesToGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_AppliesTo()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.AppliesToSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_AppliesTo(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.ContextGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_Context()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.ContextSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_Context(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.CreatedGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_Created()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.CreatedSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_Created(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.ExpiresGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_Expires()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.ExpiresSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_Expires(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.SecurityTokenGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_SecurityToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.SecurityTokenSetGenericXmlSecurityToken">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_SecurityToken(GenericXmlSecurityToken value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.SecurityTokenStringGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_SecurityTokenString()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.SecurityTokenStringSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_SecurityTokenString(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.TokenTypeGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.TokenTypeSetString">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_TokenType(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.ValidFromGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_ValidFrom()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.ValidFromSetDateTime">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_ValidFrom(DateTime value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.ValidToGet">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.get_ValidTo()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimJSNotifyRequestSecurityTokenResponse.AllInstances.ValidToSetDateTime">
            <summary>Sets the shim of JSNotifyRequestSecurityTokenResponse.set_ValidTo(DateTime value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimProtocols">
            <summary>Shim type of Thinktecture.IdentityModel.Clients.AccessControlService.Protocols</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimProtocols.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimProtocols.#ctor(Thinktecture.IdentityModel.Clients.AccessControlService.Protocols)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimProtocols.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimProtocols.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimProtocols.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimProtocols.Constructor">
            <summary>Sets the shim of Protocols.Protocols()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.ShimProtocols.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderDiscoveryClient">
            <summary>Stub type of Thinktecture.IdentityModel.Clients.AccessControlService.IdentityProviderDiscoveryClient</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderDiscoveryClient.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderDiscoveryClient.InitializeStub">
            <summary>Initializes a new instance of type StubIdentityProviderDiscoveryClient</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderDiscoveryClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderDiscoveryClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderDiscoveryClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderInformation">
            <summary>Stub type of Thinktecture.IdentityModel.Clients.AccessControlService.IdentityProviderInformation</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderInformation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderInformation.InitializeStub">
            <summary>Initializes a new instance of type StubIdentityProviderInformation</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderInformation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderInformation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubIdentityProviderInformation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubJSNotifyRequestSecurityTokenResponse">
            <summary>Stub type of Thinktecture.IdentityModel.Clients.AccessControlService.JSNotifyRequestSecurityTokenResponse</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubJSNotifyRequestSecurityTokenResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubJSNotifyRequestSecurityTokenResponse.InitializeStub">
            <summary>Initializes a new instance of type StubJSNotifyRequestSecurityTokenResponse</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubJSNotifyRequestSecurityTokenResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubJSNotifyRequestSecurityTokenResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubJSNotifyRequestSecurityTokenResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubProtocols">
            <summary>Stub type of Thinktecture.IdentityModel.Clients.AccessControlService.Protocols</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubProtocols.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubProtocols.InitializeStub">
            <summary>Initializes a new instance of type StubProtocols</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubProtocols.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubProtocols.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.AccessControlService.Fakes.StubProtocols.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse">
            <summary>Shim type of Thinktecture.IdentityModel.Clients.AccessTokenResponse</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.#ctor(Thinktecture.IdentityModel.Clients.AccessTokenResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.AccessTokenGet">
            <summary>Sets the shim of AccessTokenResponse.get_AccessToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.AccessTokenSetString">
            <summary>Sets the shim of AccessTokenResponse.set_AccessToken(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.Constructor">
            <summary>Sets the shim of AccessTokenResponse.AccessTokenResponse()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.ExpiresInGet">
            <summary>Sets the shim of AccessTokenResponse.get_ExpiresIn()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.ExpiresInSetInt32">
            <summary>Sets the shim of AccessTokenResponse.set_ExpiresIn(Int32 value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.RefreshTokenGet">
            <summary>Sets the shim of AccessTokenResponse.get_RefreshToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.RefreshTokenSetString">
            <summary>Sets the shim of AccessTokenResponse.set_RefreshToken(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.TokenTypeGet">
            <summary>Sets the shim of AccessTokenResponse.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.TokenTypeSetString">
            <summary>Sets the shim of AccessTokenResponse.set_TokenType(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.AllInstances.AccessTokenGet">
            <summary>Sets the shim of AccessTokenResponse.get_AccessToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.AllInstances.AccessTokenSetString">
            <summary>Sets the shim of AccessTokenResponse.set_AccessToken(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.AllInstances.ExpiresInGet">
            <summary>Sets the shim of AccessTokenResponse.get_ExpiresIn()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.AllInstances.ExpiresInSetInt32">
            <summary>Sets the shim of AccessTokenResponse.set_ExpiresIn(Int32 value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.AllInstances.RefreshTokenGet">
            <summary>Sets the shim of AccessTokenResponse.get_RefreshToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.AllInstances.RefreshTokenSetString">
            <summary>Sets the shim of AccessTokenResponse.set_RefreshToken(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.AllInstances.TokenTypeGet">
            <summary>Sets the shim of AccessTokenResponse.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimAccessTokenResponse.AllInstances.TokenTypeSetString">
            <summary>Sets the shim of AccessTokenResponse.set_TokenType(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client">
            <summary>Shim type of Thinktecture.IdentityModel.Clients.OAuth2Client</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.#ctor(Thinktecture.IdentityModel.Clients.OAuth2Client)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.ConstructorUri">
            <summary>Sets the shim of OAuth2Client.OAuth2Client(Uri address)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.ConstructorUriStringString">
            <summary>Sets the shim of OAuth2Client.OAuth2Client(Uri address, String clientId, String clientSecret)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.CreateCodeFlowUrlStringStringStringStringString">
            <summary>Sets the shim of OAuth2Client.CreateCodeFlowUrl(String endpoint, String clientId, String scope, String redirectUri, String state)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.CreateFormAssertionStringStringStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormAssertion(String assertion, String assertionType, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.CreateFormClientCredentialsStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormClientCredentials(String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.CreateFormCodeStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormCode(String code, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.CreateFormCodeStringUriDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormCode(String code, Uri redirectUri, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.CreateFormDictionaryOfStringStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateForm(Dictionary`2&lt;String,String&gt; explicitProperties, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.CreateFormRefreshTokenStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormRefreshToken(String refreshToken, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.CreateFormUserNameStringStringStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormUserName(String userName, String password, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.CreateImplicitFlowUrlStringStringStringStringString">
            <summary>Sets the shim of OAuth2Client.CreateImplicitFlowUrl(String endpoint, String clientId, String scope, String redirectUri, String state)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.CreateResponseFromJsonJObject">
            <summary>Sets the shim of OAuth2Client.CreateResponseFromJson(JObject json)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.CreateUrlStringStringStringStringStringString">
            <summary>Sets the shim of OAuth2Client.CreateUrl(String endpoint, String clientId, String scope, String redirectUri, String responseType, String state)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.MergeAdditionKeyValuePairsIntoExplicitKeyValuePairsDictionaryOfStringStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.MergeAdditionKeyValuePairsIntoExplicitKeyValuePairs(Dictionary`2&lt;String,String&gt; explicitProperties, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.RequestAccessTokenAssertionStringStringStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenAssertion(String assertion, String assertionType, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.RequestAccessTokenClientCredentialsStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenClientCredentials(String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.RequestAccessTokenCodeStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenCode(String code, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.RequestAccessTokenCodeStringUriDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenCode(String code, Uri redirectUri, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.RequestAccessTokenRefreshTokenStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenRefreshToken(String refreshToken, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.RequestAccessTokenUserNameStringStringStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenUserName(String userName, String password, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client._MergeAdditionKeyValuePairsIntoExplicitKeyValuePairsb__9KeyValuePairOfStringString">
            <summary>Sets the shim of OAuth2Client.&lt;MergeAdditionKeyValuePairsIntoExplicitKeyValuePairs&gt;b__9(KeyValuePair`2&lt;String,String&gt; final)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client._MergeAdditionKeyValuePairsIntoExplicitKeyValuePairsb__aKeyValuePairOfStringString">
            <summary>Sets the shim of OAuth2Client.&lt;MergeAdditionKeyValuePairsIntoExplicitKeyValuePairs&gt;b__a(KeyValuePair`2&lt;String,String&gt; final)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.CreateFormAssertionStringStringStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormAssertion(String assertion, String assertionType, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.CreateFormClientCredentialsStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormClientCredentials(String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.CreateFormCodeStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormCode(String code, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.CreateFormCodeStringUriDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormCode(String code, Uri redirectUri, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.CreateFormRefreshTokenStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormRefreshToken(String refreshToken, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.CreateFormUserNameStringStringStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.CreateFormUserName(String userName, String password, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.CreateResponseFromJsonJObject">
            <summary>Sets the shim of OAuth2Client.CreateResponseFromJson(JObject json)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.RequestAccessTokenAssertionStringStringStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenAssertion(String assertion, String assertionType, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.RequestAccessTokenClientCredentialsStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenClientCredentials(String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.RequestAccessTokenCodeStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenCode(String code, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.RequestAccessTokenCodeStringUriDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenCode(String code, Uri redirectUri, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.RequestAccessTokenRefreshTokenStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenRefreshToken(String refreshToken, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.ShimOAuth2Client.AllInstances.RequestAccessTokenUserNameStringStringStringDictionaryOfStringString">
            <summary>Sets the shim of OAuth2Client.RequestAccessTokenUserName(String userName, String password, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.Fakes.StubAccessTokenResponse">
            <summary>Stub type of Thinktecture.IdentityModel.Clients.AccessTokenResponse</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.StubAccessTokenResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.StubAccessTokenResponse.InitializeStub">
            <summary>Initializes a new instance of type StubAccessTokenResponse</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.StubAccessTokenResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.StubAccessTokenResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.StubAccessTokenResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client">
            <summary>Stub type of Thinktecture.IdentityModel.Clients.OAuth2Client</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.#ctor(System.Uri)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.#ctor(System.Uri,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormAssertion(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Sets the stub of OAuth2Client.CreateFormAssertion(String assertion, String assertionType, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormAssertionStringStringStringDictionaryOfStringString">
            <summary>Sets the stub of OAuth2Client.CreateFormAssertion(String assertion, String assertionType, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormClientCredentials(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Sets the stub of OAuth2Client.CreateFormClientCredentials(String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormClientCredentialsStringDictionaryOfStringString">
            <summary>Sets the stub of OAuth2Client.CreateFormClientCredentials(String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormCode(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Sets the stub of OAuth2Client.CreateFormCode(String code, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormCode(System.String,System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Sets the stub of OAuth2Client.CreateFormCode(String code, Uri redirectUri, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormCodeStringDictionaryOfStringString">
            <summary>Sets the stub of OAuth2Client.CreateFormCode(String code, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormCodeStringUriDictionaryOfStringString">
            <summary>Sets the stub of OAuth2Client.CreateFormCode(String code, Uri redirectUri, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormRefreshToken(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Sets the stub of OAuth2Client.CreateFormRefreshToken(String refreshToken, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormRefreshTokenStringDictionaryOfStringString">
            <summary>Sets the stub of OAuth2Client.CreateFormRefreshToken(String refreshToken, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormUserName(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Sets the stub of OAuth2Client.CreateFormUserName(String userName, String password, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CreateFormUserNameStringStringStringDictionaryOfStringString">
            <summary>Sets the stub of OAuth2Client.CreateFormUserName(String userName, String password, String scope, Dictionary`2&lt;String,String&gt; additionalProperties)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.InitializeStub">
            <summary>Initializes a new instance of type StubOAuth2Client</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Clients.Fakes.StubOAuth2Client.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimAlgorithms">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.Algorithms</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimAlgorithms.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimAlgorithms.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimAlgorithms.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimAlgorithms.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimDateTimeFormats">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.DateTimeFormats</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimDateTimeFormats.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimDateTimeFormats.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimDateTimeFormats.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimDateTimeFormats.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimDateTimeFormats.StaticConstructor">
            <summary>Sets the shim of DateTimeFormats.DateTimeFormats()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimInternal">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.Internal</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimInternal.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimInternal.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimInternal.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimInternal.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.JwtConstants</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimClaims">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.JwtConstants+Claims</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimClaims.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimClaims.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimClaims.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimClaims.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimHeader">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.JwtConstants+Header</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimHeader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimHeader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimHeader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimHeader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimSignatureAlgorithms">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.JwtConstants+SignatureAlgorithms</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimSignatureAlgorithms.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimSignatureAlgorithms.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimSignatureAlgorithms.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimJwtConstants.ShimSignatureAlgorithms.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.OAuth2Constants</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimErrors">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.OAuth2Constants+Errors</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimErrors.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimErrors.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimErrors.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimErrors.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimGrantTypes">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.OAuth2Constants+GrantTypes</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimGrantTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimGrantTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimGrantTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimGrantTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimResponseTypes">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.OAuth2Constants+ResponseTypes</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimResponseTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimResponseTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimResponseTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimOAuth2Constants.ShimResponseTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimSwtConstants">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.SwtConstants</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimSwtConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimSwtConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimSwtConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimSwtConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimTokenTypes">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.TokenTypes</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimTokenTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimTokenTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimTokenTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimTokenTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSSecurity10Constants</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimAttributes">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSSecurity10Constants+Attributes</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimAttributes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimAttributes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimAttributes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimAttributes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimElements">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSSecurity10Constants+Elements</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimElements.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimElements.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimElements.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimElements.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimEncodingTypes">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSSecurity10Constants+EncodingTypes</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimEncodingTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimEncodingTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimEncodingTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimEncodingTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimFaultCodes">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSSecurity10Constants+FaultCodes</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimFaultCodes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimFaultCodes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimFaultCodes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSSecurity10Constants.ShimFaultCodes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSTrust13Constants</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimActions">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSTrust13Constants+Actions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimActions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimActions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimActions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimActions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimAttributeNames">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSTrust13Constants+AttributeNames</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimAttributeNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimAttributeNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimAttributeNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimAttributeNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimComputedKeyAlgorithms">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSTrust13Constants+ComputedKeyAlgorithms</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimComputedKeyAlgorithms.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimComputedKeyAlgorithms.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimComputedKeyAlgorithms.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimComputedKeyAlgorithms.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimElementNames">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSTrust13Constants+ElementNames</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimElementNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimElementNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimElementNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimElementNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimFaultCodeValues">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSTrust13Constants+FaultCodeValues</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimFaultCodeValues.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimFaultCodeValues.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimFaultCodeValues.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimFaultCodeValues.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimKeyTypes">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSTrust13Constants+KeyTypes</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimKeyTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimKeyTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimKeyTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimKeyTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimRequestTypes">
            <summary>Shim type of Thinktecture.IdentityModel.Constants.WSTrust13Constants+RequestTypes</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimRequestTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimRequestTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimRequestTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Constants.Fakes.ShimWSTrust13Constants.ShimRequestTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Extensions.Fakes.ShimClaimsExtensions">
            <summary>Shim type of Thinktecture.IdentityModel.Extensions.ClaimsExtensions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimClaimsExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimClaimsExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimClaimsExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimClaimsExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimClaimsExtensions.GetValueIEnumerableOfClaimString">
            <summary>Sets the shim of ClaimsExtensions.GetValue(IEnumerable`1&lt;Claim&gt; claims, String type)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimClaimsExtensions.GetValuesIEnumerableOfClaimString">
            <summary>Sets the shim of ClaimsExtensions.GetValues(IEnumerable`1&lt;Claim&gt; claims, String claimType)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimClaimsExtensions.HasClaimClaimsPrincipalString">
            <summary>Sets the shim of ClaimsExtensions.HasClaim(ClaimsPrincipal user, String type)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimClaimsExtensions._GetValuesb__9Claim">
            <summary>Sets the shim of ClaimsExtensions.&lt;GetValues&gt;b__9(Claim claim)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Extensions.Fakes.ShimConsoleExtensions">
            <summary>Shim type of Thinktecture.IdentityModel.Extensions.ConsoleExtensions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimConsoleExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimConsoleExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimConsoleExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimConsoleExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimConsoleExtensions.ColoredWriteLineStringConsoleColor">
            <summary>Sets the shim of ConsoleExtensions.ColoredWriteLine(String text, ConsoleColor color)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimConsoleExtensions.ConsoleGreenString">
            <summary>Sets the shim of ConsoleExtensions.ConsoleGreen(String text)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimConsoleExtensions.ConsoleRedString">
            <summary>Sets the shim of ConsoleExtensions.ConsoleRed(String text)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimConsoleExtensions.ConsoleYellowString">
            <summary>Sets the shim of ConsoleExtensions.ConsoleYellow(String text)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Extensions.Fakes.ShimDateTimeExtensions">
            <summary>Shim type of Thinktecture.IdentityModel.Extensions.DateTimeExtensions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimDateTimeExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimDateTimeExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimDateTimeExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimDateTimeExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimDateTimeExtensions.ToDateTimeFromEpochInt64">
            <summary>Sets the shim of DateTimeExtensions.ToDateTimeFromEpoch(Int64 intDate)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimDateTimeExtensions.ToDateTimeOffsetFromEpochInt64">
            <summary>Sets the shim of DateTimeExtensions.ToDateTimeOffsetFromEpoch(Int64 intDate)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimDateTimeExtensions.ToEpochTimeDateTime">
            <summary>Sets the shim of DateTimeExtensions.ToEpochTime(DateTime dateTime)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimDateTimeExtensions.ToEpochTimeDateTimeOffset">
            <summary>Sets the shim of DateTimeExtensions.ToEpochTime(DateTimeOffset dateTime)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Extensions.Fakes.ShimHttpRequestMessageExtensions">
            <summary>Shim type of Thinktecture.IdentityModel.Extensions.HttpRequestMessageExtensions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimHttpRequestMessageExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimHttpRequestMessageExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimHttpRequestMessageExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimHttpRequestMessageExtensions.AddHeaderToHttpRequestMessageHttpRequestMessageStringStringArray">
            <summary>Sets the shim of HttpRequestMessageExtensions.AddHeaderToHttpRequestMessage(HttpRequestMessage httpRequestMessage, String headerName, String[] headerValues)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimHttpRequestMessageExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimHttpRequestMessageExtensions.GetClaimsPrincipalHttpRequestMessage">
            <summary>Sets the shim of HttpRequestMessageExtensions.GetClaimsPrincipal(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimHttpRequestMessageExtensions.GetHttpMethodString">
            <summary>Sets the shim of HttpRequestMessageExtensions.GetHttpMethod(String method)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimHttpRequestMessageExtensions.ToHttpRequestMessageHttpRequestBaseBoolean">
            <summary>Sets the shim of HttpRequestMessageExtensions.ToHttpRequestMessage(HttpRequestBase httpRequest, Boolean includeContent)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Extensions.Fakes.ShimRSAExtensions">
            <summary>Shim type of Thinktecture.IdentityModel.Extensions.RSAExtensions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimRSAExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimRSAExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimRSAExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRSAExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRSAExtensions.GetKeyHashRSA">
            <summary>Sets the shim of RSAExtensions.GetKeyHash(RSA rsa)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRSAExtensions.GetKeyHashRSAString">
            <summary>Sets the shim of RSAExtensions.GetKeyHash(RSA rsa, String entropy)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRSAExtensions.GetKeyHashStringRSA">
            <summary>Sets the shim of RSAExtensions.GetKeyHashString(RSA rsa)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRSAExtensions.GetKeyHashStringRSAString">
            <summary>Sets the shim of RSAExtensions.GetKeyHashString(RSA rsa, String entropy)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions">
            <summary>Shim type of Thinktecture.IdentityModel.Extensions.RequestSecurityTokenResponseExtensions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.ComputeProofKeyRequestSecurityTokenRequestSecurityTokenResponse">
            <summary>Sets the shim of RequestSecurityTokenResponseExtensions.ComputeProofKey(RequestSecurityToken rst, RequestSecurityTokenResponse rstr)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.ExtractTokenXmlRequestSecurityTokenResponse">
            <summary>Sets the shim of RequestSecurityTokenResponseExtensions.ExtractTokenXml(RequestSecurityTokenResponse rstr)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.GetProofKeyRequestSecurityTokenResponseRequestSecurityToken">
            <summary>Sets the shim of RequestSecurityTokenResponseExtensions.GetProofKey(RequestSecurityTokenResponse rstr, RequestSecurityToken rst)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.GetUseKeySecurityTokenUseKeyString">
            <summary>Sets the shim of RequestSecurityTokenResponseExtensions.GetUseKeySecurityToken(UseKey useKey, String requestKeyType)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.IsPsha1String">
            <summary>Sets the shim of RequestSecurityTokenResponseExtensions.IsPsha1(String algorithm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.ToGenericXmlSecurityTokenRequestSecurityTokenResponse">
            <summary>Sets the shim of RequestSecurityTokenResponseExtensions.ToGenericXmlSecurityToken(RequestSecurityTokenResponse rstr)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.ToGenericXmlSecurityTokenRequestSecurityTokenResponseRequestSecurityToken">
            <summary>Sets the shim of RequestSecurityTokenResponseExtensions.ToGenericXmlSecurityToken(RequestSecurityTokenResponse rstr, RequestSecurityToken rst)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimRequestSecurityTokenResponseExtensions.ToGenericXmlSecurityTokenRequestSecurityTokenResponseSecurityToken">
            <summary>Sets the shim of RequestSecurityTokenResponseExtensions.ToGenericXmlSecurityToken(RequestSecurityTokenResponse rstr, SecurityToken proofKey)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions">
            <summary>Shim type of Thinktecture.IdentityModel.Extensions.SecurityTokensExtensions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.CreateDefaultHandlerCollectionSecurityTokenHandlerConfiguration">
            <summary>Sets the shim of SecurityTokensExtensions.CreateDefaultHandlerCollection(SecurityTokenHandlerConfiguration configuration)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.CreateIssuerNameRegistryX509Certificate2">
            <summary>Sets the shim of SecurityTokensExtensions.CreateIssuerNameRegistry(X509Certificate2 certificate)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.CreateSecurityTokenResolverX509Certificate2">
            <summary>Sets the shim of SecurityTokensExtensions.CreateSecurityTokenResolver(X509Certificate2 certificate)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.CreateStandardConfigurationX509Certificate2">
            <summary>Sets the shim of SecurityTokensExtensions.CreateStandardConfiguration(X509Certificate2 signingCertificate)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.ToClaimsPrincipalSecurityTokenSecurityTokenHandlerCollection">
            <summary>Sets the shim of SecurityTokensExtensions.ToClaimsPrincipal(SecurityToken token, SecurityTokenHandlerCollection handler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.ToClaimsPrincipalSecurityTokenX509Certificate2">
            <summary>Sets the shim of SecurityTokensExtensions.ToClaimsPrincipal(SecurityToken token, X509Certificate2 signingCertificate)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.ToClaimsPrincipalSecurityTokenX509Certificate2String">
            <summary>Sets the shim of SecurityTokensExtensions.ToClaimsPrincipal(SecurityToken token, X509Certificate2 signingCertificate, String audienceUri)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.ToSecurityTokenGenericXmlSecurityToken">
            <summary>Sets the shim of SecurityTokensExtensions.ToSecurityToken(GenericXmlSecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.ToSecurityTokenGenericXmlSecurityTokenSecurityTokenHandlerCollection">
            <summary>Sets the shim of SecurityTokensExtensions.ToSecurityToken(GenericXmlSecurityToken token, SecurityTokenHandlerCollection handler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.ToSecurityTokenGenericXmlSecurityTokenX509Certificate2">
            <summary>Sets the shim of SecurityTokensExtensions.ToSecurityToken(GenericXmlSecurityToken token, X509Certificate2 decryptionCertificate)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.ToTokenXmlStringGenericXmlSecurityToken">
            <summary>Sets the shim of SecurityTokensExtensions.ToTokenXmlString(GenericXmlSecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.ToTokenXmlStringSecurityToken">
            <summary>Sets the shim of SecurityTokensExtensions.ToTokenXmlString(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions.ToTokenXmlStringSecurityTokenSecurityTokenHandlerCollection">
            <summary>Sets the shim of SecurityTokensExtensions.ToTokenXmlString(SecurityToken token, SecurityTokenHandlerCollection handler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimSecurityTokensExtensions._ToClaimsPrincipalb__0ClaimsIdentity">
            <summary>Sets the shim of SecurityTokensExtensions.&lt;ToClaimsPrincipal&gt;b__0(ClaimsIdentity identity)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Extensions.Fakes.ShimX509CertificateEndpointIdentityExtensions">
            <summary>Shim type of Thinktecture.IdentityModel.Extensions.X509CertificateEndpointIdentityExtensions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimX509CertificateEndpointIdentityExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimX509CertificateEndpointIdentityExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimX509CertificateEndpointIdentityExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimX509CertificateEndpointIdentityExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimX509CertificateEndpointIdentityExtensions.GetEndCertificateX509CertificateEndpointIdentity">
            <summary>Sets the shim of X509CertificateEndpointIdentityExtensions.GetEndCertificate(X509CertificateEndpointIdentity epi)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions">
            <summary>Shim type of Thinktecture.IdentityModel.Extensions.XmlExtensions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions.AsStringXmlReader">
            <summary>Sets the shim of XmlExtensions.AsString(XmlReader reader)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions.AsXmlReaderString">
            <summary>Sets the shim of XmlExtensions.AsXmlReader(String input)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions.AsXmlReaderStringBoolean">
            <summary>Sets the shim of XmlExtensions.AsXmlReader(String input, Boolean isInteractive)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions.ToXDocumentXmlDocument">
            <summary>Sets the shim of XmlExtensions.ToXDocument(XmlDocument document)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions.ToXElementXmlElement">
            <summary>Sets the shim of XmlExtensions.ToXElement(XmlElement element)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions.ToXmlDocumentXDocument">
            <summary>Sets the shim of XmlExtensions.ToXmlDocument(XDocument document)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Extensions.Fakes.ShimXmlExtensions.ToXmlElementXElement">
            <summary>Sets the shim of XmlExtensions.ToXmlElement(XElement element)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimAuthenticationInstantClaim">
            <summary>Shim type of Thinktecture.IdentityModel.AuthenticationInstantClaim</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimAuthenticationInstantClaim.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimAuthenticationInstantClaim.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimAuthenticationInstantClaim.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimAuthenticationInstantClaim.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimAuthenticationInstantClaim.NowGet">
            <summary>Sets the shim of AuthenticationInstantClaim.get_Now()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimBase64Url">
            <summary>Shim type of Thinktecture.IdentityModel.Base64Url</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimBase64Url.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimBase64Url.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimBase64Url.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimBase64Url.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimBase64Url.DecodeString">
            <summary>Sets the shim of Base64Url.Decode(String arg)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimBase64Url.EncodeByteArray">
            <summary>Sets the shim of Base64Url.Encode(Byte[] arg)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom">
            <summary>Shim type of Thinktecture.IdentityModel.CryptoRandom</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.#ctor(Thinktecture.IdentityModel.CryptoRandom)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.Constructor">
            <summary>Sets the shim of CryptoRandom.CryptoRandom()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.ConstructorInt32">
            <summary>Sets the shim of CryptoRandom.CryptoRandom(Int32 ignoredSeed)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.CreateRandomKeyInt32">
            <summary>Sets the shim of CryptoRandom.CreateRandomKey(Int32 length)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.CreateRandomKeyStringInt32">
            <summary>Sets the shim of CryptoRandom.CreateRandomKeyString(Int32 length)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.Next">
            <summary>Sets the shim of CryptoRandom.Next()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.NextBytesByteArray">
            <summary>Sets the shim of CryptoRandom.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.NextDouble">
            <summary>Sets the shim of CryptoRandom.NextDouble()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.NextInt32">
            <summary>Sets the shim of CryptoRandom.Next(Int32 maxValue)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.NextInt32Int32">
            <summary>Sets the shim of CryptoRandom.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.AllInstances.Next">
            <summary>Sets the shim of CryptoRandom.Next()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.AllInstances.NextBytesByteArray">
            <summary>Sets the shim of CryptoRandom.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.AllInstances.NextDouble">
            <summary>Sets the shim of CryptoRandom.NextDouble()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.AllInstances.NextInt32">
            <summary>Sets the shim of CryptoRandom.Next(Int32 maxValue)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimCryptoRandom.AllInstances.NextInt32Int32">
            <summary>Sets the shim of CryptoRandom.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimObfuscatingComparer">
            <summary>Shim type of Thinktecture.IdentityModel.ObfuscatingComparer</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimObfuscatingComparer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimObfuscatingComparer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimObfuscatingComparer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimObfuscatingComparer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimObfuscatingComparer.IsEqualStringString">
            <summary>Sets the shim of ObfuscatingComparer.IsEqual(String s1, String s2)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimPrincipal">
            <summary>Shim type of Thinktecture.IdentityModel.Principal</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimPrincipal.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimPrincipal.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimPrincipal.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimPrincipal.AnonymousGet">
            <summary>Sets the shim of Principal.get_Anonymous()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimPrincipal.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimPrincipal.CreateRolesStringArray">
            <summary>Sets the shim of Principal.CreateRoles(String[] roleNames)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimPrincipal.CreateStringClaimArray">
            <summary>Sets the shim of Principal.Create(String authenticationType, Claim[] claims)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimPrincipal._CreateRolesb__1String">
            <summary>Sets the shim of Principal.&lt;CreateRoles&gt;b__1(String r)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimX509">
            <summary>Shim type of Thinktecture.IdentityModel.X509</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509.CurrentUserGet">
            <summary>Sets the shim of X509.get_CurrentUser()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509.LocalMachineGet">
            <summary>Sets the shim of X509.get_LocalMachine()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesFinder">
            <summary>Shim type of Thinktecture.IdentityModel.X509CertificatesFinder</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesFinder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesFinder.#ctor(Thinktecture.IdentityModel.X509CertificatesFinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesFinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesFinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesFinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesFinder.ConstructorStoreLocationStoreNameX509FindType">
            <summary>Sets the shim of X509CertificatesFinder.X509CertificatesFinder(StoreLocation location, StoreName name, X509FindType findType)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesFinder.FindObjectBoolean">
            <summary>Sets the shim of X509CertificatesFinder.Find(Object findValue, Boolean validOnly)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesFinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesFinder.AllInstances.FindObjectBoolean">
            <summary>Sets the shim of X509CertificatesFinder.Find(Object findValue, Boolean validOnly)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation">
            <summary>Shim type of Thinktecture.IdentityModel.X509CertificatesLocation</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.#ctor(Thinktecture.IdentityModel.X509CertificatesLocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.AddressBookGet">
            <summary>Sets the shim of X509CertificatesLocation.get_AddressBook()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.CertificateAuthorityGet">
            <summary>Sets the shim of X509CertificatesLocation.get_CertificateAuthority()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.ConstructorStoreLocation">
            <summary>Sets the shim of X509CertificatesLocation.X509CertificatesLocation(StoreLocation location)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.MyGet">
            <summary>Sets the shim of X509CertificatesLocation.get_My()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.TrustedPeopleGet">
            <summary>Sets the shim of X509CertificatesLocation.get_TrustedPeople()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.TrustedPublisherGet">
            <summary>Sets the shim of X509CertificatesLocation.get_TrustedPublisher()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.AllInstances.AddressBookGet">
            <summary>Sets the shim of X509CertificatesLocation.get_AddressBook()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.AllInstances.CertificateAuthorityGet">
            <summary>Sets the shim of X509CertificatesLocation.get_CertificateAuthority()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.AllInstances.MyGet">
            <summary>Sets the shim of X509CertificatesLocation.get_My()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.AllInstances.TrustedPeopleGet">
            <summary>Sets the shim of X509CertificatesLocation.get_TrustedPeople()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesLocation.AllInstances.TrustedPublisherGet">
            <summary>Sets the shim of X509CertificatesLocation.get_TrustedPublisher()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName">
            <summary>Shim type of Thinktecture.IdentityModel.X509CertificatesName</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.#ctor(Thinktecture.IdentityModel.X509CertificatesName)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.ConstructorStoreLocationStoreName">
            <summary>Sets the shim of X509CertificatesName.X509CertificatesName(StoreLocation location, StoreName name)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.IssuerNameGet">
            <summary>Sets the shim of X509CertificatesName.get_IssuerName()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.SerialNumberGet">
            <summary>Sets the shim of X509CertificatesName.get_SerialNumber()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.SubjectDistinguishedNameGet">
            <summary>Sets the shim of X509CertificatesName.get_SubjectDistinguishedName()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.ThumbprintGet">
            <summary>Sets the shim of X509CertificatesName.get_Thumbprint()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.AllInstances.IssuerNameGet">
            <summary>Sets the shim of X509CertificatesName.get_IssuerName()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.AllInstances.SerialNumberGet">
            <summary>Sets the shim of X509CertificatesName.get_SerialNumber()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.AllInstances.SubjectDistinguishedNameGet">
            <summary>Sets the shim of X509CertificatesName.get_SubjectDistinguishedName()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.ShimX509CertificatesName.AllInstances.ThumbprintGet">
            <summary>Sets the shim of X509CertificatesName.get_Thumbprint()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.StubCryptoRandom">
            <summary>Stub type of Thinktecture.IdentityModel.CryptoRandom</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.InitializeStub">
            <summary>Initializes a new instance of type StubCryptoRandom</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.Next">
            <summary>Sets the stub of CryptoRandom.Next()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.Next(System.Int32)">
            <summary>Sets the stub of CryptoRandom.Next(Int32 maxValue)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.Next(System.Int32,System.Int32)">
            <summary>Sets the stub of CryptoRandom.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.Next01">
            <summary>Sets the stub of CryptoRandom.Next()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.NextBytes(System.Byte[])">
            <summary>Sets the stub of CryptoRandom.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.NextBytesByteArray">
            <summary>Sets the stub of CryptoRandom.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.NextDouble">
            <summary>Sets the stub of CryptoRandom.NextDouble()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.NextDouble01">
            <summary>Sets the stub of CryptoRandom.NextDouble()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.NextInt32">
            <summary>Sets the stub of CryptoRandom.Next(Int32 maxValue)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.NextInt32Int32">
            <summary>Sets the stub of CryptoRandom.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.Sample">
            <summary>Sets the stub of Random.Sample()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.Sample01">
            <summary>Sets the stub of Random.Sample()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubCryptoRandom.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.StubX509CertificatesFinder">
            <summary>Stub type of Thinktecture.IdentityModel.X509CertificatesFinder</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubX509CertificatesFinder.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubX509CertificatesFinder.InitializeStub">
            <summary>Initializes a new instance of type StubX509CertificatesFinder</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubX509CertificatesFinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubX509CertificatesFinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubX509CertificatesFinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.StubX509CertificatesLocation">
            <summary>Stub type of Thinktecture.IdentityModel.X509CertificatesLocation</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubX509CertificatesLocation.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubX509CertificatesLocation.InitializeStub">
            <summary>Initializes a new instance of type StubX509CertificatesLocation</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubX509CertificatesLocation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubX509CertificatesLocation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubX509CertificatesLocation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Fakes.StubX509CertificatesName">
            <summary>Stub type of Thinktecture.IdentityModel.X509CertificatesName</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubX509CertificatesName.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Fakes.StubX509CertificatesName.InitializeStub">
            <summary>Initializes a new instance of type StubX509CertificatesName</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubX509CertificatesName.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubX509CertificatesName.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Fakes.StubX509CertificatesName.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.CorsAccessRequest</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.#ctor(Thinktecture.IdentityModel.Http.Cors.CorsAccessRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.ConstructorIHttpRequestWrapper">
            <summary>Sets the shim of CorsAccessRequest.CorsAccessRequest(IHttpRequestWrapper httpRequest)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.IsCorsGet">
            <summary>Sets the shim of CorsAccessRequest.get_IsCors()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.IsCorsPreflightGet">
            <summary>Sets the shim of CorsAccessRequest.get_IsCorsPreflight()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.IsCorsSimpleGet">
            <summary>Sets the shim of CorsAccessRequest.get_IsCorsSimple()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.OriginGet">
            <summary>Sets the shim of CorsAccessRequest.get_Origin()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.PropertiesGet">
            <summary>Sets the shim of CorsAccessRequest.get_Properties()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.RequestedHeadersGet">
            <summary>Sets the shim of CorsAccessRequest.get_RequestedHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.RequestedMethodGet">
            <summary>Sets the shim of CorsAccessRequest.get_RequestedMethod()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.ResourceGet">
            <summary>Sets the shim of CorsAccessRequest.get_Resource()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest._get_RequestedHeadersb__0String">
            <summary>Sets the shim of CorsAccessRequest.&lt;get_RequestedHeaders&gt;b__0(String x)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.AllInstances.IsCorsGet">
            <summary>Sets the shim of CorsAccessRequest.get_IsCors()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.AllInstances.IsCorsPreflightGet">
            <summary>Sets the shim of CorsAccessRequest.get_IsCorsPreflight()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.AllInstances.IsCorsSimpleGet">
            <summary>Sets the shim of CorsAccessRequest.get_IsCorsSimple()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.AllInstances.OriginGet">
            <summary>Sets the shim of CorsAccessRequest.get_Origin()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.AllInstances.PropertiesGet">
            <summary>Sets the shim of CorsAccessRequest.get_Properties()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.AllInstances.RequestedHeadersGet">
            <summary>Sets the shim of CorsAccessRequest.get_RequestedHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.AllInstances.RequestedMethodGet">
            <summary>Sets the shim of CorsAccessRequest.get_RequestedMethod()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessRequest.AllInstances.ResourceGet">
            <summary>Sets the shim of CorsAccessRequest.get_Resource()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.CorsAccessResponse</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.#ctor(Thinktecture.IdentityModel.Http.Cors.CorsAccessResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllowedMethodsGet">
            <summary>Sets the shim of CorsAccessResponse.get_AllowedMethods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllowedMethodsSetIEnumerableOfString">
            <summary>Sets the shim of CorsAccessResponse.set_AllowedMethods(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllowedRequestHeadersGet">
            <summary>Sets the shim of CorsAccessResponse.get_AllowedRequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllowedRequestHeadersSetIEnumerableOfString">
            <summary>Sets the shim of CorsAccessResponse.set_AllowedRequestHeaders(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllowedResponseHeadersGet">
            <summary>Sets the shim of CorsAccessResponse.get_AllowedResponseHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllowedResponseHeadersSetIEnumerableOfString">
            <summary>Sets the shim of CorsAccessResponse.set_AllowedResponseHeaders(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AreCookiesAllowedGet">
            <summary>Sets the shim of CorsAccessResponse.get_AreCookiesAllowed()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AreCookiesAllowedSetBoolean">
            <summary>Sets the shim of CorsAccessResponse.set_AreCookiesAllowed(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.Constructor">
            <summary>Sets the shim of CorsAccessResponse.CorsAccessResponse()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.OriginAllowedGet">
            <summary>Sets the shim of CorsAccessResponse.get_OriginAllowed()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.OriginAllowedSetString">
            <summary>Sets the shim of CorsAccessResponse.set_OriginAllowed(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.ResponseCacheDurationSecondsGet">
            <summary>Sets the shim of CorsAccessResponse.get_ResponseCacheDurationSeconds()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.ResponseCacheDurationSecondsSetNullableOfInt32">
            <summary>Sets the shim of CorsAccessResponse.set_ResponseCacheDurationSeconds(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.WriteResponseIHttpResponseWrapper">
            <summary>Sets the shim of CorsAccessResponse.WriteResponse(IHttpResponseWrapper response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse._WriteResponseb__0StringString">
            <summary>Sets the shim of CorsAccessResponse.&lt;WriteResponse&gt;b__0(String x, String y)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse._WriteResponseb__1StringString">
            <summary>Sets the shim of CorsAccessResponse.&lt;WriteResponse&gt;b__1(String x, String y)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse._WriteResponseb__2StringString">
            <summary>Sets the shim of CorsAccessResponse.&lt;WriteResponse&gt;b__2(String x, String y)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.AllowedMethodsGet">
            <summary>Sets the shim of CorsAccessResponse.get_AllowedMethods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.AllowedMethodsSetIEnumerableOfString">
            <summary>Sets the shim of CorsAccessResponse.set_AllowedMethods(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.AllowedRequestHeadersGet">
            <summary>Sets the shim of CorsAccessResponse.get_AllowedRequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.AllowedRequestHeadersSetIEnumerableOfString">
            <summary>Sets the shim of CorsAccessResponse.set_AllowedRequestHeaders(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.AllowedResponseHeadersGet">
            <summary>Sets the shim of CorsAccessResponse.get_AllowedResponseHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.AllowedResponseHeadersSetIEnumerableOfString">
            <summary>Sets the shim of CorsAccessResponse.set_AllowedResponseHeaders(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.AreCookiesAllowedGet">
            <summary>Sets the shim of CorsAccessResponse.get_AreCookiesAllowed()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.AreCookiesAllowedSetBoolean">
            <summary>Sets the shim of CorsAccessResponse.set_AreCookiesAllowed(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.OriginAllowedGet">
            <summary>Sets the shim of CorsAccessResponse.get_OriginAllowed()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.OriginAllowedSetString">
            <summary>Sets the shim of CorsAccessResponse.set_OriginAllowed(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.ResponseCacheDurationSecondsGet">
            <summary>Sets the shim of CorsAccessResponse.get_ResponseCacheDurationSeconds()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.ResponseCacheDurationSecondsSetNullableOfInt32">
            <summary>Sets the shim of CorsAccessResponse.set_ResponseCacheDurationSeconds(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsAccessResponse.AllInstances.WriteResponseIHttpResponseWrapper">
            <summary>Sets the shim of CorsAccessResponse.WriteResponse(IHttpResponseWrapper response)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.CorsConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.#ctor(Thinktecture.IdentityModel.Http.Cors.CorsConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AddCorsConfigurationEntry">
            <summary>Sets the shim of CorsConfiguration.Add(CorsConfigurationEntry entry)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllowAll">
            <summary>Sets the shim of CorsConfiguration.AllowAll()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllowAllMethods">
            <summary>Sets the shim of CorsConfiguration.AllowAllMethods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllowAllMethodsAndAllRequestHeaders">
            <summary>Sets the shim of CorsConfiguration.AllowAllMethodsAndAllRequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.Constructor">
            <summary>Sets the shim of CorsConfiguration.CorsConfiguration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.DefaultCacheDurationGet">
            <summary>Sets the shim of CorsConfiguration.get_DefaultCacheDuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.DefaultCacheDurationSetNullableOfInt32">
            <summary>Sets the shim of CorsConfiguration.set_DefaultCacheDuration(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.DynamicConfigurationCallbackGet">
            <summary>Sets the shim of CorsConfiguration.get_DynamicConfigurationCallback()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.DynamicConfigurationCallbackSetFuncOfCorsAccessRequestCorsConfigurationAllowProperties">
            <summary>Sets the shim of CorsConfiguration.set_DynamicConfigurationCallback(Func`2&lt;CorsAccessRequest,CorsConfigurationAllowProperties&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.EngineGet">
            <summary>Sets the shim of CorsConfiguration.get_Engine()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.EngineSetCorsEngine">
            <summary>Sets the shim of CorsConfiguration.set_Engine(CorsEngine value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.FindAnyResourceByOriginString">
            <summary>Sets the shim of CorsConfiguration.FindAnyResourceByOrigin(String origin)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.FindAnyResourceForAnyOrigin">
            <summary>Sets the shim of CorsConfiguration.FindAnyResourceForAnyOrigin()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.FindByResourceAndOriginStringString">
            <summary>Sets the shim of CorsConfiguration.FindByResourceAndOrigin(String resource, String origin)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.FindByResourceAnyOriginString">
            <summary>Sets the shim of CorsConfiguration.FindByResourceAnyOrigin(String resource)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.ForAll">
            <summary>Sets the shim of CorsConfiguration.ForAll()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.ForAllOrigins">
            <summary>Sets the shim of CorsConfiguration.ForAllOrigins()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.ForAllResources">
            <summary>Sets the shim of CorsConfiguration.ForAllResources()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.ForOriginsStringArray">
            <summary>Sets the shim of CorsConfiguration.ForOrigins(String[] origins)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.ForResourcesStringArray">
            <summary>Sets the shim of CorsConfiguration.ForResources(String[] resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.GetConfigurationEntryForRequestCorsAccessRequest">
            <summary>Sets the shim of CorsConfiguration.GetConfigurationEntryForRequest(CorsAccessRequest accessRequest)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.GetEntryFromDynamicConfigurationCorsAccessRequest">
            <summary>Sets the shim of CorsConfiguration.GetEntryFromDynamicConfiguration(CorsAccessRequest accessRequest)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.GetEntryFromStaticConfigurationCorsAccessRequest">
            <summary>Sets the shim of CorsConfiguration.GetEntryFromStaticConfiguration(CorsAccessRequest accessRequest)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.StaticConfigurationAccessFilterGet">
            <summary>Sets the shim of CorsConfiguration.get_StaticConfigurationAccessFilter()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.StaticConfigurationAccessFilterSetFuncOfCorsAccessRequestCorsConfigurationAllowPropertiesCorsConfigurationAllowProperties">
            <summary>Sets the shim of CorsConfiguration.set_StaticConfigurationAccessFilter(Func`3&lt;CorsAccessRequest,CorsConfigurationAllowProperties,CorsConfigurationAllowProperties&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration._FindAnyResourceForAnyOriginb__9CorsConfigurationEntry">
            <summary>Sets the shim of CorsConfiguration.&lt;FindAnyResourceForAnyOrigin&gt;b__9(CorsConfigurationEntry item)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.AddCorsConfigurationEntry">
            <summary>Sets the shim of CorsConfiguration.Add(CorsConfigurationEntry entry)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.AllowAll">
            <summary>Sets the shim of CorsConfiguration.AllowAll()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.AllowAllMethods">
            <summary>Sets the shim of CorsConfiguration.AllowAllMethods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.AllowAllMethodsAndAllRequestHeaders">
            <summary>Sets the shim of CorsConfiguration.AllowAllMethodsAndAllRequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.DefaultCacheDurationGet">
            <summary>Sets the shim of CorsConfiguration.get_DefaultCacheDuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.DefaultCacheDurationSetNullableOfInt32">
            <summary>Sets the shim of CorsConfiguration.set_DefaultCacheDuration(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.DynamicConfigurationCallbackGet">
            <summary>Sets the shim of CorsConfiguration.get_DynamicConfigurationCallback()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.DynamicConfigurationCallbackSetFuncOfCorsAccessRequestCorsConfigurationAllowProperties">
            <summary>Sets the shim of CorsConfiguration.set_DynamicConfigurationCallback(Func`2&lt;CorsAccessRequest,CorsConfigurationAllowProperties&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.EngineGet">
            <summary>Sets the shim of CorsConfiguration.get_Engine()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.EngineSetCorsEngine">
            <summary>Sets the shim of CorsConfiguration.set_Engine(CorsEngine value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.FindAnyResourceByOriginString">
            <summary>Sets the shim of CorsConfiguration.FindAnyResourceByOrigin(String origin)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.FindAnyResourceForAnyOrigin">
            <summary>Sets the shim of CorsConfiguration.FindAnyResourceForAnyOrigin()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.FindByResourceAndOriginStringString">
            <summary>Sets the shim of CorsConfiguration.FindByResourceAndOrigin(String resource, String origin)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.FindByResourceAnyOriginString">
            <summary>Sets the shim of CorsConfiguration.FindByResourceAnyOrigin(String resource)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.ForAll">
            <summary>Sets the shim of CorsConfiguration.ForAll()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.ForAllOrigins">
            <summary>Sets the shim of CorsConfiguration.ForAllOrigins()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.ForAllResources">
            <summary>Sets the shim of CorsConfiguration.ForAllResources()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.ForOriginsStringArray">
            <summary>Sets the shim of CorsConfiguration.ForOrigins(String[] origins)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.ForResourcesStringArray">
            <summary>Sets the shim of CorsConfiguration.ForResources(String[] resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.GetConfigurationEntryForRequestCorsAccessRequest">
            <summary>Sets the shim of CorsConfiguration.GetConfigurationEntryForRequest(CorsAccessRequest accessRequest)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.GetEntryFromDynamicConfigurationCorsAccessRequest">
            <summary>Sets the shim of CorsConfiguration.GetEntryFromDynamicConfiguration(CorsAccessRequest accessRequest)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.GetEntryFromStaticConfigurationCorsAccessRequest">
            <summary>Sets the shim of CorsConfiguration.GetEntryFromStaticConfiguration(CorsAccessRequest accessRequest)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.StaticConfigurationAccessFilterGet">
            <summary>Sets the shim of CorsConfiguration.get_StaticConfigurationAccessFilter()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfiguration.AllInstances.StaticConfigurationAccessFilterSetFuncOfCorsAccessRequestCorsConfigurationAllowPropertiesCorsConfigurationAllowProperties">
            <summary>Sets the shim of CorsConfiguration.set_StaticConfigurationAccessFilter(Func`3&lt;CorsAccessRequest,CorsConfigurationAllowProperties,CorsConfigurationAllowProperties&gt; value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.CorsConfigurationAllowProperties</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.#ctor(Thinktecture.IdentityModel.Http.Cors.CorsConfigurationAllowProperties)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllowAllMethodsGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_AllowAllMethods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllowAllMethodsSetBoolean">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_AllowAllMethods(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllowAllRequestedHeadersGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_AllowAllRequestedHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllowAllRequestedHeadersSetBoolean">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_AllowAllRequestedHeaders(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllowAnyOriginGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_AllowAnyOrigin()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllowAnyOriginSetBoolean">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_AllowAnyOrigin(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllowCookiesGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_AllowCookies()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllowCookiesSetBoolean">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.CacheDurationGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_CacheDuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.CacheDurationSetNullableOfInt32">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_CacheDuration(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.Constructor">
            <summary>Sets the shim of CorsConfigurationAllowProperties.CorsConfigurationAllowProperties()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.MethodsGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_Methods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.MethodsSetIEnumerableOfString">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_Methods(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.RequestHeadersGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_RequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.RequestHeadersSetIEnumerableOfString">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_RequestHeaders(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.ResponseHeadersGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_ResponseHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.ResponseHeadersSetIEnumerableOfString">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_ResponseHeaders(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.AllowAllMethodsGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_AllowAllMethods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.AllowAllMethodsSetBoolean">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_AllowAllMethods(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.AllowAllRequestedHeadersGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_AllowAllRequestedHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.AllowAllRequestedHeadersSetBoolean">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_AllowAllRequestedHeaders(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.AllowAnyOriginGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_AllowAnyOrigin()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.AllowAnyOriginSetBoolean">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_AllowAnyOrigin(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.AllowCookiesGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_AllowCookies()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.AllowCookiesSetBoolean">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.CacheDurationGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_CacheDuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.CacheDurationSetNullableOfInt32">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_CacheDuration(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.MethodsGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_Methods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.MethodsSetIEnumerableOfString">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_Methods(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.RequestHeadersGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_RequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.RequestHeadersSetIEnumerableOfString">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_RequestHeaders(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.ResponseHeadersGet">
            <summary>Sets the shim of CorsConfigurationAllowProperties.get_ResponseHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationAllowProperties.AllInstances.ResponseHeadersSetIEnumerableOfString">
            <summary>Sets the shim of CorsConfigurationAllowProperties.set_ResponseHeaders(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.CorsConfigurationEntry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.#ctor(Thinktecture.IdentityModel.Http.Cors.CorsConfigurationEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.AllResourcesGet">
            <summary>Sets the shim of CorsConfigurationEntry.get_AllResources()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.AllResourcesSetBoolean">
            <summary>Sets the shim of CorsConfigurationEntry.set_AllResources(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.Constructor">
            <summary>Sets the shim of CorsConfigurationEntry.CorsConfigurationEntry()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.OriginGet">
            <summary>Sets the shim of CorsConfigurationEntry.get_Origin()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.OriginSetString">
            <summary>Sets the shim of CorsConfigurationEntry.set_Origin(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.ResourceGet">
            <summary>Sets the shim of CorsConfigurationEntry.get_Resource()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.ResourceSetString">
            <summary>Sets the shim of CorsConfigurationEntry.set_Resource(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.AllInstances.AllResourcesGet">
            <summary>Sets the shim of CorsConfigurationEntry.get_AllResources()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.AllInstances.AllResourcesSetBoolean">
            <summary>Sets the shim of CorsConfigurationEntry.set_AllResources(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.AllInstances.OriginGet">
            <summary>Sets the shim of CorsConfigurationEntry.get_Origin()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.AllInstances.OriginSetString">
            <summary>Sets the shim of CorsConfigurationEntry.set_Origin(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.AllInstances.ResourceGet">
            <summary>Sets the shim of CorsConfigurationEntry.get_Resource()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConfigurationEntry.AllInstances.ResourceSetString">
            <summary>Sets the shim of CorsConfigurationEntry.set_Resource(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConstants">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.CorsConstants</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConstants.#ctor(Thinktecture.IdentityModel.Http.Cors.CorsConstants)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConstants.Constructor">
            <summary>Sets the shim of CorsConstants.CorsConstants()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConstants.StaticConstructor">
            <summary>Sets the shim of CorsConstants.CorsConstants()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsConstants.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.CorsEngine</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.#ctor(Thinktecture.IdentityModel.Http.Cors.CorsEngine)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AddAllowedMethodsCorsAccessRequestCorsConfigurationEntryCorsAccessResponse">
            <summary>Sets the shim of CorsEngine.AddAllowedMethods(CorsAccessRequest accessRequest, CorsConfigurationEntry configEntry, CorsAccessResponse response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AddAllowedRequestHeadersCorsAccessRequestCorsConfigurationEntryCorsAccessResponse">
            <summary>Sets the shim of CorsEngine.AddAllowedRequestHeaders(CorsAccessRequest accessRequest, CorsConfigurationEntry configEntry, CorsAccessResponse response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AddCacheDurationCorsConfigurationEntryCorsAccessResponse">
            <summary>Sets the shim of CorsEngine.AddCacheDuration(CorsConfigurationEntry configEntry, CorsAccessResponse response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AddCookiesCorsConfigurationEntryCorsAccessResponse">
            <summary>Sets the shim of CorsEngine.AddCookies(CorsConfigurationEntry configEntry, CorsAccessResponse response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AddExposedHeadersCorsConfigurationEntryCorsAccessResponse">
            <summary>Sets the shim of CorsEngine.AddExposedHeaders(CorsConfigurationEntry configEntry, CorsAccessResponse response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AddOriginCorsAccessRequestCorsConfigurationEntryCorsAccessResponse">
            <summary>Sets the shim of CorsEngine.AddOrigin(CorsAccessRequest accessRequest, CorsConfigurationEntry configEntry, CorsAccessResponse response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.CalculateResponseCorsAccessRequestCorsConfigurationEntry">
            <summary>Sets the shim of CorsEngine.CalculateResponse(CorsAccessRequest accessRequest, CorsConfigurationEntry configEntry)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.CheckAccessCorsAccessRequest">
            <summary>Sets the shim of CorsEngine.CheckAccess(CorsAccessRequest accessRequest)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.CheckMethodsCorsAccessRequestCorsConfigurationEntry">
            <summary>Sets the shim of CorsEngine.CheckMethods(CorsAccessRequest accessRequest, CorsConfigurationEntry configEntry)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.CheckOriginCorsAccessRequestCorsConfigurationEntry">
            <summary>Sets the shim of CorsEngine.CheckOrigin(CorsAccessRequest accessRequest, CorsConfigurationEntry configEntry)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.CheckRequestHeadersCorsAccessRequestCorsConfigurationEntry">
            <summary>Sets the shim of CorsEngine.CheckRequestHeaders(CorsAccessRequest accessRequest, CorsConfigurationEntry configEntry)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.ConstructorCorsConfiguration">
            <summary>Sets the shim of CorsEngine.CorsEngine(CorsConfiguration configuration)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine._AddAllowedMethodsb__2String">
            <summary>Sets the shim of CorsEngine.&lt;AddAllowedMethods&gt;b__2(String x)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine._CheckMethodsb__0String">
            <summary>Sets the shim of CorsEngine.&lt;CheckMethods&gt;b__0(String x)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AllInstances.AddCacheDurationCorsConfigurationEntryCorsAccessResponse">
            <summary>Sets the shim of CorsEngine.AddCacheDuration(CorsConfigurationEntry configEntry, CorsAccessResponse response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AllInstances.AddExposedHeadersCorsConfigurationEntryCorsAccessResponse">
            <summary>Sets the shim of CorsEngine.AddExposedHeaders(CorsConfigurationEntry configEntry, CorsAccessResponse response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AllInstances.CalculateResponseCorsAccessRequestCorsConfigurationEntry">
            <summary>Sets the shim of CorsEngine.CalculateResponse(CorsAccessRequest accessRequest, CorsConfigurationEntry configEntry)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AllInstances.CheckAccessCorsAccessRequest">
            <summary>Sets the shim of CorsEngine.CheckAccess(CorsAccessRequest accessRequest)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsEngine.AllInstances.CheckRequestHeadersCorsAccessRequestCorsConfigurationEntry">
            <summary>Sets the shim of CorsEngine.CheckRequestHeaders(CorsAccessRequest accessRequest, CorsConfigurationEntry configEntry)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsExtensions">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.CorsExtensions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsExtensions.IsSimpleMethodString">
            <summary>Sets the shim of CorsExtensions.IsSimpleMethod(String method)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsExtensions.RemoveSimpleRequestHeadersIEnumerableOfString">
            <summary>Sets the shim of CorsExtensions.RemoveSimpleRequestHeaders(IEnumerable`1&lt;String&gt; headers)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsExtensions.RemoveSimpleResponseHeadersIEnumerableOfString">
            <summary>Sets the shim of CorsExtensions.RemoveSimpleResponseHeaders(IEnumerable`1&lt;String&gt; headers)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsExtensions._RemoveSimpleRequestHeadersb__0String">
            <summary>Sets the shim of CorsExtensions.&lt;RemoveSimpleRequestHeaders&gt;b__0(String item)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsExtensions._RemoveSimpleResponseHeadersb__2String">
            <summary>Sets the shim of CorsExtensions.&lt;RemoveSimpleResponseHeaders&gt;b__2(String item)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.CorsFluentSettings</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.#ctor(Thinktecture.IdentityModel.Http.Cors.CorsFluentSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllowAll">
            <summary>Sets the shim of CorsFluentSettings.AllowAll()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllowAllMethods">
            <summary>Sets the shim of CorsFluentSettings.AllowAllMethods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllowAllMethodsAndAllRequestHeaders">
            <summary>Sets the shim of CorsFluentSettings.AllowAllMethodsAndAllRequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllowAllRequestHeaders">
            <summary>Sets the shim of CorsFluentSettings.AllowAllRequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllowCookies">
            <summary>Sets the shim of CorsFluentSettings.AllowCookies()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllowMethodsStringArray">
            <summary>Sets the shim of CorsFluentSettings.AllowMethods(String[] methods)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllowRequestHeadersStringArray">
            <summary>Sets the shim of CorsFluentSettings.AllowRequestHeaders(String[] headers)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllowResponseHeadersStringArray">
            <summary>Sets the shim of CorsFluentSettings.AllowResponseHeaders(String[] headers)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.CheckInit">
            <summary>Sets the shim of CorsFluentSettings.CheckInit()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.ConstructorCorsConfiguration">
            <summary>Sets the shim of CorsFluentSettings.CorsFluentSettings(CorsConfiguration config)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.EnsureAdded">
            <summary>Sets the shim of CorsFluentSettings.EnsureAdded()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.FrozenGet">
            <summary>Sets the shim of CorsFluentSettings.get_Frozen()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.SetOriginsStringArray">
            <summary>Sets the shim of CorsFluentSettings.SetOrigins(String[] origins)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.SetResourcesStringArray">
            <summary>Sets the shim of CorsFluentSettings.SetResources(String[] resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings._AllowMethodsb__dString">
            <summary>Sets the shim of CorsFluentSettings.&lt;AllowMethods&gt;b__d(String x)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings._CheckInitb__5String">
            <summary>Sets the shim of CorsFluentSettings.&lt;CheckInit&gt;b__5(String o)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings._CheckInitb__6String">
            <summary>Sets the shim of CorsFluentSettings.&lt;CheckInit&gt;b__6(String c)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings._CheckInitb__7String">
            <summary>Sets the shim of CorsFluentSettings.&lt;CheckInit&gt;b__7(String c)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings._CheckInitb__8StringString">
            <summary>Sets the shim of CorsFluentSettings.&lt;CheckInit&gt;b__8(String c, String o)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.AllowAll">
            <summary>Sets the shim of CorsFluentSettings.AllowAll()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.AllowAllMethods">
            <summary>Sets the shim of CorsFluentSettings.AllowAllMethods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.AllowAllMethodsAndAllRequestHeaders">
            <summary>Sets the shim of CorsFluentSettings.AllowAllMethodsAndAllRequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.AllowAllRequestHeaders">
            <summary>Sets the shim of CorsFluentSettings.AllowAllRequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.AllowCookies">
            <summary>Sets the shim of CorsFluentSettings.AllowCookies()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.AllowMethodsStringArray">
            <summary>Sets the shim of CorsFluentSettings.AllowMethods(String[] methods)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.AllowRequestHeadersStringArray">
            <summary>Sets the shim of CorsFluentSettings.AllowRequestHeaders(String[] headers)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.AllowResponseHeadersStringArray">
            <summary>Sets the shim of CorsFluentSettings.AllowResponseHeaders(String[] headers)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.CheckInit">
            <summary>Sets the shim of CorsFluentSettings.CheckInit()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.EnsureAdded">
            <summary>Sets the shim of CorsFluentSettings.EnsureAdded()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.FrozenGet">
            <summary>Sets the shim of CorsFluentSettings.get_Frozen()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.SetOriginsStringArray">
            <summary>Sets the shim of CorsFluentSettings.SetOrigins(String[] origins)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances.SetResourcesStringArray">
            <summary>Sets the shim of CorsFluentSettings.SetResources(String[] resources)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsFluentSettings.AllInstances._CheckInitb__7String">
            <summary>Sets the shim of CorsFluentSettings.&lt;CheckInit&gt;b__7(String c)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.CorsResourceSettings</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.#ctor(Thinktecture.IdentityModel.Http.Cors.CorsResourceSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.AllowAllOrigins">
            <summary>Sets the shim of CorsResourceSettings.AllowAllOrigins()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.AllowAllOriginsAllMethods">
            <summary>Sets the shim of CorsResourceSettings.AllowAllOriginsAllMethods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.AllowAllOriginsAllMethodsAndAllRequestHeaders">
            <summary>Sets the shim of CorsResourceSettings.AllowAllOriginsAllMethodsAndAllRequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.ConstructorCorsFluentSettings">
            <summary>Sets the shim of CorsResourceSettings.CorsResourceSettings(CorsFluentSettings settings)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.ForAllOrigins">
            <summary>Sets the shim of CorsResourceSettings.ForAllOrigins()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.ForOriginsStringArray">
            <summary>Sets the shim of CorsResourceSettings.ForOrigins(String[] origins)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.AllInstances.AllowAllOrigins">
            <summary>Sets the shim of CorsResourceSettings.AllowAllOrigins()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.AllInstances.AllowAllOriginsAllMethods">
            <summary>Sets the shim of CorsResourceSettings.AllowAllOriginsAllMethods()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.AllInstances.AllowAllOriginsAllMethodsAndAllRequestHeaders">
            <summary>Sets the shim of CorsResourceSettings.AllowAllOriginsAllMethodsAndAllRequestHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.AllInstances.ForAllOrigins">
            <summary>Sets the shim of CorsResourceSettings.ForAllOrigins()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.ShimCorsResourceSettings.AllInstances.ForOriginsStringArray">
            <summary>Sets the shim of CorsResourceSettings.ForOrigins(String[] origins)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessRequest">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.CorsAccessRequest</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessRequest.#ctor(Thinktecture.IdentityModel.Http.Cors.IHttpRequestWrapper)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessRequest.InitializeStub">
            <summary>Initializes a new instance of type StubCorsAccessRequest</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessResponse">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.CorsAccessResponse</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessResponse.InitializeStub">
            <summary>Initializes a new instance of type StubCorsAccessResponse</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsAccessResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfiguration">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.CorsConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubCorsConfiguration</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationAllowProperties">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.CorsConfigurationAllowProperties</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationAllowProperties.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationAllowProperties.InitializeStub">
            <summary>Initializes a new instance of type StubCorsConfigurationAllowProperties</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationAllowProperties.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationAllowProperties.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationAllowProperties.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationEntry">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.CorsConfigurationEntry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationEntry.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationEntry.InitializeStub">
            <summary>Initializes a new instance of type StubCorsConfigurationEntry</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationEntry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationEntry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConfigurationEntry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConstants">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.CorsConstants</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConstants.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConstants.InitializeStub">
            <summary>Initializes a new instance of type StubCorsConstants</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConstants.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConstants.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsConstants.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsEngine">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.CorsEngine</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsEngine.#ctor(Thinktecture.IdentityModel.Http.Cors.CorsConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsEngine.InitializeStub">
            <summary>Initializes a new instance of type StubCorsEngine</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsEngine.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsEngine.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubCorsEngine.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpRequestWrapper">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.IHttpRequestWrapper</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpRequestWrapper.#ctor">
            <summary>Initializes a new instance of type StubIHttpRequestWrapper</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpRequestWrapper.GetHeaderString">
            <summary>Sets the stub of IHttpRequestWrapper.GetHeader(String name)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpRequestWrapper.MethodGet">
            <summary>Sets the stub of IHttpRequestWrapper.get_Method()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpRequestWrapper.PropertiesGet">
            <summary>Sets the stub of IHttpRequestWrapper.get_Properties()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpRequestWrapper.ResourceGet">
            <summary>Sets the stub of IHttpRequestWrapper.get_Resource()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpRequestWrapper.tim::Thinktecture#IdentityModel#Http#Cors#IHttpRequestWrapper#GetHeader(System.String)">
            <summary>Sets the stub of IHttpRequestWrapper.GetHeader(String name)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpRequestWrapper.tim::Thinktecture#IdentityModel#Http#Cors#IHttpRequestWrapper#Method">
            <summary>Sets the stub of IHttpRequestWrapper.get_Method()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpRequestWrapper.tim::Thinktecture#IdentityModel#Http#Cors#IHttpRequestWrapper#Properties">
            <summary>Sets the stub of IHttpRequestWrapper.get_Properties()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpRequestWrapper.tim::Thinktecture#IdentityModel#Http#Cors#IHttpRequestWrapper#Resource">
            <summary>Sets the stub of IHttpRequestWrapper.get_Resource()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpResponseWrapper">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.IHttpResponseWrapper</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpResponseWrapper.#ctor">
            <summary>Initializes a new instance of type StubIHttpResponseWrapper</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpResponseWrapper.AddHeaderStringString">
            <summary>Sets the stub of IHttpResponseWrapper.AddHeader(String name, String value)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Fakes.StubIHttpResponseWrapper.tim::Thinktecture#IdentityModel#Http#Cors#IHttpResponseWrapper#AddHeader(System.String,System.String)">
            <summary>Sets the stub of IHttpResponseWrapper.AddHeader(String name, String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.IIS.CorsHttpModule</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.#ctor(Thinktecture.IdentityModel.Http.Cors.IIS.CorsHttpModule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.Bind(System.Web.IHttpModule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.Constructor">
            <summary>Sets the shim of CorsHttpModule.CorsHttpModule()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.Dispose">
            <summary>Sets the shim of CorsHttpModule.Dispose()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.InitHttpApplication">
            <summary>Sets the shim of CorsHttpModule.Init(HttpApplication app)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.PerformCorsCheck">
            <summary>Sets the shim of CorsHttpModule.PerformCorsCheck()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.app_BeginRequestObjectEventArgs">
            <summary>Sets the shim of CorsHttpModule.app_BeginRequest(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.AllInstances.Dispose">
            <summary>Sets the shim of CorsHttpModule.Dispose()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.AllInstances.InitHttpApplication">
            <summary>Sets the shim of CorsHttpModule.Init(HttpApplication app)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.AllInstances.PerformCorsCheck">
            <summary>Sets the shim of CorsHttpModule.PerformCorsCheck()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimCorsHttpModule.AllInstances.app_BeginRequestObjectEventArgs">
            <summary>Sets the shim of CorsHttpModule.app_BeginRequest(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimUrlBasedCorsConfiguration">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.IIS.UrlBasedCorsConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimUrlBasedCorsConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimUrlBasedCorsConfiguration.#ctor(Thinktecture.IdentityModel.Http.Cors.IIS.UrlBasedCorsConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimUrlBasedCorsConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimUrlBasedCorsConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimUrlBasedCorsConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimUrlBasedCorsConfiguration.ConfigurationGet">
            <summary>Sets the shim of UrlBasedCorsConfiguration.get_Configuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimUrlBasedCorsConfiguration.ConfigurationSetCorsConfiguration">
            <summary>Sets the shim of UrlBasedCorsConfiguration.set_Configuration(CorsConfiguration value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimUrlBasedCorsConfiguration.Constructor">
            <summary>Sets the shim of UrlBasedCorsConfiguration.UrlBasedCorsConfiguration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimUrlBasedCorsConfiguration.StaticConstructor">
            <summary>Sets the shim of UrlBasedCorsConfiguration.UrlBasedCorsConfiguration()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.ShimUrlBasedCorsConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubCorsHttpModule">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.IIS.CorsHttpModule</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubCorsHttpModule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubCorsHttpModule.InitializeStub">
            <summary>Initializes a new instance of type StubCorsHttpModule</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubCorsHttpModule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubCorsHttpModule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubCorsHttpModule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubUrlBasedCorsConfiguration">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.IIS.UrlBasedCorsConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubUrlBasedCorsConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubUrlBasedCorsConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubUrlBasedCorsConfiguration</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubUrlBasedCorsConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubUrlBasedCorsConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.IIS.Fakes.StubUrlBasedCorsConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.Mvc.MvcCorsConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.#ctor(Thinktecture.IdentityModel.Http.Cors.Mvc.MvcCorsConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.ConfigurationGet">
            <summary>Sets the shim of MvcCorsConfiguration.get_Configuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.ConfigurationSetMvcCorsConfiguration">
            <summary>Sets the shim of MvcCorsConfiguration.set_Configuration(MvcCorsConfiguration value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.Constructor">
            <summary>Sets the shim of MvcCorsConfiguration.MvcCorsConfiguration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.ResourceNameIncludesActionNameGet">
            <summary>Sets the shim of MvcCorsConfiguration.get_ResourceNameIncludesActionName()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.ResourceNameIncludesActionNameSetBoolean">
            <summary>Sets the shim of MvcCorsConfiguration.set_ResourceNameIncludesActionName(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.StaticConstructor">
            <summary>Sets the shim of MvcCorsConfiguration.MvcCorsConfiguration()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.AllInstances.ResourceNameIncludesActionNameGet">
            <summary>Sets the shim of MvcCorsConfiguration.get_ResourceNameIncludesActionName()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsConfiguration.AllInstances.ResourceNameIncludesActionNameSetBoolean">
            <summary>Sets the shim of MvcCorsConfiguration.set_ResourceNameIncludesActionName(Boolean value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.Mvc.MvcCorsHttpModule</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.#ctor(Thinktecture.IdentityModel.Http.Cors.Mvc.MvcCorsHttpModule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.Bind(System.Web.IHttpModule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.Constructor">
            <summary>Sets the shim of MvcCorsHttpModule.MvcCorsHttpModule()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.Dispose">
            <summary>Sets the shim of MvcCorsHttpModule.Dispose()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.InitHttpApplication">
            <summary>Sets the shim of MvcCorsHttpModule.Init(HttpApplication app)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.PerformCorsCheck">
            <summary>Sets the shim of MvcCorsHttpModule.PerformCorsCheck()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.app_PreRequestHandlerExecuteObjectEventArgs">
            <summary>Sets the shim of MvcCorsHttpModule.app_PreRequestHandlerExecute(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.AllInstances.Dispose">
            <summary>Sets the shim of MvcCorsHttpModule.Dispose()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.AllInstances.InitHttpApplication">
            <summary>Sets the shim of MvcCorsHttpModule.Init(HttpApplication app)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.AllInstances.PerformCorsCheck">
            <summary>Sets the shim of MvcCorsHttpModule.PerformCorsCheck()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.ShimMvcCorsHttpModule.AllInstances.app_PreRequestHandlerExecuteObjectEventArgs">
            <summary>Sets the shim of MvcCorsHttpModule.app_PreRequestHandlerExecute(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsConfiguration">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.Mvc.MvcCorsConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubMvcCorsConfiguration</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsHttpModule">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.Mvc.MvcCorsHttpModule</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsHttpModule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsHttpModule.InitializeStub">
            <summary>Initializes a new instance of type StubMvcCorsHttpModule</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsHttpModule.PerformCorsCheck">
            <summary>Sets the stub of MvcCorsHttpModule.PerformCorsCheck()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsHttpModule.PerformCorsCheck01">
            <summary>Sets the stub of MvcCorsHttpModule.PerformCorsCheck()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsHttpModule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsHttpModule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.Mvc.Fakes.StubMvcCorsHttpModule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.WebApi.CorsMessageHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.#ctor(Thinktecture.IdentityModel.Http.Cors.WebApi.CorsMessageHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.ConstructorCorsConfigurationHttpConfiguration">
            <summary>Sets the shim of CorsMessageHandler.CorsMessageHandler(CorsConfiguration corsConfiguration, HttpConfiguration httpConfiguration)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.CreateCorsPreflightTaskHttpRequestMessageCancellationToken">
            <summary>Sets the shim of CorsMessageHandler.CreateCorsPreflightTask(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.CreateCorsSimpleTaskHttpRequestMessageCancellationToken">
            <summary>Sets the shim of CorsMessageHandler.CreateCorsSimpleTask(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of CorsMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.AllInstances.CreateCorsPreflightTaskHttpRequestMessageCancellationToken">
            <summary>Sets the shim of CorsMessageHandler.CreateCorsPreflightTask(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.AllInstances.CreateCorsSimpleTaskHttpRequestMessageCancellationToken">
            <summary>Sets the shim of CorsMessageHandler.CreateCorsSimpleTask(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimCorsMessageHandler.AllInstances.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of CorsMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Cors.WebApi.WebApiCorsConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration.#ctor(Thinktecture.IdentityModel.Http.Cors.WebApi.WebApiCorsConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration.Constructor">
            <summary>Sets the shim of WebApiCorsConfiguration.WebApiCorsConfiguration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration.CreateHandlerHttpConfigurationDelegatingHandler">
            <summary>Sets the shim of WebApiCorsConfiguration.CreateHandler(HttpConfiguration httpConfig, DelegatingHandler innerHandler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration.RegisterGlobalHttpConfiguration">
            <summary>Sets the shim of WebApiCorsConfiguration.RegisterGlobal(HttpConfiguration httpConfig)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration.AllInstances.CreateHandlerHttpConfigurationDelegatingHandler">
            <summary>Sets the shim of WebApiCorsConfiguration.CreateHandler(HttpConfiguration httpConfig, DelegatingHandler innerHandler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.ShimWebApiCorsConfiguration.AllInstances.RegisterGlobalHttpConfiguration">
            <summary>Sets the shim of WebApiCorsConfiguration.RegisterGlobal(HttpConfiguration httpConfig)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubCorsMessageHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.WebApi.CorsMessageHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubCorsMessageHandler.#ctor(Thinktecture.IdentityModel.Http.Cors.CorsConfiguration,System.Web.Http.HttpConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubCorsMessageHandler.Dispose(System.Boolean)">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubCorsMessageHandler.DisposeBoolean">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubCorsMessageHandler.InitializeStub">
            <summary>Initializes a new instance of type StubCorsMessageHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubCorsMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>Sets the stub of CorsMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubCorsMessageHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the stub of CorsMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubCorsMessageHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubCorsMessageHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubCorsMessageHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubWebApiCorsConfiguration">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Cors.WebApi.WebApiCorsConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubWebApiCorsConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubWebApiCorsConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubWebApiCorsConfiguration</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubWebApiCorsConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubWebApiCorsConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Cors.WebApi.Fakes.StubWebApiCorsConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Fakes.ShimHeaderEncoding">
            <summary>Shim type of Thinktecture.IdentityModel.Http.HeaderEncoding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.ShimHeaderEncoding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.ShimHeaderEncoding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.ShimHeaderEncoding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Fakes.ShimHeaderEncoding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Fakes.ShimHeaderEncoding.DecodeBase64String">
            <summary>Sets the shim of HeaderEncoding.DecodeBase64(String token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Fakes.ShimHeaderEncoding.EncodeBase64String">
            <summary>Sets the shim of HeaderEncoding.EncodeBase64(String token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Fakes.ShimHeaderEncoding.IsBase64EncodedString">
            <summary>Sets the shim of HeaderEncoding.IsBase64Encoded(String token)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Fakes.ShimRequireHttpsHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Http.RequireHttpsHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.ShimRequireHttpsHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.ShimRequireHttpsHandler.#ctor(Thinktecture.IdentityModel.Http.RequireHttpsHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.ShimRequireHttpsHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.ShimRequireHttpsHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.ShimRequireHttpsHandler.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Fakes.ShimRequireHttpsHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Fakes.ShimRequireHttpsHandler.Constructor">
            <summary>Sets the shim of RequireHttpsHandler.RequireHttpsHandler()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Fakes.ShimRequireHttpsHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of RequireHttpsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Fakes.ShimRequireHttpsHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Fakes.ShimRequireHttpsHandler.AllInstances.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of RequireHttpsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Fakes.StubRequireHttpsHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Http.RequireHttpsHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.StubRequireHttpsHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.StubRequireHttpsHandler.Dispose(System.Boolean)">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Fakes.StubRequireHttpsHandler.DisposeBoolean">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.StubRequireHttpsHandler.InitializeStub">
            <summary>Initializes a new instance of type StubRequireHttpsHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Fakes.StubRequireHttpsHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>Sets the stub of RequireHttpsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Fakes.StubRequireHttpsHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the stub of RequireHttpsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Fakes.StubRequireHttpsHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Fakes.StubRequireHttpsHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Fakes.StubRequireHttpsHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Hawk.Client.HawkValidationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler.#ctor(Thinktecture.IdentityModel.Http.Hawk.Client.HawkValidationHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler.ConstructorFuncOfCredentialFuncOfHttpRequestMessageStringFuncOfHttpResponseMessageStringBoolean">
            <summary>Sets the shim of HawkValidationHandler.HawkValidationHandler(Func`1&lt;Credential&gt; credentialsCallback, Func`2&lt;HttpRequestMessage,String&gt; normalizationCallback, Func`3&lt;HttpResponseMessage,String,Boolean&gt; verificationCallback)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of HawkValidationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler._n__FabricatedMethod7HttpRequestMessageCancellationToken">
            <summary>Sets the shim of HawkValidationHandler.&lt;&gt;n__FabricatedMethod7(HttpRequestMessage , CancellationToken )</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler.AllInstances.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of HawkValidationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.ShimHawkValidationHandler.AllInstances._n__FabricatedMethod7HttpRequestMessageCancellationToken">
            <summary>Sets the shim of HawkValidationHandler.&lt;&gt;n__FabricatedMethod7(HttpRequestMessage , CancellationToken )</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.StubHawkValidationHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Hawk.Client.HawkValidationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.StubHawkValidationHandler.#ctor(System.Func{Thinktecture.IdentityModel.Http.Hawk.Core.Credential},System.Func{System.Net.Http.HttpRequestMessage,System.String},System.Func{System.Net.Http.HttpResponseMessage,System.String,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.StubHawkValidationHandler.Dispose(System.Boolean)">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.StubHawkValidationHandler.DisposeBoolean">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.StubHawkValidationHandler.InitializeStub">
            <summary>Initializes a new instance of type StubHawkValidationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.StubHawkValidationHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>Sets the stub of HawkValidationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.StubHawkValidationHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the stub of HawkValidationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.StubHawkValidationHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.StubHawkValidationHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Client.Fakes.StubHawkValidationHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Hawk.Core.Client.HawkClient</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.#ctor(Thinktecture.IdentityModel.Http.Hawk.Core.Client.HawkClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.ApplicationSpecificDataGet">
            <summary>Sets the shim of HawkClient.get_ApplicationSpecificData()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.ApplicationSpecificDataSetString">
            <summary>Sets the shim of HawkClient.set_ApplicationSpecificData(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.AuthenticateAsyncHttpResponseMessage">
            <summary>Sets the shim of HawkClient.AuthenticateAsync(HttpResponseMessage response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.CompensatorySecondsGet">
            <summary>Sets the shim of HawkClient.get_CompensatorySeconds()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.CompensatorySecondsSetInt32">
            <summary>Sets the shim of HawkClient.set_CompensatorySeconds(Int32 value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.ConstructorFuncOfCredential">
            <summary>Sets the shim of HawkClient.HawkClient(Func`1&lt;Credential&gt; credentialFunc)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.CreateBewitAsyncHttpRequestMessageInt32">
            <summary>Sets the shim of HawkClient.CreateBewitAsync(HttpRequestMessage request, Int32 lifeSeconds)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.CreateBewitInternalAsyncHttpRequestMessageDateTimeInt32">
            <summary>Sets the shim of HawkClient.CreateBewitInternalAsync(HttpRequestMessage request, DateTime utcNow, Int32 lifeSeconds)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.CreateClientAuthorizationAsyncHttpRequestMessage">
            <summary>Sets the shim of HawkClient.CreateClientAuthorizationAsync(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.CreateClientAuthorizationInternalAsyncHttpRequestMessageDateTime">
            <summary>Sets the shim of HawkClient.CreateClientAuthorizationInternalAsync(HttpRequestMessage request, DateTime utcNow)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.StaticConstructor">
            <summary>Sets the shim of HawkClient.HawkClient()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.WebApiSpecificDataGet">
            <summary>Sets the shim of HawkClient.get_WebApiSpecificData()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.WebApiSpecificDataSetString">
            <summary>Sets the shim of HawkClient.set_WebApiSpecificData(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.AllInstances.ApplicationSpecificDataGet">
            <summary>Sets the shim of HawkClient.get_ApplicationSpecificData()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.AllInstances.ApplicationSpecificDataSetString">
            <summary>Sets the shim of HawkClient.set_ApplicationSpecificData(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.AllInstances.AuthenticateAsyncHttpResponseMessage">
            <summary>Sets the shim of HawkClient.AuthenticateAsync(HttpResponseMessage response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.AllInstances.CreateBewitAsyncHttpRequestMessageInt32">
            <summary>Sets the shim of HawkClient.CreateBewitAsync(HttpRequestMessage request, Int32 lifeSeconds)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.AllInstances.CreateBewitInternalAsyncHttpRequestMessageDateTimeInt32">
            <summary>Sets the shim of HawkClient.CreateBewitInternalAsync(HttpRequestMessage request, DateTime utcNow, Int32 lifeSeconds)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.AllInstances.CreateClientAuthorizationAsyncHttpRequestMessage">
            <summary>Sets the shim of HawkClient.CreateClientAuthorizationAsync(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.AllInstances.CreateClientAuthorizationInternalAsyncHttpRequestMessageDateTime">
            <summary>Sets the shim of HawkClient.CreateClientAuthorizationInternalAsync(HttpRequestMessage request, DateTime utcNow)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.AllInstances.WebApiSpecificDataGet">
            <summary>Sets the shim of HawkClient.get_WebApiSpecificData()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.ShimHawkClient.AllInstances.WebApiSpecificDataSetString">
            <summary>Sets the shim of HawkClient.set_WebApiSpecificData(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.StubHawkClient">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Hawk.Core.Client.HawkClient</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.StubHawkClient.#ctor(System.Func{Thinktecture.IdentityModel.Http.Hawk.Core.Credential})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.StubHawkClient.InitializeStub">
            <summary>Initializes a new instance of type StubHawkClient</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.StubHawkClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.StubHawkClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Client.Fakes.StubHawkClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Hawk.Core.Credential</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.#ctor(Thinktecture.IdentityModel.Http.Hawk.Core.Credential)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AlgorithmGet">
            <summary>Sets the shim of Credential.get_Algorithm()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AlgorithmSetSupportedAlgorithms">
            <summary>Sets the shim of Credential.set_Algorithm(SupportedAlgorithms value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.Constructor">
            <summary>Sets the shim of Credential.Credential()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.IdGet">
            <summary>Sets the shim of Credential.get_Id()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.IdSetString">
            <summary>Sets the shim of Credential.set_Id(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.IsValidGet">
            <summary>Sets the shim of Credential.get_IsValid()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.KeyGet">
            <summary>Sets the shim of Credential.get_Key()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.KeySetString">
            <summary>Sets the shim of Credential.set_Key(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.UserGet">
            <summary>Sets the shim of Credential.get_User()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.UserSetString">
            <summary>Sets the shim of Credential.set_User(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AllInstances.AlgorithmGet">
            <summary>Sets the shim of Credential.get_Algorithm()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AllInstances.AlgorithmSetSupportedAlgorithms">
            <summary>Sets the shim of Credential.set_Algorithm(SupportedAlgorithms value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AllInstances.IdGet">
            <summary>Sets the shim of Credential.get_Id()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AllInstances.IdSetString">
            <summary>Sets the shim of Credential.set_Id(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AllInstances.IsValidGet">
            <summary>Sets the shim of Credential.get_IsValid()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AllInstances.KeyGet">
            <summary>Sets the shim of Credential.get_Key()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AllInstances.KeySetString">
            <summary>Sets the shim of Credential.set_Key(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AllInstances.UserGet">
            <summary>Sets the shim of Credential.get_User()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimCredential.AllInstances.UserSetString">
            <summary>Sets the shim of Credential.set_User(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Hawk.Core.HawkServer</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer.#ctor(Thinktecture.IdentityModel.Http.Hawk.Core.HawkServer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer.AuthenticateAsync">
            <summary>Sets the shim of HawkServer.AuthenticateAsync()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer.ConstructorHttpRequestMessageFuncOfStringCredentialFuncOfHttpRequestMessageStringBoolean">
            <summary>Sets the shim of HawkServer.HawkServer(HttpRequestMessage request, Func`2&lt;String,Credential&gt; credentialsFunc, Func`3&lt;HttpRequestMessage,String,Boolean&gt; applicationSpecificDataVerificationCallback)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer.CreateServerAuthorizationAsyncHttpResponseMessageFuncOfHttpResponseMessageString">
            <summary>Sets the shim of HawkServer.CreateServerAuthorizationAsync(HttpResponseMessage response, Func`2&lt;HttpResponseMessage,String&gt; normalizationCallback)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer.AllInstances.AuthenticateAsync">
            <summary>Sets the shim of HawkServer.AuthenticateAsync()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.ShimHawkServer.AllInstances.CreateServerAuthorizationAsyncHttpResponseMessageFuncOfHttpResponseMessageString">
            <summary>Sets the shim of HawkServer.CreateServerAuthorizationAsync(HttpResponseMessage response, Func`2&lt;HttpResponseMessage,String&gt; normalizationCallback)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubCredential">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Hawk.Core.Credential</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubCredential.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubCredential.InitializeStub">
            <summary>Initializes a new instance of type StubCredential</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubCredential.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubCredential.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubCredential.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubHawkServer">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Hawk.Core.HawkServer</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubHawkServer.#ctor(System.Net.Http.HttpRequestMessage,System.Func{System.String,Thinktecture.IdentityModel.Http.Hawk.Core.Credential},System.Func{System.Net.Http.HttpRequestMessage,System.String,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubHawkServer.InitializeStub">
            <summary>Initializes a new instance of type StubHawkServer</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubHawkServer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubHawkServer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Fakes.StubHawkServer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimHawkConstants">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.HawkConstants</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimHawkConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimHawkConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimHawkConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimHawkConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimNonceGenerator">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.NonceGenerator</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimNonceGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimNonceGenerator.#ctor(Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.NonceGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimNonceGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimNonceGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimNonceGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimNonceGenerator.Constructor">
            <summary>Sets the shim of NonceGenerator.NonceGenerator()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimNonceGenerator.GenerateInt32">
            <summary>Sets the shim of NonceGenerator.Generate(Int32 length)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.ShimNonceGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.StubNonceGenerator">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.NonceGenerator</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.StubNonceGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.StubNonceGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubNonceGenerator</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.StubNonceGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.StubNonceGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.Core.Helpers.Fakes.StubNonceGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Http.Hawk.WebApi.HawkAuthenticationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler.#ctor(Thinktecture.IdentityModel.Http.Hawk.WebApi.HawkAuthenticationHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler.ConstructorFuncOfStringCredentialFuncOfHttpResponseMessageStringFuncOfHttpRequestMessageStringBoolean">
            <summary>Sets the shim of HawkAuthenticationHandler.HawkAuthenticationHandler(Func`2&lt;String,Credential&gt; credentialsCallback, Func`2&lt;HttpResponseMessage,String&gt; normalizationCallback, Func`3&lt;HttpRequestMessage,String,Boolean&gt; verificationCallback)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of HawkAuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler._n__FabricatedMethod7HttpRequestMessageCancellationToken">
            <summary>Sets the shim of HawkAuthenticationHandler.&lt;&gt;n__FabricatedMethod7(HttpRequestMessage , CancellationToken )</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler.AllInstances.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of HawkAuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.ShimHawkAuthenticationHandler.AllInstances._n__FabricatedMethod7HttpRequestMessageCancellationToken">
            <summary>Sets the shim of HawkAuthenticationHandler.&lt;&gt;n__FabricatedMethod7(HttpRequestMessage , CancellationToken )</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.StubHawkAuthenticationHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Http.Hawk.WebApi.HawkAuthenticationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.StubHawkAuthenticationHandler.#ctor(System.Func{System.String,Thinktecture.IdentityModel.Http.Hawk.Core.Credential},System.Func{System.Net.Http.HttpResponseMessage,System.String},System.Func{System.Net.Http.HttpRequestMessage,System.String,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.StubHawkAuthenticationHandler.Dispose(System.Boolean)">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.StubHawkAuthenticationHandler.DisposeBoolean">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.StubHawkAuthenticationHandler.InitializeStub">
            <summary>Initializes a new instance of type StubHawkAuthenticationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.StubHawkAuthenticationHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>Sets the stub of HawkAuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.StubHawkAuthenticationHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the stub of HawkAuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.StubHawkAuthenticationHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.StubHawkAuthenticationHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Http.Hawk.WebApi.Fakes.StubHawkAuthenticationHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.CachingMetadataBasedIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.#ctor(Thinktecture.IdentityModel.Tokens.CachingMetadataBasedIssuerNameRegistry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.Constructor">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.CachingMetadataBasedIssuerNameRegistry()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.ConstructorUriStringIMetadataCacheInt32BooleanBoolean">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.CachingMetadataBasedIssuerNameRegistry(Uri metadataAddress, String issuerName, IMetadataCache cache, Int32 cacheDuration, Boolean protect, Boolean lazyLoad)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.GetMetadataFromSource">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.GetMetadataFromSource()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.GetMetadataStream">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.GetMetadataStream()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodeList)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.SetCacheIMetadataCache">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.SetCache(IMetadataCache cache)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry._GetMetadataStreamb__6Task">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.&lt;GetMetadataStream&gt;b__6(Task task)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry._GetMetadataStreamb__7">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.&lt;GetMetadataStream&gt;b__7()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry._LoadCustomConfigurationb__aXmlNode">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.&lt;LoadCustomConfiguration&gt;b__a(XmlNode x)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.AllInstances.GetMetadataFromSource">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.GetMetadataFromSource()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.AllInstances.GetMetadataStream">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.GetMetadataStream()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.AllInstances.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodeList)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.AllInstances.SetCacheIMetadataCache">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.SetCache(IMetadataCache cache)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimCachingMetadataBasedIssuerNameRegistry.AllInstances._GetMetadataStreamb__7">
            <summary>Sets the shim of CachingMetadataBasedIssuerNameRegistry.&lt;GetMetadataStream&gt;b__7()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimClaimMappings">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.ClaimMappings</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimClaimMappings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimClaimMappings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimClaimMappings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimClaimMappings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimClaimMappings.NoneGet">
            <summary>Sets the shim of ClaimMappings.get_None()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimFederationMetadata">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.FederationMetadata</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimFederationMetadata.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimFederationMetadata.#ctor(Thinktecture.IdentityModel.Tokens.FederationMetadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimFederationMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimFederationMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFederationMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFederationMetadata.Constructor">
            <summary>Sets the shim of FederationMetadata.FederationMetadata()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFederationMetadata.GetMetadataStreamUri">
            <summary>Sets the shim of FederationMetadata.GetMetadataStream(Uri url)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFederationMetadata.GetSigningCertificatesUriX509CertificateValidationMode">
            <summary>Sets the shim of FederationMetadata.GetSigningCertificates(Uri url, X509CertificateValidationMode mode)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFederationMetadata._GetSigningCertificatesb__0RoleDescriptor">
            <summary>Sets the shim of FederationMetadata.&lt;GetSigningCertificates&gt;b__0(RoleDescriptor x)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimFederationMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.FileBasedMetadataCache</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.#ctor(Thinktecture.IdentityModel.Tokens.FileBasedMetadataCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.Bind(Thinktecture.IdentityModel.Tokens.IMetadataCache)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.AgeGet">
            <summary>Sets the shim of FileBasedMetadataCache.get_Age()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.Constructor">
            <summary>Sets the shim of FileBasedMetadataCache.FileBasedMetadataCache()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.ConstructorString">
            <summary>Sets the shim of FileBasedMetadataCache.FileBasedMetadataCache(String filename)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.Load">
            <summary>Sets the shim of FileBasedMetadataCache.Load()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the shim of FileBasedMetadataCache.LoadCustomConfiguration(XmlNodeList nodeList)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.SaveByteArray">
            <summary>Sets the shim of FileBasedMetadataCache.Save(Byte[] data)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache._LoadCustomConfigurationb__0XmlNode">
            <summary>Sets the shim of FileBasedMetadataCache.&lt;LoadCustomConfiguration&gt;b__0(XmlNode x)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.AllInstances.AgeGet">
            <summary>Sets the shim of FileBasedMetadataCache.get_Age()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.AllInstances.Load">
            <summary>Sets the shim of FileBasedMetadataCache.Load()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.AllInstances.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the shim of FileBasedMetadataCache.LoadCustomConfiguration(XmlNodeList nodeList)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimFileBasedMetadataCache.AllInstances.SaveByteArray">
            <summary>Sets the shim of FileBasedMetadataCache.Save(Byte[] data)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.GenericUserNameSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.#ctor(Thinktecture.IdentityModel.Tokens.GenericUserNameSecurityTokenHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.CanValidateTokenGet">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.Constructor">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.GenericUserNameSecurityTokenHandler()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.ConstructorGenericUserNameSecurityTokenHandlerValidateUserNameCredentialDelegate">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.GenericUserNameSecurityTokenHandler(ValidateUserNameCredentialDelegate validateUserNameCredential)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.ValidateUserNameCredentialCoreStringString">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.ValidateUserNameCredentialCore(String userName, String password)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.ValidateUserNameCredentialGet">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.get_ValidateUserNameCredential()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.ValidateUserNameCredentialSetGenericUserNameSecurityTokenHandlerValidateUserNameCredentialDelegate">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.set_ValidateUserNameCredential(ValidateUserNameCredentialDelegate value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.AllInstances.CanValidateTokenGet">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.AllInstances.ValidateTokenSecurityToken">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.AllInstances.ValidateUserNameCredentialCoreStringString">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.ValidateUserNameCredentialCore(String userName, String password)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.AllInstances.ValidateUserNameCredentialGet">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.get_ValidateUserNameCredential()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimGenericUserNameSecurityTokenHandler.AllInstances.ValidateUserNameCredentialSetGenericUserNameSecurityTokenHandlerValidateUserNameCredentialDelegate">
            <summary>Sets the shim of GenericUserNameSecurityTokenHandler.set_ValidateUserNameCredential(ValidateUserNameCredentialDelegate value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimHmacSigningCredentials">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.HmacSigningCredentials</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimHmacSigningCredentials.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimHmacSigningCredentials.#ctor(Thinktecture.IdentityModel.Tokens.HmacSigningCredentials)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimHmacSigningCredentials.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimHmacSigningCredentials.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimHmacSigningCredentials.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimHmacSigningCredentials.ConstructorByteArray">
            <summary>Sets the shim of HmacSigningCredentials.HmacSigningCredentials(Byte[] key)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimHmacSigningCredentials.ConstructorString">
            <summary>Sets the shim of HmacSigningCredentials.HmacSigningCredentials(String base64EncodedKey)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimHmacSigningCredentials.CreateDigestAlgorithmByteArray">
            <summary>Sets the shim of HmacSigningCredentials.CreateDigestAlgorithm(Byte[] key)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimHmacSigningCredentials.CreateSignatureAlgorithmByteArray">
            <summary>Sets the shim of HmacSigningCredentials.CreateSignatureAlgorithm(Byte[] key)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimHmacSigningCredentials.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.MetadataBasedIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.#ctor(Thinktecture.IdentityModel.Tokens.MetadataBasedIssuerNameRegistry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.Constructor">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.MetadataBasedIssuerNameRegistry()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.ConstructorUriStringX509CertificateValidationModeBoolean">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.MetadataBasedIssuerNameRegistry(Uri metadataAddress, String issuerName, X509CertificateValidationMode mode, Boolean lazyLoad)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.GetIssuerNameSecurityToken">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.GetMetadataStream">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.GetMetadataStream()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodeList)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.LoadMetadata">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.LoadMetadata()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.StaticConstructor">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.MetadataBasedIssuerNameRegistry()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry._LoadCustomConfigurationb__4XmlNode">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.&lt;LoadCustomConfiguration&gt;b__4(XmlNode x)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry._LoadMetadatab__2RoleDescriptor">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.&lt;LoadMetadata&gt;b__2(RoleDescriptor x)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.AllInstances.GetIssuerNameSecurityToken">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.AllInstances.GetMetadataStream">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.GetMetadataStream()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.AllInstances.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodeList)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimMetadataBasedIssuerNameRegistry.AllInstances.LoadMetadata">
            <summary>Sets the shim of MetadataBasedIssuerNameRegistry.LoadMetadata()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityToken">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.SimpleSecurityToken</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityToken.#ctor(Thinktecture.IdentityModel.Tokens.SimpleSecurityToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityToken.ConstructorString">
            <summary>Sets the shim of SimpleSecurityToken.SimpleSecurityToken(String token)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.SimpleSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.#ctor(Thinktecture.IdentityModel.Tokens.SimpleSecurityTokenHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.ConstructorSimpleSecurityTokenHandlerValidateTokenDelegate">
            <summary>Sets the shim of SimpleSecurityTokenHandler.SimpleSecurityTokenHandler(ValidateTokenDelegate validator)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.ConstructorString">
            <summary>Sets the shim of SimpleSecurityTokenHandler.SimpleSecurityTokenHandler(String identifier)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.ConstructorStringSimpleSecurityTokenHandlerValidateTokenDelegate">
            <summary>Sets the shim of SimpleSecurityTokenHandler.SimpleSecurityTokenHandler(String identifier, ValidateTokenDelegate validator)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.GetTokenTypeIdentifiers">
            <summary>Sets the shim of SimpleSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.ReadTokenString">
            <summary>Sets the shim of SimpleSecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.TokenTypeGet">
            <summary>Sets the shim of SimpleSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the shim of SimpleSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.ValidatorGet">
            <summary>Sets the shim of SimpleSecurityTokenHandler.get_Validator()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.ValidatorSetSimpleSecurityTokenHandlerValidateTokenDelegate">
            <summary>Sets the shim of SimpleSecurityTokenHandler.set_Validator(ValidateTokenDelegate value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.WriteTokenSecurityToken">
            <summary>Sets the shim of SimpleSecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.AllInstances.GetTokenTypeIdentifiers">
            <summary>Sets the shim of SimpleSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.AllInstances.ReadTokenString">
            <summary>Sets the shim of SimpleSecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.AllInstances.TokenTypeGet">
            <summary>Sets the shim of SimpleSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.AllInstances.ValidateTokenSecurityToken">
            <summary>Sets the shim of SimpleSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.AllInstances.ValidatorGet">
            <summary>Sets the shim of SimpleSecurityTokenHandler.get_Validator()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.AllInstances.ValidatorSetSimpleSecurityTokenHandlerValidateTokenDelegate">
            <summary>Sets the shim of SimpleSecurityTokenHandler.set_Validator(ValidateTokenDelegate value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleSecurityTokenHandler.AllInstances.WriteTokenSecurityToken">
            <summary>Sets the shim of SimpleSecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.SimpleWebToken</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.#ctor(Thinktecture.IdentityModel.Tokens.SimpleWebToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.AudienceUriGet">
            <summary>Sets the shim of SimpleWebToken.get_AudienceUri()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.ClaimsGet">
            <summary>Sets the shim of SimpleWebToken.get_Claims()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.ConstructorUriStringDateTimeListOfClaimInMemorySymmetricSecurityKey">
            <summary>Sets the shim of SimpleWebToken.SimpleWebToken(Uri audienceUri, String issuer, DateTime expiresOn, List`1&lt;Claim&gt; claims, InMemorySymmetricSecurityKey signingKey)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.ConstructorUriStringDateTimeListOfClaimStringString">
            <summary>Sets the shim of SimpleWebToken.SimpleWebToken(Uri audienceUri, String issuer, DateTime expiresOn, List`1&lt;Claim&gt; claims, String signature, String unsignedString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.IdGet">
            <summary>Sets the shim of SimpleWebToken.get_Id()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.IssuerGet">
            <summary>Sets the shim of SimpleWebToken.get_Issuer()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.SecurityKeysGet">
            <summary>Sets the shim of SimpleWebToken.get_SecurityKeys()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.SignatureGet">
            <summary>Sets the shim of SimpleWebToken.get_Signature()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.ValidFromGet">
            <summary>Sets the shim of SimpleWebToken.get_ValidFrom()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.ValidToGet">
            <summary>Sets the shim of SimpleWebToken.get_ValidTo()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.VerifySignatureByteArray">
            <summary>Sets the shim of SimpleWebToken.VerifySignature(Byte[] key)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.AllInstances.AudienceUriGet">
            <summary>Sets the shim of SimpleWebToken.get_AudienceUri()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.AllInstances.ClaimsGet">
            <summary>Sets the shim of SimpleWebToken.get_Claims()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.AllInstances.IdGet">
            <summary>Sets the shim of SimpleWebToken.get_Id()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.AllInstances.IssuerGet">
            <summary>Sets the shim of SimpleWebToken.get_Issuer()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.AllInstances.SecurityKeysGet">
            <summary>Sets the shim of SimpleWebToken.get_SecurityKeys()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.AllInstances.SignatureGet">
            <summary>Sets the shim of SimpleWebToken.get_Signature()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.AllInstances.ValidFromGet">
            <summary>Sets the shim of SimpleWebToken.get_ValidFrom()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.AllInstances.ValidToGet">
            <summary>Sets the shim of SimpleWebToken.get_ValidTo()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebToken.AllInstances.VerifySignatureByteArray">
            <summary>Sets the shim of SimpleWebToken.VerifySignature(Byte[] key)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.SimpleWebTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.#ctor(Thinktecture.IdentityModel.Tokens.SimpleWebTokenHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.CanReadTokenString">
            <summary>Sets the shim of SimpleWebTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.CanReadTokenXmlReader">
            <summary>Sets the shim of SimpleWebTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.CanValidateTokenGet">
            <summary>Sets the shim of SimpleWebTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.CanWriteTokenGet">
            <summary>Sets the shim of SimpleWebTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.Constructor">
            <summary>Sets the shim of SimpleWebTokenHandler.SimpleWebTokenHandler()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.ConstructorString">
            <summary>Sets the shim of SimpleWebTokenHandler.SimpleWebTokenHandler(String identifier)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.CreateClaimsSimpleWebTokenStringBuilder">
            <summary>Sets the shim of SimpleWebTokenHandler.CreateClaims(SimpleWebToken swt, StringBuilder sb)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.CreateSecurityTokenReferenceSecurityTokenBoolean">
            <summary>Sets the shim of SimpleWebTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.CreateTokenSecurityTokenDescriptor">
            <summary>Sets the shim of SimpleWebTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.CreateUnsignedTokenSimpleWebToken">
            <summary>Sets the shim of SimpleWebTokenHandler.CreateUnsignedToken(SimpleWebToken swt)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.DecodeClaimsStringNameValueCollection">
            <summary>Sets the shim of SimpleWebTokenHandler.DecodeClaims(String issuer, NameValueCollection rawClaims)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.DecodeExpiryString">
            <summary>Sets the shim of SimpleWebTokenHandler.DecodeExpiry(String expiry)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.GetTokenTypeIdentifiers">
            <summary>Sets the shim of SimpleWebTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.ParseTokenString">
            <summary>Sets the shim of SimpleWebTokenHandler.ParseToken(String encodedToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.ReadTokenString">
            <summary>Sets the shim of SimpleWebTokenHandler.ReadToken(String rawToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.ReadTokenXmlReader">
            <summary>Sets the shim of SimpleWebTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.SignVerifySimpleWebTokenByteArray">
            <summary>Sets the shim of SimpleWebTokenHandler.SignVerify(SimpleWebToken token, Byte[] key)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.TokenTypeGet">
            <summary>Sets the shim of SimpleWebTokenHandler.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the shim of SimpleWebTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.WriteTokenSecurityToken">
            <summary>Sets the shim of SimpleWebTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.WriteTokenXmlWriterSecurityToken">
            <summary>Sets the shim of SimpleWebTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.CanReadTokenString">
            <summary>Sets the shim of SimpleWebTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.CanReadTokenXmlReader">
            <summary>Sets the shim of SimpleWebTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.CanValidateTokenGet">
            <summary>Sets the shim of SimpleWebTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.CanWriteTokenGet">
            <summary>Sets the shim of SimpleWebTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.CreateSecurityTokenReferenceSecurityTokenBoolean">
            <summary>Sets the shim of SimpleWebTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.CreateTokenSecurityTokenDescriptor">
            <summary>Sets the shim of SimpleWebTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.DecodeClaimsStringNameValueCollection">
            <summary>Sets the shim of SimpleWebTokenHandler.DecodeClaims(String issuer, NameValueCollection rawClaims)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.DecodeExpiryString">
            <summary>Sets the shim of SimpleWebTokenHandler.DecodeExpiry(String expiry)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.GetTokenTypeIdentifiers">
            <summary>Sets the shim of SimpleWebTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.ParseTokenString">
            <summary>Sets the shim of SimpleWebTokenHandler.ParseToken(String encodedToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.ReadTokenString">
            <summary>Sets the shim of SimpleWebTokenHandler.ReadToken(String rawToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.ReadTokenXmlReader">
            <summary>Sets the shim of SimpleWebTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.SignVerifySimpleWebTokenByteArray">
            <summary>Sets the shim of SimpleWebTokenHandler.SignVerify(SimpleWebToken token, Byte[] key)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.TokenTypeGet">
            <summary>Sets the shim of SimpleWebTokenHandler.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.ValidateTokenSecurityToken">
            <summary>Sets the shim of SimpleWebTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.WriteTokenSecurityToken">
            <summary>Sets the shim of SimpleWebTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimSimpleWebTokenHandler.AllInstances.WriteTokenXmlWriterSecurityToken">
            <summary>Sets the shim of SimpleWebTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimTestIssuerNameRegistry">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.TestIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimTestIssuerNameRegistry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimTestIssuerNameRegistry.#ctor(Thinktecture.IdentityModel.Tokens.TestIssuerNameRegistry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimTestIssuerNameRegistry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimTestIssuerNameRegistry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimTestIssuerNameRegistry.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimTestIssuerNameRegistry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimTestIssuerNameRegistry.Constructor">
            <summary>Sets the shim of TestIssuerNameRegistry.TestIssuerNameRegistry()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimTestIssuerNameRegistry.GetIssuerNameSecurityToken">
            <summary>Sets the shim of TestIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimTestIssuerNameRegistry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimTestIssuerNameRegistry.AllInstances.GetIssuerNameSecurityToken">
            <summary>Sets the shim of TestIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.WrappedSecurityToken`1</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.#ctor(Thinktecture.IdentityModel.Tokens.WrappedSecurityToken{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.ConstructorT0">
            <summary>Sets the shim of WrappedSecurityToken`1.WrappedSecurityToken`1(!0 token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.IdGet">
            <summary>Sets the shim of WrappedSecurityToken`1.get_Id()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.SecurityKeysGet">
            <summary>Sets the shim of WrappedSecurityToken`1.get_SecurityKeys()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.TokenGet">
            <summary>Sets the shim of WrappedSecurityToken`1.get_Token()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.ValidFromGet">
            <summary>Sets the shim of WrappedSecurityToken`1.get_ValidFrom()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.ValidToGet">
            <summary>Sets the shim of WrappedSecurityToken`1.get_ValidTo()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.AllInstances.IdGet">
            <summary>Sets the shim of WrappedSecurityToken`1.get_Id()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.AllInstances.SecurityKeysGet">
            <summary>Sets the shim of WrappedSecurityToken`1.get_SecurityKeys()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.AllInstances.TokenGet">
            <summary>Sets the shim of WrappedSecurityToken`1.get_Token()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.AllInstances.ValidFromGet">
            <summary>Sets the shim of WrappedSecurityToken`1.get_ValidFrom()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.ShimWrappedSecurityToken`1.AllInstances.ValidToGet">
            <summary>Sets the shim of WrappedSecurityToken`1.get_ValidTo()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.CachingMetadataBasedIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.#ctor(System.Uri,System.String,Thinktecture.IdentityModel.Tokens.IMetadataCache,System.Int32,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)">
            <summary>Sets the stub of IssuerNameRegistry.GetIssuerName(SecurityToken securityToken, String requestedIssuerName)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.GetIssuerNameSecurityToken">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.GetIssuerNameSecurityTokenString">
            <summary>Sets the stub of IssuerNameRegistry.GetIssuerName(SecurityToken securityToken, String requestedIssuerName)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.GetMetadataStream">
            <summary>Sets the stub of CachingMetadataBasedIssuerNameRegistry.GetMetadataStream()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.GetMetadataStream01">
            <summary>Sets the stub of CachingMetadataBasedIssuerNameRegistry.GetMetadataStream()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.GetWindowsIssuerName">
            <summary>Sets the stub of IssuerNameRegistry.GetWindowsIssuerName()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.GetWindowsIssuerName01">
            <summary>Sets the stub of IssuerNameRegistry.GetWindowsIssuerName()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.InitializeStub">
            <summary>Initializes a new instance of type StubCachingMetadataBasedIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of CachingMetadataBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodeList)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of CachingMetadataBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodeList)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.LoadMetadata">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.LoadMetadata()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.LoadMetadata01">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.LoadMetadata()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubCachingMetadataBasedIssuerNameRegistry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubFederationMetadata">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.FederationMetadata</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubFederationMetadata.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubFederationMetadata.InitializeStub">
            <summary>Initializes a new instance of type StubFederationMetadata</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubFederationMetadata.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubFederationMetadata.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubFederationMetadata.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubFileBasedMetadataCache">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.FileBasedMetadataCache</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubFileBasedMetadataCache.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubFileBasedMetadataCache.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubFileBasedMetadataCache.InitializeStub">
            <summary>Initializes a new instance of type StubFileBasedMetadataCache</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubFileBasedMetadataCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubFileBasedMetadataCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubFileBasedMetadataCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.GenericUserNameSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.#ctor(Thinktecture.IdentityModel.Tokens.GenericUserNameSecurityTokenHandler.ValidateUserNameCredentialDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.AttachBackingFieldToRetainPassword">
            <summary>Attaches delegates to emulate StubGenericUserNameSecurityTokenHandler.RetainPassword as a property with a backing field.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of UserNameSecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanReadToken(System.String)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanReadTokenString">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanReadTokenXmlReader">
            <summary>Sets the stub of UserNameSecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanValidateTokenGet">
            <summary>Sets the stub of GenericUserNameSecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanWriteKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanWriteTokenGet">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CreateSecurityTokenReferenceSecurityTokenBoolean">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CreateTokenSecurityTokenDescriptor">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.DetectReplayedTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.GetTokenTypeIdentifiers">
            <summary>Sets the stub of UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.GetTokenTypeIdentifiers01">
            <summary>Sets the stub of UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.InitializeStub">
            <summary>Initializes a new instance of type StubGenericUserNameSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of UserNameSecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ReadToken(System.String)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ReadTokenString">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ReadTokenXmlReader">
            <summary>Sets the stub of UserNameSecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ReadTokenXmlReaderSecurityTokenResolver">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.RetainPasswordGet">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_RetainPassword()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.RetainPasswordSetBoolean">
            <summary>Sets the stub of UserNameSecurityTokenHandler.set_RetainPassword(Boolean value)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.TokenTypeGet">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of GenericUserNameSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the stub of GenericUserNameSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ValidateUserNameCredentialCore(System.String,System.String)">
            <summary>Sets the stub of GenericUserNameSecurityTokenHandler.ValidateUserNameCredentialCore(String userName, String password)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.ValidateUserNameCredentialCoreStringString">
            <summary>Sets the stub of GenericUserNameSecurityTokenHandler.ValidateUserNameCredentialCore(String userName, String password)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.WriteKeyIdentifierClauseXmlWriterSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of UserNameSecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.WriteTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.WriteTokenXmlWriterSecurityToken">
            <summary>Sets the stub of UserNameSecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanValidateToken">
            <summary>Sets the stub of GenericUserNameSecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.CanWriteToken">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.RetainPassword">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_RetainPassword()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubGenericUserNameSecurityTokenHandler.TokenType">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubHmacSigningCredentials">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.HmacSigningCredentials</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubHmacSigningCredentials.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubHmacSigningCredentials.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubHmacSigningCredentials.InitializeStub">
            <summary>Initializes a new instance of type StubHmacSigningCredentials</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubHmacSigningCredentials.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubHmacSigningCredentials.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubHmacSigningCredentials.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubIMetadataCache">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.IMetadataCache</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubIMetadataCache.#ctor">
            <summary>Initializes a new instance of type StubIMetadataCache</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubIMetadataCache.AgeGet">
            <summary>Sets the stub of IMetadataCache.get_Age()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubIMetadataCache.Load">
            <summary>Sets the stub of IMetadataCache.Load()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubIMetadataCache.SaveByteArray">
            <summary>Sets the stub of IMetadataCache.Save(Byte[] data)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubIMetadataCache.tim::Thinktecture#IdentityModel#Tokens#IMetadataCache#Load">
            <summary>Sets the stub of IMetadataCache.Load()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubIMetadataCache.tim::Thinktecture#IdentityModel#Tokens#IMetadataCache#Save(System.Byte[])">
            <summary>Sets the stub of IMetadataCache.Save(Byte[] data)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubIMetadataCache.tim::Thinktecture#IdentityModel#Tokens#IMetadataCache#Age">
            <summary>Sets the stub of IMetadataCache.get_Age()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.MetadataBasedIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.#ctor(System.Uri,System.String,System.ServiceModel.Security.X509CertificateValidationMode,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)">
            <summary>Sets the stub of IssuerNameRegistry.GetIssuerName(SecurityToken securityToken, String requestedIssuerName)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.GetIssuerNameSecurityToken">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.GetIssuerNameSecurityTokenString">
            <summary>Sets the stub of IssuerNameRegistry.GetIssuerName(SecurityToken securityToken, String requestedIssuerName)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.GetMetadataStream">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.GetMetadataStream()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.GetMetadataStream01">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.GetMetadataStream()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.GetWindowsIssuerName">
            <summary>Sets the stub of IssuerNameRegistry.GetWindowsIssuerName()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.GetWindowsIssuerName01">
            <summary>Sets the stub of IssuerNameRegistry.GetWindowsIssuerName()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.InitializeStub">
            <summary>Initializes a new instance of type StubMetadataBasedIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodeList)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodeList)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.LoadMetadata">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.LoadMetadata()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.LoadMetadata01">
            <summary>Sets the stub of MetadataBasedIssuerNameRegistry.LoadMetadata()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubMetadataBasedIssuerNameRegistry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.SimpleSecurityToken</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.CanCreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.CanCreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.CreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.CreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of CreateKeyIdentifierClause()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.IdGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_Id()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleSecurityToken</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.MatchesKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.ResolveKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.SecurityKeysGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_SecurityKeys()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.ValidFromGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidFrom()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.ValidToGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidTo()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.Id">
            <summary>Sets the stub of WrappedSecurityToken`1.get_Id()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.SecurityKeys">
            <summary>Sets the stub of WrappedSecurityToken`1.get_SecurityKeys()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.ValidFrom">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidFrom()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityToken.ValidTo">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidTo()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.SimpleSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.#ctor(Thinktecture.IdentityModel.Tokens.SimpleSecurityTokenHandler.ValidateTokenDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.#ctor(System.String,Thinktecture.IdentityModel.Tokens.SimpleSecurityTokenHandler.ValidateTokenDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanReadToken(System.String)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanReadTokenString">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanReadTokenXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanValidateTokenGet">
            <summary>Sets the stub of SecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanWriteKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanWriteTokenGet">
            <summary>Sets the stub of SecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CreateSecurityTokenReferenceSecurityTokenBoolean">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CreateTokenSecurityTokenDescriptor">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.DetectReplayedTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.GetTokenTypeIdentifiers">
            <summary>Sets the stub of SimpleSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.GetTokenTypeIdentifiers01">
            <summary>Sets the stub of SimpleSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.ReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.ReadToken(System.String)">
            <summary>Sets the stub of SimpleSecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.ReadTokenString">
            <summary>Sets the stub of SimpleSecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.ReadTokenXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.ReadTokenXmlReaderSecurityTokenResolver">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.TokenTypeGet">
            <summary>Sets the stub of SimpleSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SimpleSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the stub of SimpleSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.WriteKeyIdentifierClauseXmlWriterSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SimpleSecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.WriteTokenSecurityToken">
            <summary>Sets the stub of SimpleSecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.WriteTokenXmlWriterSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanValidateToken">
            <summary>Sets the stub of SecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.CanWriteToken">
            <summary>Sets the stub of SecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleSecurityTokenHandler.TokenType">
            <summary>Sets the stub of SimpleSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.SimpleWebToken</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.#ctor(System.Uri,System.String,System.DateTime,System.Collections.Generic.List{System.Security.Claims.Claim},System.IdentityModel.Tokens.InMemorySymmetricSecurityKey)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.#ctor(System.Uri,System.String,System.DateTime,System.Collections.Generic.List{System.Security.Claims.Claim},System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.CanCreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.CanCreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.CreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.CreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of CreateKeyIdentifierClause()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.IdGet">
            <summary>Sets the stub of SimpleWebToken.get_Id()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleWebToken</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.MatchesKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.ResolveKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.SecurityKeysGet">
            <summary>Sets the stub of SimpleWebToken.get_SecurityKeys()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.ValidFromGet">
            <summary>Sets the stub of SimpleWebToken.get_ValidFrom()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.ValidToGet">
            <summary>Sets the stub of SimpleWebToken.get_ValidTo()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.Id">
            <summary>Sets the stub of SimpleWebToken.get_Id()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.SecurityKeys">
            <summary>Sets the stub of SimpleWebToken.get_SecurityKeys()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.ValidFrom">
            <summary>Sets the stub of SimpleWebToken.get_ValidFrom()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebToken.ValidTo">
            <summary>Sets the stub of SimpleWebToken.get_ValidTo()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.SimpleWebTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CanReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CanReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of SimpleWebTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CanReadTokenXmlReader">
            <summary>Sets the stub of SimpleWebTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CanValidateTokenGet">
            <summary>Sets the stub of SimpleWebTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CanWriteKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CanWriteTokenGet">
            <summary>Sets the stub of SimpleWebTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
            <summary>Sets the stub of SimpleWebTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CreateSecurityTokenReferenceSecurityTokenBoolean">
            <summary>Sets the stub of SimpleWebTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
            <summary>Sets the stub of SimpleWebTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CreateTokenSecurityTokenDescriptor">
            <summary>Sets the stub of SimpleWebTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.DetectReplayedTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.GetTokenTypeIdentifiers">
            <summary>Sets the stub of SimpleWebTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.GetTokenTypeIdentifiers01">
            <summary>Sets the stub of SimpleWebTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleWebTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.ReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.ReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of SimpleWebTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.ReadToken(System.String)">
            <summary>Sets the stub of SimpleWebTokenHandler.ReadToken(String rawToken)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.ReadTokenString">
            <summary>Sets the stub of SimpleWebTokenHandler.ReadToken(String rawToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.ReadTokenXmlReader">
            <summary>Sets the stub of SimpleWebTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.ReadTokenXmlReaderSecurityTokenResolver">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.TokenTypeGet">
            <summary>Sets the stub of SimpleWebTokenHandler.get_TokenType()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SimpleWebTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the stub of SimpleWebTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.WriteKeyIdentifierClauseXmlWriterSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SimpleWebTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SimpleWebTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.WriteTokenSecurityToken">
            <summary>Sets the stub of SimpleWebTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.WriteTokenXmlWriterSecurityToken">
            <summary>Sets the stub of SimpleWebTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CanValidateToken">
            <summary>Sets the stub of SimpleWebTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.CanWriteToken">
            <summary>Sets the stub of SimpleWebTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubSimpleWebTokenHandler.TokenType">
            <summary>Sets the stub of SimpleWebTokenHandler.get_TokenType()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.TestIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of TestIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)">
            <summary>Sets the stub of IssuerNameRegistry.GetIssuerName(SecurityToken securityToken, String requestedIssuerName)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.GetIssuerNameSecurityToken">
            <summary>Sets the stub of TestIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.GetIssuerNameSecurityTokenString">
            <summary>Sets the stub of IssuerNameRegistry.GetIssuerName(SecurityToken securityToken, String requestedIssuerName)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.GetWindowsIssuerName">
            <summary>Sets the stub of IssuerNameRegistry.GetWindowsIssuerName()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.GetWindowsIssuerName01">
            <summary>Sets the stub of IssuerNameRegistry.GetWindowsIssuerName()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.InitializeStub">
            <summary>Initializes a new instance of type StubTestIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubTestIssuerNameRegistry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.WrappedSecurityToken`1</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.CanCreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.CanCreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.CreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.CreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of CreateKeyIdentifierClause()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.IdGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_Id()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.InitializeStub">
            <summary>Initializes a new instance of type StubWrappedSecurityToken</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.MatchesKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.ResolveKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.SecurityKeysGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_SecurityKeys()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.ValidFromGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidFrom()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.ValidToGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidTo()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.Id">
            <summary>Sets the stub of WrappedSecurityToken`1.get_Id()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.SecurityKeys">
            <summary>Sets the stub of WrappedSecurityToken`1.get_SecurityKeys()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.ValidFrom">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidFrom()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Fakes.StubWrappedSecurityToken`1.ValidTo">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidTo()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.#ctor(Thinktecture.IdentityModel.Tokens.Http.AuthenticationConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AddMappingAuthenticationOptionMapping">
            <summary>Sets the shim of AuthenticationConfiguration.AddMapping(AuthenticationOptionMapping mapping)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.ClaimsAuthenticationManagerGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_ClaimsAuthenticationManager()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.ClaimsAuthenticationManagerSetClaimsAuthenticationManager">
            <summary>Sets the shim of AuthenticationConfiguration.set_ClaimsAuthenticationManager(ClaimsAuthenticationManager value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.Constructor">
            <summary>Sets the shim of AuthenticationConfiguration.AuthenticationConfiguration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.EnableSessionTokenGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_EnableSessionToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.EnableSessionTokenSetBoolean">
            <summary>Sets the shim of AuthenticationConfiguration.set_EnableSessionToken(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.HasAuthorizationHeaderMappingGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_HasAuthorizationHeaderMapping()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.HasClientCertificateMappingGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_HasClientCertificateMapping()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.HasCookieMappingGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_HasCookieMapping()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.HasHeaderMappingGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_HasHeaderMapping()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.HasQueryStringMappingGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_HasQueryStringMapping()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.InheritHostClientIdentityGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_InheritHostClientIdentity()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.InheritHostClientIdentitySetBoolean">
            <summary>Sets the shim of AuthenticationConfiguration.set_InheritHostClientIdentity(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.MappingsGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_Mappings()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.MappingsSetListOfAuthenticationOptionMapping">
            <summary>Sets the shim of AuthenticationConfiguration.set_Mappings(List`1&lt;AuthenticationOptionMapping&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.RequireSslGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_RequireSsl()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.RequireSslSetBoolean">
            <summary>Sets the shim of AuthenticationConfiguration.set_RequireSsl(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.SendWwwAuthenticateResponseHeadersGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_SendWwwAuthenticateResponseHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.SendWwwAuthenticateResponseHeadersSetBoolean">
            <summary>Sets the shim of AuthenticationConfiguration.set_SendWwwAuthenticateResponseHeaders(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.SessionTokenGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_SessionToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.SessionTokenSetSessionTokenConfiguration">
            <summary>Sets the shim of AuthenticationConfiguration.set_SessionToken(SessionTokenConfiguration value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.SetPrincipalOnRequestInstanceGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_SetPrincipalOnRequestInstance()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.SetPrincipalOnRequestInstanceSetBoolean">
            <summary>Sets the shim of AuthenticationConfiguration.set_SetPrincipalOnRequestInstance(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.TryGetAuthorizationHeaderMappingStringSecurityTokenHandlerCollectionOut">
            <summary>Sets the shim of AuthenticationConfiguration.TryGetAuthorizationHeaderMapping(String scheme, SecurityTokenHandlerCollection&amp; handler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.TryGetClientCertificateMappingSecurityTokenHandlerCollectionOut">
            <summary>Sets the shim of AuthenticationConfiguration.TryGetClientCertificateMapping(SecurityTokenHandlerCollection&amp; handler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.TryGetHeaderMappingStringSecurityTokenHandlerCollectionOut">
            <summary>Sets the shim of AuthenticationConfiguration.TryGetHeaderMapping(String headerName, SecurityTokenHandlerCollection&amp; handler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.TryGetQueryStringMappingStringSecurityTokenHandlerCollectionOut">
            <summary>Sets the shim of AuthenticationConfiguration.TryGetQueryStringMapping(String paramName, SecurityTokenHandlerCollection&amp; handler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration._TryGetAuthorizationHeaderMappingb__4AuthenticationOptionMapping">
            <summary>Sets the shim of AuthenticationConfiguration.&lt;TryGetAuthorizationHeaderMapping&gt;b__4(AuthenticationOptionMapping m)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration._TryGetClientCertificateMappingb__12AuthenticationOptionMapping">
            <summary>Sets the shim of AuthenticationConfiguration.&lt;TryGetClientCertificateMapping&gt;b__12(AuthenticationOptionMapping m)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration._TryGetClientCertificateMappingb__13AuthenticationOptionMapping">
            <summary>Sets the shim of AuthenticationConfiguration.&lt;TryGetClientCertificateMapping&gt;b__13(AuthenticationOptionMapping m)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration._TryGetHeaderMappingb__9AuthenticationOptionMapping">
            <summary>Sets the shim of AuthenticationConfiguration.&lt;TryGetHeaderMapping&gt;b__9(AuthenticationOptionMapping m)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration._TryGetQueryStringMappingb__eAuthenticationOptionMapping">
            <summary>Sets the shim of AuthenticationConfiguration.&lt;TryGetQueryStringMapping&gt;b__e(AuthenticationOptionMapping m)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.AddMappingAuthenticationOptionMapping">
            <summary>Sets the shim of AuthenticationConfiguration.AddMapping(AuthenticationOptionMapping mapping)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.ClaimsAuthenticationManagerGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_ClaimsAuthenticationManager()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.ClaimsAuthenticationManagerSetClaimsAuthenticationManager">
            <summary>Sets the shim of AuthenticationConfiguration.set_ClaimsAuthenticationManager(ClaimsAuthenticationManager value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.EnableSessionTokenGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_EnableSessionToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.EnableSessionTokenSetBoolean">
            <summary>Sets the shim of AuthenticationConfiguration.set_EnableSessionToken(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.HasAuthorizationHeaderMappingGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_HasAuthorizationHeaderMapping()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.HasClientCertificateMappingGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_HasClientCertificateMapping()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.HasCookieMappingGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_HasCookieMapping()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.HasHeaderMappingGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_HasHeaderMapping()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.HasQueryStringMappingGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_HasQueryStringMapping()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.InheritHostClientIdentityGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_InheritHostClientIdentity()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.InheritHostClientIdentitySetBoolean">
            <summary>Sets the shim of AuthenticationConfiguration.set_InheritHostClientIdentity(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.MappingsGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_Mappings()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.MappingsSetListOfAuthenticationOptionMapping">
            <summary>Sets the shim of AuthenticationConfiguration.set_Mappings(List`1&lt;AuthenticationOptionMapping&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.RequireSslGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_RequireSsl()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.RequireSslSetBoolean">
            <summary>Sets the shim of AuthenticationConfiguration.set_RequireSsl(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.SendWwwAuthenticateResponseHeadersGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_SendWwwAuthenticateResponseHeaders()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.SendWwwAuthenticateResponseHeadersSetBoolean">
            <summary>Sets the shim of AuthenticationConfiguration.set_SendWwwAuthenticateResponseHeaders(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.SessionTokenGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_SessionToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.SessionTokenSetSessionTokenConfiguration">
            <summary>Sets the shim of AuthenticationConfiguration.set_SessionToken(SessionTokenConfiguration value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.SetPrincipalOnRequestInstanceGet">
            <summary>Sets the shim of AuthenticationConfiguration.get_SetPrincipalOnRequestInstance()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.SetPrincipalOnRequestInstanceSetBoolean">
            <summary>Sets the shim of AuthenticationConfiguration.set_SetPrincipalOnRequestInstance(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.TryGetAuthorizationHeaderMappingStringSecurityTokenHandlerCollectionOut">
            <summary>Sets the shim of AuthenticationConfiguration.TryGetAuthorizationHeaderMapping(String scheme, SecurityTokenHandlerCollection&amp; handler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.TryGetClientCertificateMappingSecurityTokenHandlerCollectionOut">
            <summary>Sets the shim of AuthenticationConfiguration.TryGetClientCertificateMapping(SecurityTokenHandlerCollection&amp; handler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.TryGetHeaderMappingStringSecurityTokenHandlerCollectionOut">
            <summary>Sets the shim of AuthenticationConfiguration.TryGetHeaderMapping(String headerName, SecurityTokenHandlerCollection&amp; handler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfiguration.AllInstances.TryGetQueryStringMappingStringSecurityTokenHandlerCollectionOut">
            <summary>Sets the shim of AuthenticationConfiguration.TryGetQueryStringMapping(String paramName, SecurityTokenHandlerCollection&amp; handler)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationConfigurationExtensionsCore</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddAccessKeyAuthenticationConfigurationSimpleSecurityTokenHandlerAuthenticationOptions">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddAccessKey(AuthenticationConfiguration configuration, SimpleSecurityTokenHandler handler, AuthenticationOptions options)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddAccessKeyAuthenticationConfigurationSimpleSecurityTokenHandlerValidateTokenDelegateAuthenticationOptions">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddAccessKey(AuthenticationConfiguration configuration, ValidateTokenDelegate validateTokenDelegate, AuthenticationOptions options)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddBasicAuthenticationAuthenticationConfigurationBasicAuthenticationSecurityTokenHandlerValidateUserNameCredentialDelegateAuthenticationOptionsStringBoolean">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddBasicAuthentication(AuthenticationConfiguration configuration, ValidateUserNameCredentialDelegate validationDelegate, AuthenticationOptions options, String realm, Boolean retainPassword)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddBasicAuthenticationAuthenticationConfigurationBasicAuthenticationSecurityTokenHandlerValidateUserNameCredentialDelegateStringBoolean">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddBasicAuthentication(AuthenticationConfiguration configuration, ValidateUserNameCredentialDelegate validationDelegate, String realm, Boolean retainPassword)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddBasicAuthenticationAuthenticationConfigurationFuncOfStringStringBooleanFuncOfStringStringArrayStringBoolean">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddBasicAuthentication(AuthenticationConfiguration configuration, Func`3&lt;String,String,Boolean&gt; validationDelegate, Func`2&lt;String,String[]&gt; roleDelegate, String realm, Boolean retainPassword)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddClientCertificateAuthenticationConfigurationClientCertificateModeStringArray">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddClientCertificate(AuthenticationConfiguration configuration, ClientCertificateMode mode, String[] values)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddClientCertificateAuthenticationConfigurationSecurityTokenHandler">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddClientCertificate(AuthenticationConfiguration configuration, SecurityTokenHandler handler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddJsonWebTokenAuthenticationConfigurationStringStringStringDictionaryOfStringString">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddJsonWebToken(AuthenticationConfiguration configuration, String issuer, String audience, String signingKey, Dictionary`2&lt;String,String&gt; claimMappings)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddJsonWebTokenAuthenticationConfigurationStringStringStringStringDictionaryOfStringString">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddJsonWebToken(AuthenticationConfiguration configuration, String issuer, String audience, String signingKey, String scheme, Dictionary`2&lt;String,String&gt; claimMappings)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddJsonWebTokenAuthenticationConfigurationStringStringX509Certificate2DictionaryOfStringString">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddJsonWebToken(AuthenticationConfiguration configuration, String issuer, String audience, X509Certificate2 signingCertificate, Dictionary`2&lt;String,String&gt; claimMappings)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddJsonWebTokenAuthenticationConfigurationStringStringX509Certificate2StringDictionaryOfStringString">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddJsonWebToken(AuthenticationConfiguration configuration, String issuer, String audience, X509Certificate2 signingCertificate, String scheme, Dictionary`2&lt;String,String&gt; claimMappings)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddJsonWebTokenAuthenticationConfigurationTokenValidationParametersAuthenticationOptionsAuthenticationSchemeDictionaryOfStringString">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddJsonWebToken(AuthenticationConfiguration configuration, TokenValidationParameters validationParameters, AuthenticationOptions options, AuthenticationScheme scheme, Dictionary`2&lt;String,String&gt; claimMappings)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddSaml11AuthenticationConfigurationSecurityTokenHandlerConfigurationAuthenticationOptions">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddSaml11(AuthenticationConfiguration configuration, SecurityTokenHandlerConfiguration handlerConfiguration, AuthenticationOptions options)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddSaml2AuthenticationConfigurationSecurityTokenHandlerConfigurationAuthenticationOptionsAuthenticationScheme">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddSaml2(AuthenticationConfiguration configuration, SecurityTokenHandlerConfiguration handlerConfiguration, AuthenticationOptions options, AuthenticationScheme scheme)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.AddSaml2AuthenticationConfigurationStringStringStringX509CertificateValidatorAuthenticationOptionsAuthenticationScheme">
            <summary>Sets the shim of AuthenticationConfigurationExtensionsCore.AddSaml2(AuthenticationConfiguration configuration, String issuerThumbprint, String issuerName, String audienceUri, X509CertificateValidator certificateValidator, AuthenticationOptions options, AuthenticationScheme scheme)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationConfigurationExtensionsCore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationException</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.#ctor(Thinktecture.IdentityModel.Tokens.Http.AuthenticationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.Constructor">
            <summary>Sets the shim of AuthenticationException.AuthenticationException()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AuthenticationException.AuthenticationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.ConstructorString">
            <summary>Sets the shim of AuthenticationException.AuthenticationException(String message)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.ConstructorStringException">
            <summary>Sets the shim of AuthenticationException.AuthenticationException(String message, Exception inner)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.ReasonPhraseGet">
            <summary>Sets the shim of AuthenticationException.get_ReasonPhrase()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.ReasonPhraseSetString">
            <summary>Sets the shim of AuthenticationException.set_ReasonPhrase(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.SchemeGet">
            <summary>Sets the shim of AuthenticationException.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.SchemeSetString">
            <summary>Sets the shim of AuthenticationException.set_Scheme(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.StatusCodeGet">
            <summary>Sets the shim of AuthenticationException.get_StatusCode()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.StatusCodeSetHttpStatusCode">
            <summary>Sets the shim of AuthenticationException.set_StatusCode(HttpStatusCode value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.AllInstances.ReasonPhraseGet">
            <summary>Sets the shim of AuthenticationException.get_ReasonPhrase()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.AllInstances.ReasonPhraseSetString">
            <summary>Sets the shim of AuthenticationException.set_ReasonPhrase(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.AllInstances.SchemeGet">
            <summary>Sets the shim of AuthenticationException.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.AllInstances.SchemeSetString">
            <summary>Sets the shim of AuthenticationException.set_Scheme(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.AllInstances.StatusCodeGet">
            <summary>Sets the shim of AuthenticationException.get_StatusCode()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationException.AllInstances.StatusCodeSetHttpStatusCode">
            <summary>Sets the shim of AuthenticationException.set_StatusCode(HttpStatusCode value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.AuthenticationHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.ConstructorAuthenticationConfigurationHttpConfiguration">
            <summary>Sets the shim of AuthenticationHandler.AuthenticationHandler(AuthenticationConfiguration configuration, HttpConfiguration httpConfiguration)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.ConstructorAuthenticationConfigurationHttpMessageHandler">
            <summary>Sets the shim of AuthenticationHandler.AuthenticationHandler(AuthenticationConfiguration configuration, HttpMessageHandler innerHandler)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of AuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.SendAuthenticationExceptionResponseAuthenticationExceptionHttpRequestMessage">
            <summary>Sets the shim of AuthenticationHandler.SendAuthenticationExceptionResponse(AuthenticationException aex, HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.SendSessionTokenResponseClaimsPrincipalHttpRequestMessage">
            <summary>Sets the shim of AuthenticationHandler.SendSessionTokenResponse(ClaimsPrincipal principal, HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.SendUnauthorizedResponseHttpRequestMessage">
            <summary>Sets the shim of AuthenticationHandler.SendUnauthorizedResponse(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.SetAuthenticateHeadersHttpResponseMessage">
            <summary>Sets the shim of AuthenticationHandler.SetAuthenticateHeaders(HttpResponseMessage response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.SetPrincipalHttpRequestMessageClaimsPrincipal">
            <summary>Sets the shim of AuthenticationHandler.SetPrincipal(HttpRequestMessage request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler._n__FabricatedMethod4HttpRequestMessageCancellationToken">
            <summary>Sets the shim of AuthenticationHandler.&lt;&gt;n__FabricatedMethod4(HttpRequestMessage , CancellationToken )</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.AllInstances.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of AuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.AllInstances.SendAuthenticationExceptionResponseAuthenticationExceptionHttpRequestMessage">
            <summary>Sets the shim of AuthenticationHandler.SendAuthenticationExceptionResponse(AuthenticationException aex, HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.AllInstances.SendSessionTokenResponseClaimsPrincipalHttpRequestMessage">
            <summary>Sets the shim of AuthenticationHandler.SendSessionTokenResponse(ClaimsPrincipal principal, HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.AllInstances.SendUnauthorizedResponseHttpRequestMessage">
            <summary>Sets the shim of AuthenticationHandler.SendUnauthorizedResponse(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.AllInstances.SetAuthenticateHeadersHttpResponseMessage">
            <summary>Sets the shim of AuthenticationHandler.SetAuthenticateHeaders(HttpResponseMessage response)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.AllInstances.SetPrincipalHttpRequestMessageClaimsPrincipal">
            <summary>Sets the shim of AuthenticationHandler.SetPrincipal(HttpRequestMessage request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationHandler.AllInstances._n__FabricatedMethod4HttpRequestMessageCancellationToken">
            <summary>Sets the shim of AuthenticationHandler.&lt;&gt;n__FabricatedMethod4(HttpRequestMessage , CancellationToken )</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationOptionMapping</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.#ctor(Thinktecture.IdentityModel.Tokens.Http.AuthenticationOptionMapping)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.Constructor">
            <summary>Sets the shim of AuthenticationOptionMapping.AuthenticationOptionMapping()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.OptionsGet">
            <summary>Sets the shim of AuthenticationOptionMapping.get_Options()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.OptionsSetAuthenticationOptions">
            <summary>Sets the shim of AuthenticationOptionMapping.set_Options(AuthenticationOptions value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.SchemeGet">
            <summary>Sets the shim of AuthenticationOptionMapping.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.SchemeSetAuthenticationScheme">
            <summary>Sets the shim of AuthenticationOptionMapping.set_Scheme(AuthenticationScheme value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.TokenHandlerGet">
            <summary>Sets the shim of AuthenticationOptionMapping.get_TokenHandler()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.TokenHandlerSetSecurityTokenHandlerCollection">
            <summary>Sets the shim of AuthenticationOptionMapping.set_TokenHandler(SecurityTokenHandlerCollection value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.AllInstances.OptionsGet">
            <summary>Sets the shim of AuthenticationOptionMapping.get_Options()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.AllInstances.OptionsSetAuthenticationOptions">
            <summary>Sets the shim of AuthenticationOptionMapping.set_Options(AuthenticationOptions value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.AllInstances.SchemeGet">
            <summary>Sets the shim of AuthenticationOptionMapping.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.AllInstances.SchemeSetAuthenticationScheme">
            <summary>Sets the shim of AuthenticationOptionMapping.set_Scheme(AuthenticationScheme value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.AllInstances.TokenHandlerGet">
            <summary>Sets the shim of AuthenticationOptionMapping.get_TokenHandler()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptionMapping.AllInstances.TokenHandlerSetSecurityTokenHandlerCollection">
            <summary>Sets the shim of AuthenticationOptionMapping.set_TokenHandler(SecurityTokenHandlerCollection value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationOptions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.#ctor(Thinktecture.IdentityModel.Tokens.Http.AuthenticationOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.Constructor">
            <summary>Sets the shim of AuthenticationOptions.AuthenticationOptions()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.ForAuthorizationHeaderString">
            <summary>Sets the shim of AuthenticationOptions.ForAuthorizationHeader(String scheme)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.ForClientCertificate">
            <summary>Sets the shim of AuthenticationOptions.ForClientCertificate()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.ForCookieString">
            <summary>Sets the shim of AuthenticationOptions.ForCookie(String name)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.ForHeaderString">
            <summary>Sets the shim of AuthenticationOptions.ForHeader(String name)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.ForQueryStringString">
            <summary>Sets the shim of AuthenticationOptions.ForQueryString(String name)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.NameGet">
            <summary>Sets the shim of AuthenticationOptions.get_Name()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.NameSetString">
            <summary>Sets the shim of AuthenticationOptions.set_Name(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.RequestTypeGet">
            <summary>Sets the shim of AuthenticationOptions.get_RequestType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.RequestTypeSetHttpRequestType">
            <summary>Sets the shim of AuthenticationOptions.set_RequestType(HttpRequestType value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.SchemeGet">
            <summary>Sets the shim of AuthenticationOptions.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.SchemeSetString">
            <summary>Sets the shim of AuthenticationOptions.set_Scheme(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.AllInstances.NameGet">
            <summary>Sets the shim of AuthenticationOptions.get_Name()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.AllInstances.NameSetString">
            <summary>Sets the shim of AuthenticationOptions.set_Name(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.AllInstances.RequestTypeGet">
            <summary>Sets the shim of AuthenticationOptions.get_RequestType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.AllInstances.RequestTypeSetHttpRequestType">
            <summary>Sets the shim of AuthenticationOptions.set_RequestType(HttpRequestType value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.AllInstances.SchemeGet">
            <summary>Sets the shim of AuthenticationOptions.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationOptions.AllInstances.SchemeSetString">
            <summary>Sets the shim of AuthenticationOptions.set_Scheme(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationScheme</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.#ctor(Thinktecture.IdentityModel.Tokens.Http.AuthenticationScheme)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.ChallengeGet">
            <summary>Sets the shim of AuthenticationScheme.get_Challenge()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.ChallengeSetString">
            <summary>Sets the shim of AuthenticationScheme.set_Challenge(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.Constructor">
            <summary>Sets the shim of AuthenticationScheme.AuthenticationScheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.SchemeAndChallengeStringString">
            <summary>Sets the shim of AuthenticationScheme.SchemeAndChallenge(String scheme, String challenge)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.SchemeAndRealmStringString">
            <summary>Sets the shim of AuthenticationScheme.SchemeAndRealm(String scheme, String realm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.SchemeGet">
            <summary>Sets the shim of AuthenticationScheme.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.SchemeOnlyString">
            <summary>Sets the shim of AuthenticationScheme.SchemeOnly(String scheme)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.SchemeSetString">
            <summary>Sets the shim of AuthenticationScheme.set_Scheme(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.AllInstances.ChallengeGet">
            <summary>Sets the shim of AuthenticationScheme.get_Challenge()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.AllInstances.ChallengeSetString">
            <summary>Sets the shim of AuthenticationScheme.set_Challenge(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.AllInstances.SchemeGet">
            <summary>Sets the shim of AuthenticationScheme.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimAuthenticationScheme.AllInstances.SchemeSetString">
            <summary>Sets the shim of AuthenticationScheme.set_Scheme(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationHeaderValue">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.BasicAuthenticationHeaderValue</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationHeaderValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationHeaderValue.#ctor(Thinktecture.IdentityModel.Tokens.Http.BasicAuthenticationHeaderValue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationHeaderValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationHeaderValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationHeaderValue.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationHeaderValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationHeaderValue.ConstructorStringString">
            <summary>Sets the shim of BasicAuthenticationHeaderValue.BasicAuthenticationHeaderValue(String userName, String password)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationHeaderValue.EncodeCredentialStringString">
            <summary>Sets the shim of BasicAuthenticationHeaderValue.EncodeCredential(String userName, String password)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationHeaderValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.BasicAuthenticationSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.BasicAuthenticationSecurityTokenHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.CanValidateTokenGet">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.Constructor">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.BasicAuthenticationSecurityTokenHandler()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.ConstructorBasicAuthenticationSecurityTokenHandlerValidateUserNameCredentialDelegate">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.BasicAuthenticationSecurityTokenHandler(ValidateUserNameCredentialDelegate validateUserNameCredential)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.ConstructorBasicAuthenticationSecurityTokenHandlerValidateUserNameCredentialDelegateString">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.BasicAuthenticationSecurityTokenHandler(ValidateUserNameCredentialDelegate validateUserNameCredential, String identifier)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.ConstructorString">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.BasicAuthenticationSecurityTokenHandler(String identifier)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.DecodeBasicAuthenticationHeaderString">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.DecodeBasicAuthenticationHeader(String basicAuthToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.GetTokenTypeIdentifiers">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.ReadTokenString">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialCoreStringString">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialCore(String userName, String password)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialGet">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.get_ValidateUserNameCredential()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialSetBasicAuthenticationSecurityTokenHandlerValidateUserNameCredentialDelegate">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.set_ValidateUserNameCredential(ValidateUserNameCredentialDelegate value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.AllInstances.CanValidateTokenGet">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.AllInstances.DecodeBasicAuthenticationHeaderString">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.DecodeBasicAuthenticationHeader(String basicAuthToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.AllInstances.GetTokenTypeIdentifiers">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.AllInstances.ReadTokenString">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.AllInstances.ValidateTokenSecurityToken">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.AllInstances.ValidateUserNameCredentialCoreStringString">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialCore(String userName, String password)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.AllInstances.ValidateUserNameCredentialGet">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.get_ValidateUserNameCredential()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationSecurityTokenHandler.AllInstances.ValidateUserNameCredentialSetBasicAuthenticationSecurityTokenHandlerValidateUserNameCredentialDelegate">
            <summary>Sets the shim of BasicAuthenticationSecurityTokenHandler.set_ValidateUserNameCredential(ValidateUserNameCredentialDelegate value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.BasicAuthenticationWithRoleSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.BasicAuthenticationWithRoleSecurityTokenHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.ConstructorFuncOfStringStringBooleanFuncOfStringStringArray">
            <summary>Sets the shim of BasicAuthenticationWithRoleSecurityTokenHandler.BasicAuthenticationWithRoleSecurityTokenHandler(Func`3&lt;String,String,Boolean&gt; validationDelegate, Func`2&lt;String,String[]&gt; roleDelegate)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.GetRolesForUserBaseString">
            <summary>Sets the shim of BasicAuthenticationWithRoleSecurityTokenHandler.GetRolesForUserBase(String username)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.GetRolesForUserHandlerGet">
            <summary>Sets the shim of BasicAuthenticationWithRoleSecurityTokenHandler.get_GetRolesForUserHandler()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.GetRolesForUserHandlerSetFuncOfStringStringArray">
            <summary>Sets the shim of BasicAuthenticationWithRoleSecurityTokenHandler.set_GetRolesForUserHandler(Func`2&lt;String,String[]&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the shim of BasicAuthenticationWithRoleSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.AllInstances.GetRolesForUserBaseString">
            <summary>Sets the shim of BasicAuthenticationWithRoleSecurityTokenHandler.GetRolesForUserBase(String username)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.AllInstances.GetRolesForUserHandlerGet">
            <summary>Sets the shim of BasicAuthenticationWithRoleSecurityTokenHandler.get_GetRolesForUserHandler()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.AllInstances.GetRolesForUserHandlerSetFuncOfStringStringArray">
            <summary>Sets the shim of BasicAuthenticationWithRoleSecurityTokenHandler.set_GetRolesForUserHandler(Func`2&lt;String,String[]&gt; value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimBasicAuthenticationWithRoleSecurityTokenHandler.AllInstances.ValidateTokenSecurityToken">
            <summary>Sets the shim of BasicAuthenticationWithRoleSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClaimsTransformationHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.ClaimsTransformationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClaimsTransformationHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClaimsTransformationHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.ClaimsTransformationHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClaimsTransformationHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClaimsTransformationHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClaimsTransformationHandler.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClaimsTransformationHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClaimsTransformationHandler.ConstructorClaimsAuthenticationManagerHttpConfiguration">
            <summary>Sets the shim of ClaimsTransformationHandler.ClaimsTransformationHandler(ClaimsAuthenticationManager transformer, HttpConfiguration configuration)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClaimsTransformationHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of ClaimsTransformationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClaimsTransformationHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClaimsTransformationHandler.AllInstances.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the shim of ClaimsTransformationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.ClientCertificateHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.ClientCertificateHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateHandler.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateHandler.ConstructorClientCertificateModeStringArray">
            <summary>Sets the shim of ClientCertificateHandler.ClientCertificateHandler(ClientCertificateMode mode, String[] values)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateIssuerNameRegistry">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.ClientCertificateIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateIssuerNameRegistry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateIssuerNameRegistry.#ctor(Thinktecture.IdentityModel.Tokens.Http.ClientCertificateIssuerNameRegistry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateIssuerNameRegistry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateIssuerNameRegistry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateIssuerNameRegistry.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateIssuerNameRegistry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateIssuerNameRegistry.ConstructorBooleanClientCertificateModeStringArray">
            <summary>Sets the shim of ClientCertificateIssuerNameRegistry.ClientCertificateIssuerNameRegistry(Boolean checkIssuer, ClientCertificateMode mode, String[] values)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateIssuerNameRegistry.GetIssuerNameSecurityToken">
            <summary>Sets the shim of ClientCertificateIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateIssuerNameRegistry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimClientCertificateIssuerNameRegistry.AllInstances.GetIssuerNameSecurityToken">
            <summary>Sets the shim of ClientCertificateIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.HttpAuthentication</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.#ctor(Thinktecture.IdentityModel.Tokens.Http.HttpAuthentication)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AuthenticateAuthorizationHeaderStringString">
            <summary>Sets the shim of HttpAuthentication.AuthenticateAuthorizationHeader(String scheme, String credential)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AuthenticateClientCertificateX509Certificate2">
            <summary>Sets the shim of HttpAuthentication.AuthenticateClientCertificate(X509Certificate2 certificate)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AuthenticateHeadersDictionaryOfStringString">
            <summary>Sets the shim of HttpAuthentication.AuthenticateHeaders(Dictionary`2&lt;String,String&gt; headers)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AuthenticateHeadersHttpRequestHeaders">
            <summary>Sets the shim of HttpAuthentication.AuthenticateHeaders(HttpRequestHeaders headers)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AuthenticateHttpRequestMessage">
            <summary>Sets the shim of HttpAuthentication.Authenticate(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AuthenticateQueryStringsNameValueCollection">
            <summary>Sets the shim of HttpAuthentication.AuthenticateQueryStrings(NameValueCollection queryString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AuthenticateQueryStringsUri">
            <summary>Sets the shim of HttpAuthentication.AuthenticateQueryStrings(Uri uri)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AuthenticateSessionTokenHttpRequestMessage">
            <summary>Sets the shim of HttpAuthentication.AuthenticateSessionToken(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.ConfigurationGet">
            <summary>Sets the shim of HttpAuthentication.get_Configuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.ConfigurationSetAuthenticationConfiguration">
            <summary>Sets the shim of HttpAuthentication.set_Configuration(AuthenticationConfiguration value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.ConstructorAuthenticationConfiguration">
            <summary>Sets the shim of HttpAuthentication.HttpAuthentication(AuthenticationConfiguration configuration)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.CreateQueryStringDictionaryUri">
            <summary>Sets the shim of HttpAuthentication.CreateQueryStringDictionary(Uri uri)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.CreateSessionTokenClaimsPrincipal">
            <summary>Sets the shim of HttpAuthentication.CreateSessionToken(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.CreateSessionTokenResponseClaimsPrincipal">
            <summary>Sets the shim of HttpAuthentication.CreateSessionTokenResponse(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.CreateSessionTokenResponseString">
            <summary>Sets the shim of HttpAuthentication.CreateSessionTokenResponse(String sessionToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.FilterInternalClaimsClaimsPrincipal">
            <summary>Sets the shim of HttpAuthentication.FilterInternalClaims(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.InvokeHandlerSecurityTokenHandlerCollectionString">
            <summary>Sets the shim of HttpAuthentication.InvokeHandler(SecurityTokenHandlerCollection handlers, String tokenString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.IsSessionTokenRequestHttpRequestMessage">
            <summary>Sets the shim of HttpAuthentication.IsSessionTokenRequest(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.TransformStringClaimsPrincipal">
            <summary>Sets the shim of HttpAuthentication.Transform(String resource, ClaimsPrincipal incomingPrincipal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication._AuthenticateSessionTokenb__1KeyValuePairOfStringIEnumerableOfString">
            <summary>Sets the shim of HttpAuthentication.&lt;AuthenticateSessionToken&gt;b__1(KeyValuePair`2&lt;String,IEnumerable`1&lt;String&gt;&gt; h)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication._FilterInternalClaimsb__2Claim">
            <summary>Sets the shim of HttpAuthentication.&lt;FilterInternalClaims&gt;b__2(Claim c)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.AuthenticateAuthorizationHeaderStringString">
            <summary>Sets the shim of HttpAuthentication.AuthenticateAuthorizationHeader(String scheme, String credential)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.AuthenticateClientCertificateX509Certificate2">
            <summary>Sets the shim of HttpAuthentication.AuthenticateClientCertificate(X509Certificate2 certificate)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.AuthenticateHeadersDictionaryOfStringString">
            <summary>Sets the shim of HttpAuthentication.AuthenticateHeaders(Dictionary`2&lt;String,String&gt; headers)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.AuthenticateHeadersHttpRequestHeaders">
            <summary>Sets the shim of HttpAuthentication.AuthenticateHeaders(HttpRequestHeaders headers)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.AuthenticateHttpRequestMessage">
            <summary>Sets the shim of HttpAuthentication.Authenticate(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.AuthenticateQueryStringsNameValueCollection">
            <summary>Sets the shim of HttpAuthentication.AuthenticateQueryStrings(NameValueCollection queryString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.AuthenticateQueryStringsUri">
            <summary>Sets the shim of HttpAuthentication.AuthenticateQueryStrings(Uri uri)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.AuthenticateSessionTokenHttpRequestMessage">
            <summary>Sets the shim of HttpAuthentication.AuthenticateSessionToken(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.ConfigurationGet">
            <summary>Sets the shim of HttpAuthentication.get_Configuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.ConfigurationSetAuthenticationConfiguration">
            <summary>Sets the shim of HttpAuthentication.set_Configuration(AuthenticationConfiguration value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.CreateQueryStringDictionaryUri">
            <summary>Sets the shim of HttpAuthentication.CreateQueryStringDictionary(Uri uri)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.CreateSessionTokenClaimsPrincipal">
            <summary>Sets the shim of HttpAuthentication.CreateSessionToken(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.CreateSessionTokenResponseClaimsPrincipal">
            <summary>Sets the shim of HttpAuthentication.CreateSessionTokenResponse(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.CreateSessionTokenResponseString">
            <summary>Sets the shim of HttpAuthentication.CreateSessionTokenResponse(String sessionToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.FilterInternalClaimsClaimsPrincipal">
            <summary>Sets the shim of HttpAuthentication.FilterInternalClaims(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.InvokeHandlerSecurityTokenHandlerCollectionString">
            <summary>Sets the shim of HttpAuthentication.InvokeHandler(SecurityTokenHandlerCollection handlers, String tokenString)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.IsSessionTokenRequestHttpRequestMessage">
            <summary>Sets the shim of HttpAuthentication.IsSessionTokenRequest(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances.TransformStringClaimsPrincipal">
            <summary>Sets the shim of HttpAuthentication.Transform(String resource, ClaimsPrincipal incomingPrincipal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpAuthentication.AllInstances._AuthenticateSessionTokenb__1KeyValuePairOfStringIEnumerableOfString">
            <summary>Sets the shim of HttpAuthentication.&lt;AuthenticateSessionToken&gt;b__1(KeyValuePair`2&lt;String,IEnumerable`1&lt;String&gt;&gt; h)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityToken">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.HttpRequestSecurityToken</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityToken.#ctor(Thinktecture.IdentityModel.Tokens.Http.HttpRequestSecurityToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityToken.ConstructorHttpRequestMessage">
            <summary>Sets the shim of HttpRequestSecurityToken.HttpRequestSecurityToken(HttpRequestMessage request)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.HttpRequestSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.HttpRequestSecurityTokenHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.ConstructorHttpRequestSecurityTokenHandlerValidateTokenDelegate">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.HttpRequestSecurityTokenHandler(ValidateTokenDelegate validator)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.ConstructorString">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.HttpRequestSecurityTokenHandler(String identifier)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.ConstructorStringHttpRequestSecurityTokenHandlerValidateTokenDelegate">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.HttpRequestSecurityTokenHandler(String identifier, ValidateTokenDelegate validator)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.GetTokenTypeIdentifiers">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.TokenTypeGet">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.ValidateRequestHttpRequestMessage">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.ValidateRequest(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.ValidatorGet">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.get_Validator()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.ValidatorSetHttpRequestSecurityTokenHandlerValidateTokenDelegate">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.set_Validator(ValidateTokenDelegate value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.AllInstances.GetTokenTypeIdentifiers">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.AllInstances.TokenTypeGet">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.AllInstances.ValidateRequestHttpRequestMessage">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.ValidateRequest(HttpRequestMessage request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.AllInstances.ValidateTokenSecurityToken">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.AllInstances.ValidatorGet">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.get_Validator()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpRequestSecurityTokenHandler.AllInstances.ValidatorSetHttpRequestSecurityTokenHandlerValidateTokenDelegate">
            <summary>Sets the shim of HttpRequestSecurityTokenHandler.set_Validator(ValidateTokenDelegate value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpsIssuerNameRegistry">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.HttpsIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpsIssuerNameRegistry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpsIssuerNameRegistry.#ctor(Thinktecture.IdentityModel.Tokens.Http.HttpsIssuerNameRegistry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpsIssuerNameRegistry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpsIssuerNameRegistry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpsIssuerNameRegistry.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpsIssuerNameRegistry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpsIssuerNameRegistry.Constructor">
            <summary>Sets the shim of HttpsIssuerNameRegistry.HttpsIssuerNameRegistry()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpsIssuerNameRegistry.GetIssuerNameSecurityToken">
            <summary>Sets the shim of HttpsIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpsIssuerNameRegistry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimHttpsIssuerNameRegistry.AllInstances.GetIssuerNameSecurityToken">
            <summary>Sets the shim of HttpsIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration">
            <summary>Shim type of Thinktecture.IdentityModel.Tokens.Http.SessionTokenConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.#ctor(Thinktecture.IdentityModel.Tokens.Http.SessionTokenConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AudienceGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_Audience()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AudienceSetString">
            <summary>Sets the shim of SessionTokenConfiguration.set_Audience(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.Constructor">
            <summary>Sets the shim of SessionTokenConfiguration.SessionTokenConfiguration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.DefaultTokenLifetimeGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_DefaultTokenLifetime()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.DefaultTokenLifetimeSetTimeSpan">
            <summary>Sets the shim of SessionTokenConfiguration.set_DefaultTokenLifetime(TimeSpan value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.EndpointAddressGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_EndpointAddress()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.EndpointAddressSetString">
            <summary>Sets the shim of SessionTokenConfiguration.set_EndpointAddress(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.HeaderNameGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_HeaderName()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.HeaderNameSetString">
            <summary>Sets the shim of SessionTokenConfiguration.set_HeaderName(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.IssuerNameGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_IssuerName()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.IssuerNameSetString">
            <summary>Sets the shim of SessionTokenConfiguration.set_IssuerName(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.SchemeGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.SchemeSetString">
            <summary>Sets the shim of SessionTokenConfiguration.set_Scheme(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.SigningKeyGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_SigningKey()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.SigningKeySetByteArray">
            <summary>Sets the shim of SessionTokenConfiguration.set_SigningKey(Byte[] value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.ValidationParametersGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_ValidationParameters()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.ValidationParametersSetTokenValidationParameters">
            <summary>Sets the shim of SessionTokenConfiguration.set_ValidationParameters(TokenValidationParameters value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.AudienceGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_Audience()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.AudienceSetString">
            <summary>Sets the shim of SessionTokenConfiguration.set_Audience(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.DefaultTokenLifetimeGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_DefaultTokenLifetime()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.DefaultTokenLifetimeSetTimeSpan">
            <summary>Sets the shim of SessionTokenConfiguration.set_DefaultTokenLifetime(TimeSpan value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.EndpointAddressGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_EndpointAddress()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.EndpointAddressSetString">
            <summary>Sets the shim of SessionTokenConfiguration.set_EndpointAddress(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.HeaderNameGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_HeaderName()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.HeaderNameSetString">
            <summary>Sets the shim of SessionTokenConfiguration.set_HeaderName(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.IssuerNameGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_IssuerName()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.IssuerNameSetString">
            <summary>Sets the shim of SessionTokenConfiguration.set_IssuerName(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.SchemeGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.SchemeSetString">
            <summary>Sets the shim of SessionTokenConfiguration.set_Scheme(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.SigningKeyGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_SigningKey()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.SigningKeySetByteArray">
            <summary>Sets the shim of SessionTokenConfiguration.set_SigningKey(Byte[] value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.ValidationParametersGet">
            <summary>Sets the shim of SessionTokenConfiguration.get_ValidationParameters()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.ShimSessionTokenConfiguration.AllInstances.ValidationParametersSetTokenValidationParameters">
            <summary>Sets the shim of SessionTokenConfiguration.set_ValidationParameters(TokenValidationParameters value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationConfiguration">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationConfiguration</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationException</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAuthenticationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAuthenticationException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationException</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.AuthenticationConfiguration,System.Net.Http.HttpMessageHandler)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.AuthenticationConfiguration,System.Web.Http.HttpConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.Dispose(System.Boolean)">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.DisposeBoolean">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>Sets the stub of AuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the stub of AuthenticationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.SetAuthenticateHeaders(System.Net.Http.HttpResponseMessage)">
            <summary>Sets the stub of AuthenticationHandler.SetAuthenticateHeaders(HttpResponseMessage response)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.SetAuthenticateHeadersHttpResponseMessage">
            <summary>Sets the stub of AuthenticationHandler.SetAuthenticateHeaders(HttpResponseMessage response)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.SetPrincipal(System.Net.Http.HttpRequestMessage,System.Security.Claims.ClaimsPrincipal)">
            <summary>Sets the stub of AuthenticationHandler.SetPrincipal(HttpRequestMessage request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.SetPrincipalHttpRequestMessageClaimsPrincipal">
            <summary>Sets the stub of AuthenticationHandler.SetPrincipal(HttpRequestMessage request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptionMapping">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationOptionMapping</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptionMapping.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptionMapping.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationOptionMapping</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptionMapping.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptionMapping.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptionMapping.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptions">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationOptions</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptions.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationOptions</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationScheme">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.AuthenticationScheme</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationScheme.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationScheme.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationScheme</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationScheme.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationScheme.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubAuthenticationScheme.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.BasicAuthenticationHeaderValue</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue.Equals(System.Object)">
            <summary>Sets the stub of AuthenticationHeaderValue.Equals(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue.EqualsObject">
            <summary>Sets the stub of AuthenticationHeaderValue.Equals(Object obj)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue.GetHashCode">
            <summary>Sets the stub of AuthenticationHeaderValue.GetHashCode()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue.GetHashCode01">
            <summary>Sets the stub of AuthenticationHeaderValue.GetHashCode()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue.InitializeStub">
            <summary>Initializes a new instance of type StubBasicAuthenticationHeaderValue</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue.ToString">
            <summary>Sets the stub of AuthenticationHeaderValue.ToString()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue.ToString01">
            <summary>Sets the stub of AuthenticationHeaderValue.ToString()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationHeaderValue.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.BasicAuthenticationSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.BasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.BasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialDelegate,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.AttachBackingFieldToRetainPassword">
            <summary>Attaches delegates to emulate StubBasicAuthenticationSecurityTokenHandler.RetainPassword as a property with a backing field.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of UserNameSecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanReadToken(System.String)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanReadTokenString">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanReadTokenXmlReader">
            <summary>Sets the stub of UserNameSecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanValidateTokenGet">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanWriteKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanWriteTokenGet">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CreateSecurityTokenReferenceSecurityTokenBoolean">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CreateTokenSecurityTokenDescriptor">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.DecodeBasicAuthenticationHeader(System.String)">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.DecodeBasicAuthenticationHeader(String basicAuthToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.DecodeBasicAuthenticationHeaderString">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.DecodeBasicAuthenticationHeader(String basicAuthToken)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.DetectReplayedTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.GetTokenTypeIdentifiers">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.GetTokenTypeIdentifiers01">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.InitializeStub">
            <summary>Initializes a new instance of type StubBasicAuthenticationSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of UserNameSecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ReadToken(System.String)">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ReadTokenString">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ReadTokenXmlReader">
            <summary>Sets the stub of UserNameSecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ReadTokenXmlReaderSecurityTokenResolver">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.RetainPasswordGet">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_RetainPassword()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.RetainPasswordSetBoolean">
            <summary>Sets the stub of UserNameSecurityTokenHandler.set_RetainPassword(Boolean value)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.TokenTypeGet">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialCore(System.String,System.String)">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialCore(String userName, String password)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialCoreStringString">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialCore(String userName, String password)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.WriteKeyIdentifierClauseXmlWriterSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of UserNameSecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.WriteTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.WriteTokenXmlWriterSecurityToken">
            <summary>Sets the stub of UserNameSecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanValidateToken">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.CanWriteToken">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.RetainPassword">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_RetainPassword()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationSecurityTokenHandler.TokenType">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.BasicAuthenticationWithRoleSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.#ctor(System.Func{System.String,System.String,System.Boolean},System.Func{System.String,System.String[]})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.AttachBackingFieldToRetainPassword">
            <summary>Attaches delegates to emulate StubBasicAuthenticationWithRoleSecurityTokenHandler.RetainPassword as a property with a backing field.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of UserNameSecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanReadToken(System.String)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanReadTokenString">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanReadTokenXmlReader">
            <summary>Sets the stub of UserNameSecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanValidateTokenGet">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanWriteKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanWriteTokenGet">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CreateSecurityTokenReferenceSecurityTokenBoolean">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CreateTokenSecurityTokenDescriptor">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.DecodeBasicAuthenticationHeader(System.String)">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.DecodeBasicAuthenticationHeader(String basicAuthToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.DecodeBasicAuthenticationHeaderString">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.DecodeBasicAuthenticationHeader(String basicAuthToken)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.DetectReplayedTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.GetRolesForUserBase(System.String)">
            <summary>Sets the stub of BasicAuthenticationWithRoleSecurityTokenHandler.GetRolesForUserBase(String username)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.GetRolesForUserBaseString">
            <summary>Sets the stub of BasicAuthenticationWithRoleSecurityTokenHandler.GetRolesForUserBase(String username)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.GetTokenTypeIdentifiers">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.GetTokenTypeIdentifiers01">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.InitializeStub">
            <summary>Initializes a new instance of type StubBasicAuthenticationWithRoleSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of UserNameSecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ReadToken(System.String)">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ReadTokenString">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ReadTokenXmlReader">
            <summary>Sets the stub of UserNameSecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ReadTokenXmlReaderSecurityTokenResolver">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.RetainPasswordGet">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_RetainPassword()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.RetainPasswordSetBoolean">
            <summary>Sets the stub of UserNameSecurityTokenHandler.set_RetainPassword(Boolean value)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.TokenTypeGet">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of BasicAuthenticationWithRoleSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the stub of BasicAuthenticationWithRoleSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ValidateUserNameCredentialCore(System.String,System.String)">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialCore(String userName, String password)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.ValidateUserNameCredentialCoreStringString">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.ValidateUserNameCredentialCore(String userName, String password)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.WriteKeyIdentifierClauseXmlWriterSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of UserNameSecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.WriteTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.WriteTokenXmlWriterSecurityToken">
            <summary>Sets the stub of UserNameSecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanValidateToken">
            <summary>Sets the stub of BasicAuthenticationSecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.CanWriteToken">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.RetainPassword">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_RetainPassword()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubBasicAuthenticationWithRoleSecurityTokenHandler.TokenType">
            <summary>Sets the stub of UserNameSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClaimsTransformationHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.ClaimsTransformationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClaimsTransformationHandler.#ctor(System.Security.Claims.ClaimsAuthenticationManager,System.Web.Http.HttpConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClaimsTransformationHandler.Dispose(System.Boolean)">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClaimsTransformationHandler.DisposeBoolean">
            <summary>Sets the stub of DelegatingHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClaimsTransformationHandler.InitializeStub">
            <summary>Initializes a new instance of type StubClaimsTransformationHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClaimsTransformationHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>Sets the stub of ClaimsTransformationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClaimsTransformationHandler.SendAsyncHttpRequestMessageCancellationToken">
            <summary>Sets the stub of ClaimsTransformationHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClaimsTransformationHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClaimsTransformationHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClaimsTransformationHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.ClientCertificateHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.ClientCertificateMode,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of X509SecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanReadToken(System.String)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanReadTokenString">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanReadTokenXmlReader">
            <summary>Sets the stub of X509SecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanValidateTokenGet">
            <summary>Sets the stub of X509SecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanWriteKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanWriteTokenGet">
            <summary>Sets the stub of X509SecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CreateSecurityTokenReferenceSecurityTokenBoolean">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CreateTokenSecurityTokenDescriptor">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.DetectReplayedTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.GetTokenTypeIdentifiers">
            <summary>Sets the stub of X509SecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.GetTokenTypeIdentifiers01">
            <summary>Sets the stub of X509SecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.InitializeStub">
            <summary>Initializes a new instance of type StubClientCertificateHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList customConfigElements)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList customConfigElements)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.ReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.ReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of X509SecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.ReadToken(System.String)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.ReadTokenString">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.ReadTokenXmlReader">
            <summary>Sets the stub of X509SecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.ReadTokenXmlReaderSecurityTokenResolver">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.TokenTypeGet">
            <summary>Sets the stub of X509SecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of X509SecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.ValidateTokenSecurityToken">
            <summary>Sets the stub of X509SecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.WriteKeyIdentifierClauseXmlWriterSecurityKeyIdentifierClause">
            <summary>Sets the stub of X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of X509SecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.WriteTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.WriteTokenXmlWriterSecurityToken">
            <summary>Sets the stub of X509SecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanValidateToken">
            <summary>Sets the stub of X509SecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.CanWriteToken">
            <summary>Sets the stub of X509SecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateHandler.TokenType">
            <summary>Sets the stub of X509SecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.ClientCertificateIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.#ctor(System.Boolean,Thinktecture.IdentityModel.Tokens.Http.ClientCertificateMode,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of ClientCertificateIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)">
            <summary>Sets the stub of IssuerNameRegistry.GetIssuerName(SecurityToken securityToken, String requestedIssuerName)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.GetIssuerNameSecurityToken">
            <summary>Sets the stub of ClientCertificateIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.GetIssuerNameSecurityTokenString">
            <summary>Sets the stub of IssuerNameRegistry.GetIssuerName(SecurityToken securityToken, String requestedIssuerName)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.GetWindowsIssuerName">
            <summary>Sets the stub of IssuerNameRegistry.GetWindowsIssuerName()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.GetWindowsIssuerName01">
            <summary>Sets the stub of IssuerNameRegistry.GetWindowsIssuerName()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.InitializeStub">
            <summary>Initializes a new instance of type StubClientCertificateIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubClientCertificateIssuerNameRegistry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.HttpAuthentication</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.#ctor(Thinktecture.IdentityModel.Tokens.Http.AuthenticationConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateAuthorizationHeader(System.String,System.String)">
            <summary>Sets the stub of HttpAuthentication.AuthenticateAuthorizationHeader(String scheme, String credential)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateAuthorizationHeaderStringString">
            <summary>Sets the stub of HttpAuthentication.AuthenticateAuthorizationHeader(String scheme, String credential)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateClientCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>Sets the stub of HttpAuthentication.AuthenticateClientCertificate(X509Certificate2 certificate)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateClientCertificateX509Certificate2">
            <summary>Sets the stub of HttpAuthentication.AuthenticateClientCertificate(X509Certificate2 certificate)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateHeaders(System.Net.Http.Headers.HttpRequestHeaders)">
            <summary>Sets the stub of HttpAuthentication.AuthenticateHeaders(HttpRequestHeaders headers)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateHeaders(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Sets the stub of HttpAuthentication.AuthenticateHeaders(Dictionary`2&lt;String,String&gt; headers)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateHeadersDictionaryOfStringString">
            <summary>Sets the stub of HttpAuthentication.AuthenticateHeaders(Dictionary`2&lt;String,String&gt; headers)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateHeadersHttpRequestHeaders">
            <summary>Sets the stub of HttpAuthentication.AuthenticateHeaders(HttpRequestHeaders headers)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateQueryStrings(System.Uri)">
            <summary>Sets the stub of HttpAuthentication.AuthenticateQueryStrings(Uri uri)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateQueryStrings(System.Collections.Specialized.NameValueCollection)">
            <summary>Sets the stub of HttpAuthentication.AuthenticateQueryStrings(NameValueCollection queryString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateQueryStringsNameValueCollection">
            <summary>Sets the stub of HttpAuthentication.AuthenticateQueryStrings(NameValueCollection queryString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateQueryStringsUri">
            <summary>Sets the stub of HttpAuthentication.AuthenticateQueryStrings(Uri uri)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateSessionToken(System.Net.Http.HttpRequestMessage)">
            <summary>Sets the stub of HttpAuthentication.AuthenticateSessionToken(HttpRequestMessage request)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.AuthenticateSessionTokenHttpRequestMessage">
            <summary>Sets the stub of HttpAuthentication.AuthenticateSessionToken(HttpRequestMessage request)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.CreateQueryStringDictionary(System.Uri)">
            <summary>Sets the stub of HttpAuthentication.CreateQueryStringDictionary(Uri uri)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.CreateQueryStringDictionaryUri">
            <summary>Sets the stub of HttpAuthentication.CreateQueryStringDictionary(Uri uri)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.CreateSessionToken(System.Security.Claims.ClaimsPrincipal)">
            <summary>Sets the stub of HttpAuthentication.CreateSessionToken(ClaimsPrincipal principal)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.CreateSessionTokenClaimsPrincipal">
            <summary>Sets the stub of HttpAuthentication.CreateSessionToken(ClaimsPrincipal principal)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.CreateSessionTokenResponse(System.String)">
            <summary>Sets the stub of HttpAuthentication.CreateSessionTokenResponse(String sessionToken)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.CreateSessionTokenResponse(System.Security.Claims.ClaimsPrincipal)">
            <summary>Sets the stub of HttpAuthentication.CreateSessionTokenResponse(ClaimsPrincipal principal)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.CreateSessionTokenResponseClaimsPrincipal">
            <summary>Sets the stub of HttpAuthentication.CreateSessionTokenResponse(ClaimsPrincipal principal)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.CreateSessionTokenResponseString">
            <summary>Sets the stub of HttpAuthentication.CreateSessionTokenResponse(String sessionToken)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.InitializeStub">
            <summary>Initializes a new instance of type StubHttpAuthentication</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.InvokeHandler(System.IdentityModel.Tokens.SecurityTokenHandlerCollection,System.String)">
            <summary>Sets the stub of HttpAuthentication.InvokeHandler(SecurityTokenHandlerCollection handlers, String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.InvokeHandlerSecurityTokenHandlerCollectionString">
            <summary>Sets the stub of HttpAuthentication.InvokeHandler(SecurityTokenHandlerCollection handlers, String tokenString)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.IsSessionTokenRequest(System.Net.Http.HttpRequestMessage)">
            <summary>Sets the stub of HttpAuthentication.IsSessionTokenRequest(HttpRequestMessage request)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.IsSessionTokenRequestHttpRequestMessage">
            <summary>Sets the stub of HttpAuthentication.IsSessionTokenRequest(HttpRequestMessage request)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.Transform(System.String,System.Security.Claims.ClaimsPrincipal)">
            <summary>Sets the stub of HttpAuthentication.Transform(String resource, ClaimsPrincipal incomingPrincipal)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.TransformStringClaimsPrincipal">
            <summary>Sets the stub of HttpAuthentication.Transform(String resource, ClaimsPrincipal incomingPrincipal)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpAuthentication.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.HttpRequestSecurityToken</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.CanCreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.CanCreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.CreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.CreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of CreateKeyIdentifierClause()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.IdGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_Id()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.InitializeStub">
            <summary>Initializes a new instance of type StubHttpRequestSecurityToken</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.MatchesKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.ResolveKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.SecurityKeysGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_SecurityKeys()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.ValidFromGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidFrom()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.ValidToGet">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidTo()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.Id">
            <summary>Sets the stub of WrappedSecurityToken`1.get_Id()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.SecurityKeys">
            <summary>Sets the stub of WrappedSecurityToken`1.get_SecurityKeys()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.ValidFrom">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidFrom()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityToken.ValidTo">
            <summary>Sets the stub of WrappedSecurityToken`1.get_ValidTo()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.HttpRequestSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.#ctor(Thinktecture.IdentityModel.Tokens.Http.HttpRequestSecurityTokenHandler.ValidateTokenDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.#ctor(System.String,Thinktecture.IdentityModel.Tokens.Http.HttpRequestSecurityTokenHandler.ValidateTokenDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanReadToken(System.String)">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanReadTokenString">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanReadTokenXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.CanReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanValidateTokenGet">
            <summary>Sets the stub of SecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanWriteKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanWriteTokenGet">
            <summary>Sets the stub of SecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CreateSecurityTokenReferenceSecurityTokenBoolean">
            <summary>Sets the stub of SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken token, Boolean attached)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CreateTokenSecurityTokenDescriptor">
            <summary>Sets the stub of SecurityTokenHandler.CreateToken(SecurityTokenDescriptor tokenDescriptor)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.DetectReplayedTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.DetectReplayedToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.GetTokenTypeIdentifiers">
            <summary>Sets the stub of HttpRequestSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.GetTokenTypeIdentifiers01">
            <summary>Sets the stub of HttpRequestSecurityTokenHandler.GetTokenTypeIdentifiers()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.InitializeStub">
            <summary>Initializes a new instance of type StubHttpRequestSecurityTokenHandler</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ReadKeyIdentifierClauseXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ReadToken(System.String)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ReadTokenString">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(String tokenString)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ReadTokenXmlReader">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ReadTokenXmlReaderSecurityTokenResolver">
            <summary>Sets the stub of SecurityTokenHandler.ReadToken(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.TokenTypeGet">
            <summary>Sets the stub of HttpRequestSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
            <summary>Sets the stub of HttpRequestSecurityTokenHandler.ValidateRequest(HttpRequestMessage request)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ValidateRequestHttpRequestMessage">
            <summary>Sets the stub of HttpRequestSecurityTokenHandler.ValidateRequest(HttpRequestMessage request)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of HttpRequestSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.ValidateTokenSecurityToken">
            <summary>Sets the stub of HttpRequestSecurityTokenHandler.ValidateToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.WriteKeyIdentifierClauseXmlWriterSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause securityKeyIdentifierClause)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.WriteTokenSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(SecurityToken token)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.WriteTokenXmlWriterSecurityToken">
            <summary>Sets the stub of SecurityTokenHandler.WriteToken(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanValidateToken">
            <summary>Sets the stub of SecurityTokenHandler.get_CanValidateToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.CanWriteToken">
            <summary>Sets the stub of SecurityTokenHandler.get_CanWriteToken()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpRequestSecurityTokenHandler.TokenType">
            <summary>Sets the stub of HttpRequestSecurityTokenHandler.get_TokenType()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.HttpsIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of HttpsIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)">
            <summary>Sets the stub of IssuerNameRegistry.GetIssuerName(SecurityToken securityToken, String requestedIssuerName)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.GetIssuerNameSecurityToken">
            <summary>Sets the stub of HttpsIssuerNameRegistry.GetIssuerName(SecurityToken securityToken)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.GetIssuerNameSecurityTokenString">
            <summary>Sets the stub of IssuerNameRegistry.GetIssuerName(SecurityToken securityToken, String requestedIssuerName)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.GetWindowsIssuerName">
            <summary>Sets the stub of IssuerNameRegistry.GetWindowsIssuerName()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.GetWindowsIssuerName01">
            <summary>Sets the stub of IssuerNameRegistry.GetWindowsIssuerName()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.InitializeStub">
            <summary>Initializes a new instance of type StubHttpsIssuerNameRegistry</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of IssuerNameRegistry.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubHttpsIssuerNameRegistry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubSessionTokenConfiguration">
            <summary>Stub type of Thinktecture.IdentityModel.Tokens.Http.SessionTokenConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubSessionTokenConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubSessionTokenConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubSessionTokenConfiguration</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubSessionTokenConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubSessionTokenConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Tokens.Http.Fakes.StubSessionTokenConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding">
            <summary>Shim type of Thinktecture.IdentityModel.WSTrust.CertificateWSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.#ctor(Thinktecture.IdentityModel.WSTrust.CertificateWSTrustBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the shim of CertificateWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.Constructor">
            <summary>Sets the shim of CertificateWSTrustBinding.CertificateWSTrustBinding()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.ConstructorSecurityMode">
            <summary>Sets the shim of CertificateWSTrustBinding.CertificateWSTrustBinding(SecurityMode securityMode)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.CreateSecurityBindingElement">
            <summary>Sets the shim of CertificateWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.AllInstances.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the shim of CertificateWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimCertificateWSTrustBinding.AllInstances.CreateSecurityBindingElement">
            <summary>Sets the shim of CertificateWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding">
            <summary>Shim type of Thinktecture.IdentityModel.WSTrust.IssuedTokenWSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.#ctor(Thinktecture.IdentityModel.WSTrust.IssuedTokenWSTrustBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AddAlgorithmParametersSecurityAlgorithmSuiteTrustVersionSecurityKeyTypeIssuedSecurityTokenParametersRef">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.AddAlgorithmParameters(SecurityAlgorithmSuite algorithmSuite, TrustVersion trustVersion, SecurityKeyType keyType, IssuedSecurityTokenParameters&amp; issuedParameters)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AlgorithmSuiteGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.ClaimTypeRequirementGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_ClaimTypeRequirement()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.Constructor">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.IssuedTokenWSTrustBinding()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.ConstructorBindingEndpointAddress">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.IssuedTokenWSTrustBinding(Binding issuerBinding, EndpointAddress issuerAddress)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.ConstructorBindingEndpointAddressEndpointAddress">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.IssuedTokenWSTrustBinding(Binding issuerBinding, EndpointAddress issuerAddress, EndpointAddress issuerMetadataAddress)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.ConstructorBindingEndpointAddressSecurityKeyTypeSecurityAlgorithmSuiteStringIEnumerableOfClaimTypeRequirement">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.IssuedTokenWSTrustBinding(Binding issuerBinding, EndpointAddress issuerAddress, SecurityKeyType keyType, SecurityAlgorithmSuite algorithmSuite, String tokenType, IEnumerable`1&lt;ClaimTypeRequirement&gt; claimTypeRequirements)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.ConstructorBindingEndpointAddressSecurityModeTrustVersionEndpointAddress">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.IssuedTokenWSTrustBinding(Binding issuerBinding, EndpointAddress issuerAddress, SecurityMode mode, TrustVersion trustVersion, EndpointAddress issuerMetadataAddress)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.ConstructorBindingEndpointAddressSecurityModeTrustVersionSecurityKeyTypeSecurityAlgorithmSuiteStringIEnumerableOfClaimTypeRequirementEndpointAddress">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.IssuedTokenWSTrustBinding(Binding issuerBinding, EndpointAddress issuerAddress, SecurityMode mode, TrustVersion version, SecurityKeyType keyType, SecurityAlgorithmSuite algorithmSuite, String tokenType, IEnumerable`1&lt;ClaimTypeRequirement&gt; claimTypeRequirements, EndpointAddress issuerMetadataAddress)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.ConstructorBindingEndpointAddressStringIEnumerableOfClaimTypeRequirement">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.IssuedTokenWSTrustBinding(Binding issuerBinding, EndpointAddress issuerAddress, String tokenType, IEnumerable`1&lt;ClaimTypeRequirement&gt; claimTypeRequirements)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.CreateCanonicalizationAlgorithmElementString">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.CreateCanonicalizationAlgorithmElement(String canonicalizationAlgorithm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.CreateEncryptWithElementString">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.CreateEncryptWithElement(String encryptionAlgorithm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.CreateEncryptionAlgorithmElementString">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.CreateEncryptionAlgorithmElement(String encryptionAlgorithm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.CreateKeyWrapAlgorithmElementString">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.CreateKeyWrapAlgorithmElement(String keyWrapAlgorithm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.CreateSecurityBindingElement">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.CreateSignWithElementString">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.CreateSignWithElement(String signatureAlgorithm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.IssuerAddressGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_IssuerAddress()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.IssuerAddressSetEndpointAddress">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_IssuerAddress(EndpointAddress value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.IssuerBindingGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_IssuerBinding()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.IssuerBindingSetBinding">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_IssuerBinding(Binding value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.IssuerMetadataAddressGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_IssuerMetadataAddress()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.IssuerMetadataAddressSetEndpointAddress">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_IssuerMetadataAddress(EndpointAddress value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.KeyTypeGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_KeyType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.KeyTypeSetSecurityKeyType">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_KeyType(SecurityKeyType value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.TokenTypeGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.TokenTypeSetString">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_TokenType(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.AddAlgorithmParametersSecurityAlgorithmSuiteTrustVersionSecurityKeyTypeIssuedSecurityTokenParametersRef">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.AddAlgorithmParameters(SecurityAlgorithmSuite algorithmSuite, TrustVersion trustVersion, SecurityKeyType keyType, IssuedSecurityTokenParameters&amp; issuedParameters)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.AlgorithmSuiteGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.ClaimTypeRequirementGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_ClaimTypeRequirement()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.CreateCanonicalizationAlgorithmElementString">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.CreateCanonicalizationAlgorithmElement(String canonicalizationAlgorithm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.CreateEncryptWithElementString">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.CreateEncryptWithElement(String encryptionAlgorithm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.CreateEncryptionAlgorithmElementString">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.CreateEncryptionAlgorithmElement(String encryptionAlgorithm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.CreateSecurityBindingElement">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.CreateSignWithElementString">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.CreateSignWithElement(String signatureAlgorithm)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.IssuerAddressGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_IssuerAddress()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.IssuerAddressSetEndpointAddress">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_IssuerAddress(EndpointAddress value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.IssuerBindingGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_IssuerBinding()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.IssuerBindingSetBinding">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_IssuerBinding(Binding value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.IssuerMetadataAddressGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_IssuerMetadataAddress()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.IssuerMetadataAddressSetEndpointAddress">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_IssuerMetadataAddress(EndpointAddress value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.KeyTypeGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_KeyType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.KeyTypeSetSecurityKeyType">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_KeyType(SecurityKeyType value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.TokenTypeGet">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.get_TokenType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimIssuedTokenWSTrustBinding.AllInstances.TokenTypeSetString">
            <summary>Sets the shim of IssuedTokenWSTrustBinding.set_TokenType(String value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding">
            <summary>Shim type of Thinktecture.IdentityModel.WSTrust.KerberosWSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.#ctor(Thinktecture.IdentityModel.WSTrust.KerberosWSTrustBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the shim of KerberosWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.Constructor">
            <summary>Sets the shim of KerberosWSTrustBinding.KerberosWSTrustBinding()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.ConstructorSecurityMode">
            <summary>Sets the shim of KerberosWSTrustBinding.KerberosWSTrustBinding(SecurityMode mode)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.CreateSecurityBindingElement">
            <summary>Sets the shim of KerberosWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.AllInstances.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the shim of KerberosWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKerberosWSTrustBinding.AllInstances.CreateSecurityBindingElement">
            <summary>Sets the shim of KerberosWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKeyGenerator">
            <summary>Shim type of Thinktecture.IdentityModel.WSTrust.KeyGenerator</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKeyGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKeyGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKeyGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKeyGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKeyGenerator.ComputeCombinedKeyByteArrayByteArrayInt32">
            <summary>Sets the shim of KeyGenerator.ComputeCombinedKey(Byte[] requestorEntropy, Byte[] issuerEntropy, Int32 keySizeInBits)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKeyGenerator.StaticConstructor">
            <summary>Sets the shim of KeyGenerator.KeyGenerator()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimKeyGenerator.ValidateKeySizeInBytesInt32">
            <summary>Sets the shim of KeyGenerator.ValidateKeySizeInBytes(Int32 keySizeInBits)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding">
            <summary>Shim type of Thinktecture.IdentityModel.WSTrust.UserNameWSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.#ctor(Thinktecture.IdentityModel.WSTrust.UserNameWSTrustBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the shim of UserNameWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.ClientCredentialTypeGet">
            <summary>Sets the shim of UserNameWSTrustBinding.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.ClientCredentialTypeSetHttpClientCredentialType">
            <summary>Sets the shim of UserNameWSTrustBinding.set_ClientCredentialType(HttpClientCredentialType value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.Constructor">
            <summary>Sets the shim of UserNameWSTrustBinding.UserNameWSTrustBinding()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.ConstructorSecurityMode">
            <summary>Sets the shim of UserNameWSTrustBinding.UserNameWSTrustBinding(SecurityMode securityMode)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.ConstructorSecurityModeHttpClientCredentialType">
            <summary>Sets the shim of UserNameWSTrustBinding.UserNameWSTrustBinding(SecurityMode mode, HttpClientCredentialType clientCredentialType)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.CreateSecurityBindingElement">
            <summary>Sets the shim of UserNameWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.IsHttpClientCredentialTypeDefinedHttpClientCredentialType">
            <summary>Sets the shim of UserNameWSTrustBinding.IsHttpClientCredentialTypeDefined(HttpClientCredentialType value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.AllInstances.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the shim of UserNameWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.AllInstances.ClientCredentialTypeGet">
            <summary>Sets the shim of UserNameWSTrustBinding.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.AllInstances.ClientCredentialTypeSetHttpClientCredentialType">
            <summary>Sets the shim of UserNameWSTrustBinding.set_ClientCredentialType(HttpClientCredentialType value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimUserNameWSTrustBinding.AllInstances.CreateSecurityBindingElement">
            <summary>Sets the shim of UserNameWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding">
            <summary>Shim type of Thinktecture.IdentityModel.WSTrust.WSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.#ctor(Thinktecture.IdentityModel.WSTrust.WSTrustBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.ApplyMessageSecuritySecurityBindingElement">
            <summary>Sets the shim of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.ConstructorSecurityMode">
            <summary>Sets the shim of WSTrustBinding.WSTrustBinding(SecurityMode securityMode)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.ConstructorSecurityModeTrustVersion">
            <summary>Sets the shim of WSTrustBinding.WSTrustBinding(SecurityMode securityMode, TrustVersion trustVersion)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.CreateBindingElements">
            <summary>Sets the shim of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.CreateEncodingBindingElement">
            <summary>Sets the shim of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.CreateTransportBindingElement">
            <summary>Sets the shim of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.EnableRsaProofKeysGet">
            <summary>Sets the shim of WSTrustBinding.get_EnableRsaProofKeys()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.EnableRsaProofKeysSetBoolean">
            <summary>Sets the shim of WSTrustBinding.set_EnableRsaProofKeys(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.SchemeGet">
            <summary>Sets the shim of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.SecurityModeGet">
            <summary>Sets the shim of WSTrustBinding.get_SecurityMode()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.SecurityModeSetSecurityMode">
            <summary>Sets the shim of WSTrustBinding.set_SecurityMode(SecurityMode value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.TrustVersionGet">
            <summary>Sets the shim of WSTrustBinding.get_TrustVersion()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.TrustVersionSetTrustVersion">
            <summary>Sets the shim of WSTrustBinding.set_TrustVersion(TrustVersion value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.ValidateSecurityModeSecurityMode">
            <summary>Sets the shim of WSTrustBinding.ValidateSecurityMode(SecurityMode securityMode)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.ValidateTrustVersionTrustVersion">
            <summary>Sets the shim of WSTrustBinding.ValidateTrustVersion(TrustVersion trustVersion)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.ApplyMessageSecuritySecurityBindingElement">
            <summary>Sets the shim of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.CreateBindingElements">
            <summary>Sets the shim of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.CreateEncodingBindingElement">
            <summary>Sets the shim of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.CreateTransportBindingElement">
            <summary>Sets the shim of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.EnableRsaProofKeysGet">
            <summary>Sets the shim of WSTrustBinding.get_EnableRsaProofKeys()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.EnableRsaProofKeysSetBoolean">
            <summary>Sets the shim of WSTrustBinding.set_EnableRsaProofKeys(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.SchemeGet">
            <summary>Sets the shim of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.SecurityModeGet">
            <summary>Sets the shim of WSTrustBinding.get_SecurityMode()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.SecurityModeSetSecurityMode">
            <summary>Sets the shim of WSTrustBinding.set_SecurityMode(SecurityMode value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.TrustVersionGet">
            <summary>Sets the shim of WSTrustBinding.get_TrustVersion()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.TrustVersionSetTrustVersion">
            <summary>Sets the shim of WSTrustBinding.set_TrustVersion(TrustVersion value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustBinding.AllInstances.ValidateTrustVersionTrustVersion">
            <summary>Sets the shim of WSTrustBinding.ValidateTrustVersion(TrustVersion trustVersion)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustClient">
            <summary>Shim type of Thinktecture.IdentityModel.WSTrust.WSTrustClient</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustClient.CreateBearerRstEndpointAddress">
            <summary>Sets the shim of WSTrustClient.CreateBearerRst(EndpointAddress appliesTo)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustClient.CreateWSTrustChannelEndpointAddressBindingClientCredentials">
            <summary>Sets the shim of WSTrustClient.CreateWSTrustChannel(EndpointAddress stsAddress, Binding binding, ClientCredentials credentials)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustClient.IssueEndpointAddressBindingClientCredentialsRequestSecurityTokenRequestSecurityTokenResponseOut">
            <summary>Sets the shim of WSTrustClient.Issue(EndpointAddress stsAddress, Binding binding, ClientCredentials credentials, RequestSecurityToken rst, RequestSecurityTokenResponse&amp; rstr)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWSTrustClient.IssueEndpointAddressEndpointAddressBindingClientCredentials">
            <summary>Sets the shim of WSTrustClient.Issue(EndpointAddress stsAddress, EndpointAddress appliesTo, Binding binding, ClientCredentials credentials)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding">
            <summary>Shim type of Thinktecture.IdentityModel.WSTrust.WindowsWSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.#ctor(Thinktecture.IdentityModel.WSTrust.WindowsWSTrustBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the shim of WindowsWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.Constructor">
            <summary>Sets the shim of WindowsWSTrustBinding.WindowsWSTrustBinding()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.ConstructorSecurityMode">
            <summary>Sets the shim of WindowsWSTrustBinding.WindowsWSTrustBinding(SecurityMode securityMode)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.CreateSecurityBindingElement">
            <summary>Sets the shim of WindowsWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.AllInstances.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the shim of WindowsWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.ShimWindowsWSTrustBinding.AllInstances.CreateSecurityBindingElement">
            <summary>Sets the shim of WindowsWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding">
            <summary>Stub type of Thinktecture.IdentityModel.WSTrust.CertificateWSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.#ctor(System.ServiceModel.SecurityMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.ApplyMessageSecurity(System.ServiceModel.Channels.SecurityBindingElement)">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.ApplyMessageSecuritySecurityBindingElement">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.ApplyTransportSecurity(System.ServiceModel.Channels.HttpTransportBindingElement)">
            <summary>Sets the stub of CertificateWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the stub of CertificateWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CreateBindingElements">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CreateBindingElements01">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CreateEncodingBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CreateEncodingBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CreateSecurityBindingElement">
            <summary>Sets the stub of CertificateWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CreateSecurityBindingElement01">
            <summary>Sets the stub of CertificateWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CreateTransportBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CreateTransportBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.InitializeStub">
            <summary>Initializes a new instance of type StubCertificateWSTrustBinding</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.SchemeGet">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubCertificateWSTrustBinding.Scheme">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding">
            <summary>Stub type of Thinktecture.IdentityModel.WSTrust.IssuedTokenWSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.String,System.Collections.Generic.IEnumerable{System.ServiceModel.Security.Tokens.ClaimTypeRequirement})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.ServiceModel.SecurityMode,System.ServiceModel.Security.TrustVersion,System.ServiceModel.EndpointAddress)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.IdentityModel.Tokens.SecurityKeyType,System.ServiceModel.Security.SecurityAlgorithmSuite,System.String,System.Collections.Generic.IEnumerable{System.ServiceModel.Security.Tokens.ClaimTypeRequirement})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.ServiceModel.SecurityMode,System.ServiceModel.Security.TrustVersion,System.IdentityModel.Tokens.SecurityKeyType,System.ServiceModel.Security.SecurityAlgorithmSuite,System.String,System.Collections.Generic.IEnumerable{System.ServiceModel.Security.Tokens.ClaimTypeRequirement},System.ServiceModel.EndpointAddress)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.ApplyMessageSecurity(System.ServiceModel.Channels.SecurityBindingElement)">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.ApplyMessageSecuritySecurityBindingElement">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.ApplyTransportSecurity(System.ServiceModel.Channels.HttpTransportBindingElement)">
            <summary>Sets the stub of IssuedTokenWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the stub of IssuedTokenWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CreateBindingElements">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CreateBindingElements01">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CreateEncodingBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CreateEncodingBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CreateSecurityBindingElement">
            <summary>Sets the stub of IssuedTokenWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CreateSecurityBindingElement01">
            <summary>Sets the stub of IssuedTokenWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CreateTransportBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CreateTransportBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.InitializeStub">
            <summary>Initializes a new instance of type StubIssuedTokenWSTrustBinding</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.SchemeGet">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubIssuedTokenWSTrustBinding.Scheme">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding">
            <summary>Stub type of Thinktecture.IdentityModel.WSTrust.KerberosWSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.#ctor(System.ServiceModel.SecurityMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.ApplyMessageSecurity(System.ServiceModel.Channels.SecurityBindingElement)">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.ApplyMessageSecuritySecurityBindingElement">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.ApplyTransportSecurity(System.ServiceModel.Channels.HttpTransportBindingElement)">
            <summary>Sets the stub of KerberosWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the stub of KerberosWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CreateBindingElements">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CreateBindingElements01">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CreateEncodingBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CreateEncodingBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CreateSecurityBindingElement">
            <summary>Sets the stub of KerberosWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CreateSecurityBindingElement01">
            <summary>Sets the stub of KerberosWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CreateTransportBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CreateTransportBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.InitializeStub">
            <summary>Initializes a new instance of type StubKerberosWSTrustBinding</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.SchemeGet">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubKerberosWSTrustBinding.Scheme">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding">
            <summary>Stub type of Thinktecture.IdentityModel.WSTrust.UserNameWSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.#ctor(System.ServiceModel.SecurityMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.#ctor(System.ServiceModel.SecurityMode,System.ServiceModel.HttpClientCredentialType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.ApplyMessageSecurity(System.ServiceModel.Channels.SecurityBindingElement)">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.ApplyMessageSecuritySecurityBindingElement">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.ApplyTransportSecurity(System.ServiceModel.Channels.HttpTransportBindingElement)">
            <summary>Sets the stub of UserNameWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the stub of UserNameWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CreateBindingElements">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CreateBindingElements01">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CreateEncodingBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CreateEncodingBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CreateSecurityBindingElement">
            <summary>Sets the stub of UserNameWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CreateSecurityBindingElement01">
            <summary>Sets the stub of UserNameWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CreateTransportBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CreateTransportBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.InitializeStub">
            <summary>Initializes a new instance of type StubUserNameWSTrustBinding</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.SchemeGet">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubUserNameWSTrustBinding.Scheme">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding">
            <summary>Stub type of Thinktecture.IdentityModel.WSTrust.WSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.#ctor(System.ServiceModel.SecurityMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.#ctor(System.ServiceModel.SecurityMode,System.ServiceModel.Security.TrustVersion)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.ApplyMessageSecurity(System.ServiceModel.Channels.SecurityBindingElement)">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.ApplyMessageSecuritySecurityBindingElement">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.ApplyTransportSecurity(System.ServiceModel.Channels.HttpTransportBindingElement)">
            <summary>Sets the stub of WSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the stub of WSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CreateBindingElements">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CreateBindingElements01">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CreateEncodingBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CreateEncodingBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CreateSecurityBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CreateSecurityBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CreateTransportBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CreateTransportBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.InitializeStub">
            <summary>Initializes a new instance of type StubWSTrustBinding</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.SchemeGet">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubWSTrustBinding.Scheme">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding">
            <summary>Stub type of Thinktecture.IdentityModel.WSTrust.WindowsWSTrustBinding</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.#ctor(System.ServiceModel.SecurityMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.ApplyMessageSecurity(System.ServiceModel.Channels.SecurityBindingElement)">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.ApplyMessageSecuritySecurityBindingElement">
            <summary>Sets the stub of WSTrustBinding.ApplyMessageSecurity(SecurityBindingElement securityBindingElement)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.ApplyTransportSecurity(System.ServiceModel.Channels.HttpTransportBindingElement)">
            <summary>Sets the stub of WindowsWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.ApplyTransportSecurityHttpTransportBindingElement">
            <summary>Sets the stub of WindowsWSTrustBinding.ApplyTransportSecurity(HttpTransportBindingElement transport)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CreateBindingElements">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CreateBindingElements01">
            <summary>Sets the stub of WSTrustBinding.CreateBindingElements()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CreateEncodingBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CreateEncodingBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateEncodingBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CreateSecurityBindingElement">
            <summary>Sets the stub of WindowsWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CreateSecurityBindingElement01">
            <summary>Sets the stub of WindowsWSTrustBinding.CreateSecurityBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CreateTransportBindingElement">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CreateTransportBindingElement01">
            <summary>Sets the stub of WSTrustBinding.CreateTransportBindingElement()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.InitializeStub">
            <summary>Initializes a new instance of type StubWindowsWSTrustBinding</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.SchemeGet">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.WSTrust.Fakes.StubWindowsWSTrustBinding.Scheme">
            <summary>Sets the stub of WSTrustBinding.get_Scheme()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimAppStart">
            <summary>Shim type of Thinktecture.IdentityModel.Web.Configuration.AppStart</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimAppStart.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimAppStart.#ctor(Thinktecture.IdentityModel.Web.Configuration.AppStart)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimAppStart.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimAppStart.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimAppStart.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimAppStart.Constructor">
            <summary>Sets the shim of AppStart.AppStart()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimAppStart.Start">
            <summary>Sets the shim of AppStart.Start()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimAppStart.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection">
            <summary>Shim type of Thinktecture.IdentityModel.Web.Configuration.SecuritySessionSection</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.#ctor(Thinktecture.IdentityModel.Web.Configuration.SecuritySessionSection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.CacheSessionsOnServerGet">
            <summary>Sets the shim of SecuritySessionSection.get_CacheSessionsOnServer()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.CacheSessionsOnServerSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_CacheSessionsOnServer(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.Constructor">
            <summary>Sets the shim of SecuritySessionSection.SecuritySessionSection()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.DefaultSessionDurationGet">
            <summary>Sets the shim of SecuritySessionSection.get_DefaultSessionDuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.DefaultSessionDurationSetTimeSpan">
            <summary>Sets the shim of SecuritySessionSection.set_DefaultSessionDuration(TimeSpan value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.EnableSlidingSessionExpirationsGet">
            <summary>Sets the shim of SecuritySessionSection.get_EnableSlidingSessionExpirations()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.EnableSlidingSessionExpirationsSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_EnableSlidingSessionExpirations(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.GetConfigSection">
            <summary>Sets the shim of SecuritySessionSection.GetConfigSection()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.InstanceGet">
            <summary>Sets the shim of SecuritySessionSection.get_Instance()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.InstanceSetSecuritySessionSection">
            <summary>Sets the shim of SecuritySessionSection.set_Instance(SecuritySessionSection value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.OverrideWSFedTokenLifetimeGet">
            <summary>Sets the shim of SecuritySessionSection.get_OverrideWSFedTokenLifetime()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.OverrideWSFedTokenLifetimeSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_OverrideWSFedTokenLifetime(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.PersistentSessionDurationGet">
            <summary>Sets the shim of SecuritySessionSection.get_PersistentSessionDuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.PersistentSessionDurationSetTimeSpan">
            <summary>Sets the shim of SecuritySessionSection.set_PersistentSessionDuration(TimeSpan value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.SessionTokenCacheTypeGet">
            <summary>Sets the shim of SecuritySessionSection.get_SessionTokenCacheType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.SessionTokenCacheTypeSetString">
            <summary>Sets the shim of SecuritySessionSection.set_SessionTokenCacheType(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.StaticConstructor">
            <summary>Sets the shim of SecuritySessionSection.SecuritySessionSection()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.SuppressLoginRedirectsForApiCallsGet">
            <summary>Sets the shim of SecuritySessionSection.get_SuppressLoginRedirectsForApiCalls()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.SuppressLoginRedirectsForApiCallsSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_SuppressLoginRedirectsForApiCalls(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.SuppressSecurityTokenExceptionsGet">
            <summary>Sets the shim of SecuritySessionSection.get_SuppressSecurityTokenExceptions()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.SuppressSecurityTokenExceptionsSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_SuppressSecurityTokenExceptions(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.UseMackineKeyProtectionForSessionTokensGet">
            <summary>Sets the shim of SecuritySessionSection.get_UseMackineKeyProtectionForSessionTokens()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.UseMackineKeyProtectionForSessionTokensSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_UseMackineKeyProtectionForSessionTokens(Boolean value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.CacheSessionsOnServerGet">
            <summary>Sets the shim of SecuritySessionSection.get_CacheSessionsOnServer()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.CacheSessionsOnServerSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_CacheSessionsOnServer(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.DefaultSessionDurationGet">
            <summary>Sets the shim of SecuritySessionSection.get_DefaultSessionDuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.DefaultSessionDurationSetTimeSpan">
            <summary>Sets the shim of SecuritySessionSection.set_DefaultSessionDuration(TimeSpan value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.EnableSlidingSessionExpirationsGet">
            <summary>Sets the shim of SecuritySessionSection.get_EnableSlidingSessionExpirations()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.EnableSlidingSessionExpirationsSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_EnableSlidingSessionExpirations(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.OverrideWSFedTokenLifetimeGet">
            <summary>Sets the shim of SecuritySessionSection.get_OverrideWSFedTokenLifetime()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.OverrideWSFedTokenLifetimeSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_OverrideWSFedTokenLifetime(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.PersistentSessionDurationGet">
            <summary>Sets the shim of SecuritySessionSection.get_PersistentSessionDuration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.PersistentSessionDurationSetTimeSpan">
            <summary>Sets the shim of SecuritySessionSection.set_PersistentSessionDuration(TimeSpan value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.SessionTokenCacheTypeGet">
            <summary>Sets the shim of SecuritySessionSection.get_SessionTokenCacheType()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.SessionTokenCacheTypeSetString">
            <summary>Sets the shim of SecuritySessionSection.set_SessionTokenCacheType(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.SuppressLoginRedirectsForApiCallsGet">
            <summary>Sets the shim of SecuritySessionSection.get_SuppressLoginRedirectsForApiCalls()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.SuppressLoginRedirectsForApiCallsSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_SuppressLoginRedirectsForApiCalls(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.SuppressSecurityTokenExceptionsGet">
            <summary>Sets the shim of SecuritySessionSection.get_SuppressSecurityTokenExceptions()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.SuppressSecurityTokenExceptionsSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_SuppressSecurityTokenExceptions(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.UseMackineKeyProtectionForSessionTokensGet">
            <summary>Sets the shim of SecuritySessionSection.get_UseMackineKeyProtectionForSessionTokens()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSecuritySessionSection.AllInstances.UseMackineKeyProtectionForSessionTokensSetBoolean">
            <summary>Sets the shim of SecuritySessionSection.set_UseMackineKeyProtectionForSessionTokens(Boolean value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule">
            <summary>Shim type of Thinktecture.IdentityModel.Web.Configuration.SessionConfigurationModule</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.#ctor(Thinktecture.IdentityModel.Web.Configuration.SessionConfigurationModule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.Bind(System.Web.IHttpModule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.CacheSessionsOnServerGet">
            <summary>Sets the shim of SessionConfigurationModule.get_CacheSessionsOnServer()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.CacheSessionsOnServerSetBoolean">
            <summary>Sets the shim of SessionConfigurationModule.set_CacheSessionsOnServer(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.Constructor">
            <summary>Sets the shim of SessionConfigurationModule.SessionConfigurationModule()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.Dispose">
            <summary>Sets the shim of SessionConfigurationModule.Dispose()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.EnableSlidingSessionExpirationsGet">
            <summary>Sets the shim of SessionConfigurationModule.get_EnableSlidingSessionExpirations()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.EnableSlidingSessionExpirationsSetBoolean">
            <summary>Sets the shim of SessionConfigurationModule.set_EnableSlidingSessionExpirations(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.InitHttpApplication">
            <summary>Sets the shim of SessionConfigurationModule.Init(HttpApplication application)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.OverrideWSFedTokenLifetimeGet">
            <summary>Sets the shim of SessionConfigurationModule.get_OverrideWSFedTokenLifetime()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.OverrideWSFedTokenLifetimeSetBoolean">
            <summary>Sets the shim of SessionConfigurationModule.set_OverrideWSFedTokenLifetime(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.SuppressLoginRedirectsForApiCallsGet">
            <summary>Sets the shim of SessionConfigurationModule.get_SuppressLoginRedirectsForApiCalls()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.SuppressLoginRedirectsForApiCallsSetBoolean">
            <summary>Sets the shim of SessionConfigurationModule.set_SuppressLoginRedirectsForApiCalls(Boolean value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.SuppressSecurityTokenExceptionsGet">
            <summary>Sets the shim of SessionConfigurationModule.get_SuppressSecurityTokenExceptions()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.SuppressSecurityTokenExceptionsSetBoolean">
            <summary>Sets the shim of SessionConfigurationModule.set_SuppressSecurityTokenExceptions(Boolean value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.AllInstances.Dispose">
            <summary>Sets the shim of SessionConfigurationModule.Dispose()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.ShimSessionConfigurationModule.AllInstances.InitHttpApplication">
            <summary>Sets the shim of SessionConfigurationModule.Init(HttpApplication application)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubAppStart">
            <summary>Stub type of Thinktecture.IdentityModel.Web.Configuration.AppStart</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubAppStart.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubAppStart.InitializeStub">
            <summary>Initializes a new instance of type StubAppStart</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubAppStart.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubAppStart.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubAppStart.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection">
            <summary>Stub type of Thinktecture.IdentityModel.Web.Configuration.SecuritySessionSection</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.DeserializeSection(System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.DeserializeSectionXmlReader">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.GetRuntimeObject">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.GetRuntimeObject01">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.InitializeStub">
            <summary>Initializes a new instance of type StubSecuritySessionSection</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.IsModified">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.IsModified01">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ResetModified">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ResetModified01">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSecuritySessionSection.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSessionConfigurationModule">
            <summary>Stub type of Thinktecture.IdentityModel.Web.Configuration.SessionConfigurationModule</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSessionConfigurationModule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSessionConfigurationModule.InitializeStub">
            <summary>Initializes a new instance of type StubSessionConfigurationModule</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSessionConfigurationModule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSessionConfigurationModule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Configuration.Fakes.StubSessionConfigurationModule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule">
            <summary>Shim type of Thinktecture.IdentityModel.Web.ClaimsAuthenticationHttpModule</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.#ctor(Thinktecture.IdentityModel.Web.ClaimsAuthenticationHttpModule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.Bind(System.Web.IHttpModule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.Constructor">
            <summary>Sets the shim of ClaimsAuthenticationHttpModule.ClaimsAuthenticationHttpModule()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.Context_PostAuthenticateRequestObjectEventArgs">
            <summary>Sets the shim of ClaimsAuthenticationHttpModule.Context_PostAuthenticateRequest(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.Dispose">
            <summary>Sets the shim of ClaimsAuthenticationHttpModule.Dispose()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.InitHttpApplication">
            <summary>Sets the shim of ClaimsAuthenticationHttpModule.Init(HttpApplication context)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.AllInstances.Context_PostAuthenticateRequestObjectEventArgs">
            <summary>Sets the shim of ClaimsAuthenticationHttpModule.Context_PostAuthenticateRequest(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.AllInstances.Dispose">
            <summary>Sets the shim of ClaimsAuthenticationHttpModule.Dispose()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimClaimsAuthenticationHttpModule.AllInstances.InitHttpApplication">
            <summary>Sets the shim of ClaimsAuthenticationHttpModule.Init(HttpApplication context)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration">
            <summary>Shim type of Thinktecture.IdentityModel.Web.PassiveModuleConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.#ctor(Thinktecture.IdentityModel.Web.PassiveModuleConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.CacheSessionsOnServerBoolean">
            <summary>Sets the shim of PassiveModuleConfiguration.CacheSessionsOnServer(Boolean checkForSessionSecurityTokenCache)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.Constructor">
            <summary>Sets the shim of PassiveModuleConfiguration.PassiveModuleConfiguration()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.EnableSlidingSessionExpirations">
            <summary>Sets the shim of PassiveModuleConfiguration.EnableSlidingSessionExpirations()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.OverrideWSFedTokenLifetime">
            <summary>Sets the shim of PassiveModuleConfiguration.OverrideWSFedTokenLifetime()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.SuppressLoginRedirectsForApiCalls">
            <summary>Sets the shim of PassiveModuleConfiguration.SuppressLoginRedirectsForApiCalls()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.SuppressSecurityTokenExceptionsStringActionOfSecurityTokenException">
            <summary>Sets the shim of PassiveModuleConfiguration.SuppressSecurityTokenExceptions(String redirectPath, Action`1&lt;SecurityTokenException&gt; logger)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration._OverrideWSFedTokenLifetimeb__cObjectSessionSecurityTokenCreatedEventArgs">
            <summary>Sets the shim of PassiveModuleConfiguration.&lt;OverrideWSFedTokenLifetime&gt;b__c(Object sender, SessionSecurityTokenCreatedEventArgs e)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration._SuppressLoginRedirectsForApiCallsb__7ObjectEventArgs">
            <summary>Sets the shim of PassiveModuleConfiguration.&lt;SuppressLoginRedirectsForApiCalls&gt;b__7(Object param0, EventArgs param1)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration._SuppressLoginRedirectsForApiCallsb__8ObjectAuthorizationFailedEventArgs">
            <summary>Sets the shim of PassiveModuleConfiguration.&lt;SuppressLoginRedirectsForApiCalls&gt;b__8(Object sender, AuthorizationFailedEventArgs e)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveModuleConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache">
            <summary>Shim type of Thinktecture.IdentityModel.Web.PassiveRepositorySessionSecurityTokenCache</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.#ctor(Thinktecture.IdentityModel.Web.PassiveRepositorySessionSecurityTokenCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.Bind(System.IdentityModel.Configuration.ICustomIdentityConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AddOrUpdateSessionSecurityTokenCacheKeySessionSecurityTokenDateTime">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey key, SessionSecurityToken value, DateTime expiryTime)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.BytesToTokenByteArray">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.BytesToToken(Byte[] bytes)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.CleanupOldTokens">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.CleanupOldTokens()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.ConstructorITokenCacheRepository">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.PassiveRepositorySessionSecurityTokenCache(ITokenCacheRepository tokenCacheRepository)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.ConstructorITokenCacheRepositorySessionSecurityTokenCache">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.PassiveRepositorySessionSecurityTokenCache(ITokenCacheRepository tokenCacheRepository, SessionSecurityTokenCache inner)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.GetAllStringUniqueId">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.GetAll(String endpointId, UniqueId contextId)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.GetSessionSecurityTokenCacheKey">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey key)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.RemoveAllString">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.RemoveAll(String endpointId)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.RemoveAllStringUniqueId">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.RemoveAll(String endpointId, UniqueId contextId)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.RemoveSessionSecurityTokenCacheKey">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey key)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.StaticConstructor">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.PassiveRepositorySessionSecurityTokenCache()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.TokenToBytesSessionSecurityToken">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.TokenToBytes(SessionSecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache._CleanupOldTokensb__1Task">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.&lt;CleanupOldTokens&gt;b__1(Task task)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache._CleanupOldTokensb__2">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.&lt;CleanupOldTokens&gt;b__2()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AllInstances.AddOrUpdateSessionSecurityTokenCacheKeySessionSecurityTokenDateTime">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey key, SessionSecurityToken value, DateTime expiryTime)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AllInstances.BytesToTokenByteArray">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.BytesToToken(Byte[] bytes)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AllInstances.CleanupOldTokens">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.CleanupOldTokens()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AllInstances.GetAllStringUniqueId">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.GetAll(String endpointId, UniqueId contextId)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AllInstances.GetSessionSecurityTokenCacheKey">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey key)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AllInstances.RemoveAllString">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.RemoveAll(String endpointId)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AllInstances.RemoveAllStringUniqueId">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.RemoveAll(String endpointId, UniqueId contextId)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AllInstances.RemoveSessionSecurityTokenCacheKey">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey key)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AllInstances.TokenToBytesSessionSecurityToken">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.TokenToBytes(SessionSecurityToken token)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveRepositorySessionSecurityTokenCache.AllInstances._CleanupOldTokensb__2">
            <summary>Sets the shim of PassiveRepositorySessionSecurityTokenCache.&lt;CleanupOldTokens&gt;b__2()</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveSessionConfiguration">
            <summary>Shim type of Thinktecture.IdentityModel.Web.PassiveSessionConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveSessionConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveSessionConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveSessionConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveSessionConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveSessionConfiguration.ConfigureDefaultSessionDurationTimeSpan">
            <summary>Sets the shim of PassiveSessionConfiguration.ConfigureDefaultSessionDuration(TimeSpan sessionDuration)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveSessionConfiguration.ConfigureMackineKeyProtectionForSessionTokens">
            <summary>Sets the shim of PassiveSessionConfiguration.ConfigureMackineKeyProtectionForSessionTokens()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveSessionConfiguration.ConfigurePersistentSessionsTimeSpan">
            <summary>Sets the shim of PassiveSessionConfiguration.ConfigurePersistentSessions(TimeSpan sessionDuration)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimPassiveSessionConfiguration.ConfigureSessionCacheITokenCacheRepository">
            <summary>Sets the shim of PassiveSessionConfiguration.ConfigureSessionCache(ITokenCacheRepository tokenCacheRepository)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie">
            <summary>Shim type of Thinktecture.IdentityModel.Web.ProtectedCookie</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.#ctor(Thinktecture.IdentityModel.Web.ProtectedCookie)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.Constructor">
            <summary>Sets the shim of ProtectedCookie.ProtectedCookie()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.ConstructorListOfCookieTransform">
            <summary>Sets the shim of ProtectedCookie.ProtectedCookie(List`1&lt;CookieTransform&gt; transforms)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.ConstructorProtectionMode">
            <summary>Sets the shim of ProtectedCookie.ProtectedCookie(ProtectionMode mode)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.ConstructorX509Certificate2">
            <summary>Sets the shim of ProtectedCookie.ProtectedCookie(X509Certificate2 protectionCertificate)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.DecodeCookieValueByteArray">
            <summary>Sets the shim of ProtectedCookie.DecodeCookieValue(Byte[] bytes)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.DeleteString">
            <summary>Sets the shim of ProtectedCookie.Delete(String name)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.EncodeCookieValueString">
            <summary>Sets the shim of ProtectedCookie.EncodeCookieValue(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.ReadString">
            <summary>Sets the shim of ProtectedCookie.Read(String name)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.SetDpapiTransforms">
            <summary>Sets the shim of ProtectedCookie.SetDpapiTransforms()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.SetMachineKeyTransforms">
            <summary>Sets the shim of ProtectedCookie.SetMachineKeyTransforms()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.StaticConstructor">
            <summary>Sets the shim of ProtectedCookie.ProtectedCookie()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.WriteStringStringDateTime">
            <summary>Sets the shim of ProtectedCookie.Write(String name, String value, DateTime expirationTime)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.WriteStringStringDateTimeStringString">
            <summary>Sets the shim of ProtectedCookie.Write(String name, String value, DateTime expirationTime, String domain, String path)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.AllInstances.DecodeCookieValueByteArray">
            <summary>Sets the shim of ProtectedCookie.DecodeCookieValue(Byte[] bytes)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.AllInstances.EncodeCookieValueString">
            <summary>Sets the shim of ProtectedCookie.EncodeCookieValue(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.AllInstances.ReadString">
            <summary>Sets the shim of ProtectedCookie.Read(String name)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.AllInstances.SetDpapiTransforms">
            <summary>Sets the shim of ProtectedCookie.SetDpapiTransforms()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.AllInstances.SetMachineKeyTransforms">
            <summary>Sets the shim of ProtectedCookie.SetMachineKeyTransforms()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.AllInstances.WriteStringStringDateTime">
            <summary>Sets the shim of ProtectedCookie.Write(String name, String value, DateTime expirationTime)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimProtectedCookie.AllInstances.WriteStringStringDateTimeStringString">
            <summary>Sets the shim of ProtectedCookie.Write(String name, String value, DateTime expirationTime, String domain, String path)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem">
            <summary>Shim type of Thinktecture.IdentityModel.Web.TokenCacheItem</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.#ctor(Thinktecture.IdentityModel.Web.TokenCacheItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.Constructor">
            <summary>Sets the shim of TokenCacheItem.TokenCacheItem()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.ExpiresGet">
            <summary>Sets the shim of TokenCacheItem.get_Expires()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.ExpiresSetDateTime">
            <summary>Sets the shim of TokenCacheItem.set_Expires(DateTime value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.KeyGet">
            <summary>Sets the shim of TokenCacheItem.get_Key()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.KeySetString">
            <summary>Sets the shim of TokenCacheItem.set_Key(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.TokenGet">
            <summary>Sets the shim of TokenCacheItem.get_Token()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.TokenSetByteArray">
            <summary>Sets the shim of TokenCacheItem.set_Token(Byte[] value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.AllInstances.ExpiresGet">
            <summary>Sets the shim of TokenCacheItem.get_Expires()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.AllInstances.ExpiresSetDateTime">
            <summary>Sets the shim of TokenCacheItem.set_Expires(DateTime value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.AllInstances.KeyGet">
            <summary>Sets the shim of TokenCacheItem.get_Key()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.AllInstances.KeySetString">
            <summary>Sets the shim of TokenCacheItem.set_Key(String value)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.AllInstances.TokenGet">
            <summary>Sets the shim of TokenCacheItem.get_Token()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.ShimTokenCacheItem.AllInstances.TokenSetByteArray">
            <summary>Sets the shim of TokenCacheItem.set_Token(Byte[] value)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.StubClaimsAuthenticationHttpModule">
            <summary>Stub type of Thinktecture.IdentityModel.Web.ClaimsAuthenticationHttpModule</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubClaimsAuthenticationHttpModule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubClaimsAuthenticationHttpModule.InitializeStub">
            <summary>Initializes a new instance of type StubClaimsAuthenticationHttpModule</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubClaimsAuthenticationHttpModule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubClaimsAuthenticationHttpModule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubClaimsAuthenticationHttpModule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.StubITokenCacheRepository">
            <summary>Stub type of Thinktecture.IdentityModel.Web.ITokenCacheRepository</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubITokenCacheRepository.#ctor">
            <summary>Initializes a new instance of type StubITokenCacheRepository</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubITokenCacheRepository.AddOrUpdateTokenCacheItem">
            <summary>Sets the stub of ITokenCacheRepository.AddOrUpdate(TokenCacheItem item)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubITokenCacheRepository.GetString">
            <summary>Sets the stub of ITokenCacheRepository.Get(String key)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubITokenCacheRepository.RemoveAllBeforeDateTime">
            <summary>Sets the stub of ITokenCacheRepository.RemoveAllBefore(DateTime date)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubITokenCacheRepository.RemoveString">
            <summary>Sets the stub of ITokenCacheRepository.Remove(String key)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubITokenCacheRepository.tim::Thinktecture#IdentityModel#Web#ITokenCacheRepository#AddOrUpdate(Thinktecture.IdentityModel.Web.TokenCacheItem)">
            <summary>Sets the stub of ITokenCacheRepository.AddOrUpdate(TokenCacheItem item)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubITokenCacheRepository.tim::Thinktecture#IdentityModel#Web#ITokenCacheRepository#Get(System.String)">
            <summary>Sets the stub of ITokenCacheRepository.Get(String key)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubITokenCacheRepository.tim::Thinktecture#IdentityModel#Web#ITokenCacheRepository#Remove(System.String)">
            <summary>Sets the stub of ITokenCacheRepository.Remove(String key)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubITokenCacheRepository.tim::Thinktecture#IdentityModel#Web#ITokenCacheRepository#RemoveAllBefore(System.DateTime)">
            <summary>Sets the stub of ITokenCacheRepository.RemoveAllBefore(DateTime date)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.StubPassiveModuleConfiguration">
            <summary>Stub type of Thinktecture.IdentityModel.Web.PassiveModuleConfiguration</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveModuleConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveModuleConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubPassiveModuleConfiguration</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubPassiveModuleConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubPassiveModuleConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubPassiveModuleConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache">
            <summary>Stub type of Thinktecture.IdentityModel.Web.PassiveRepositorySessionSecurityTokenCache</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.#ctor(Thinktecture.IdentityModel.Web.ITokenCacheRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.#ctor(Thinktecture.IdentityModel.Web.ITokenCacheRepository,System.IdentityModel.Tokens.SessionSecurityTokenCache)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey key, SessionSecurityToken value, DateTime expiryTime)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.AddOrUpdateSessionSecurityTokenCacheKeySessionSecurityTokenDateTime">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey key, SessionSecurityToken value, DateTime expiryTime)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey key)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.GetAll(String endpointId, UniqueId contextId)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.GetAllStringUniqueId">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.GetAll(String endpointId, UniqueId contextId)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.GetSessionSecurityTokenCacheKey">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey key)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.InitializeStub">
            <summary>Initializes a new instance of type StubPassiveRepositorySessionSecurityTokenCache</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)">
            <summary>Sets the stub of SessionSecurityTokenCache.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.LoadCustomConfigurationXmlNodeList">
            <summary>Sets the stub of SessionSecurityTokenCache.LoadCustomConfiguration(XmlNodeList nodelist)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey key)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.RemoveAll(System.String)">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.RemoveAll(String endpointId)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.RemoveAll(String endpointId, UniqueId contextId)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.RemoveAllString">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.RemoveAll(String endpointId)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.RemoveAllStringUniqueId">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.RemoveAll(String endpointId, UniqueId contextId)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.RemoveSessionSecurityTokenCacheKey">
            <summary>Sets the stub of PassiveRepositorySessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey key)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubPassiveRepositorySessionSecurityTokenCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie">
            <summary>Stub type of Thinktecture.IdentityModel.Web.ProtectedCookie</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.#ctor(Thinktecture.IdentityModel.Web.ProtectionMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.#ctor(System.Collections.Generic.List{System.IdentityModel.CookieTransform})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.DecodeCookieValue(System.Byte[])">
            <summary>Sets the stub of ProtectedCookie.DecodeCookieValue(Byte[] bytes)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.DecodeCookieValueByteArray">
            <summary>Sets the stub of ProtectedCookie.DecodeCookieValue(Byte[] bytes)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.EncodeCookieValue(System.String)">
            <summary>Sets the stub of ProtectedCookie.EncodeCookieValue(String value)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.EncodeCookieValueString">
            <summary>Sets the stub of ProtectedCookie.EncodeCookieValue(String value)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.InitializeStub">
            <summary>Initializes a new instance of type StubProtectedCookie</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubProtectedCookie.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Fakes.StubTokenCacheItem">
            <summary>Stub type of Thinktecture.IdentityModel.Web.TokenCacheItem</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubTokenCacheItem.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Fakes.StubTokenCacheItem.InitializeStub">
            <summary>Initializes a new instance of type StubTokenCacheItem</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubTokenCacheItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubTokenCacheItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Fakes.StubTokenCacheItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute">
            <summary>Shim type of Thinktecture.IdentityModel.Web.Mvc.FrameOptionsAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.#ctor(Thinktecture.IdentityModel.Web.Mvc.FrameOptionsAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.Bind(System.Web.Mvc.IMvcFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.Constructor">
            <summary>Sets the shim of FrameOptionsAttribute.FrameOptionsAttribute()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.ConstructorFrameOptions">
            <summary>Sets the shim of FrameOptionsAttribute.FrameOptionsAttribute(FrameOptions options)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.ConstructorString">
            <summary>Sets the shim of FrameOptionsAttribute.FrameOptionsAttribute(String origin)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.GetCustomOriginHeaderValueHttpRequestBase">
            <summary>Sets the shim of FrameOptionsAttribute.GetCustomOriginHeaderValue(HttpRequestBase request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.GetCustomOriginHttpRequestBase">
            <summary>Sets the shim of FrameOptionsAttribute.GetCustomOrigin(HttpRequestBase request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.OnResultExecutingResultExecutingContext">
            <summary>Sets the shim of FrameOptionsAttribute.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.AllInstances.GetCustomOriginHeaderValueHttpRequestBase">
            <summary>Sets the shim of FrameOptionsAttribute.GetCustomOriginHeaderValue(HttpRequestBase request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.AllInstances.GetCustomOriginHttpRequestBase">
            <summary>Sets the shim of FrameOptionsAttribute.GetCustomOrigin(HttpRequestBase request)</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.ShimFrameOptionsAttribute.AllInstances.OnResultExecutingResultExecutingContext">
            <summary>Sets the shim of FrameOptionsAttribute.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="T:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute">
            <summary>Stub type of Thinktecture.IdentityModel.Web.Mvc.FrameOptionsAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.#ctor(Thinktecture.IdentityModel.Web.Mvc.FrameOptions)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.GetCustomOrigin(System.Web.HttpRequestBase)">
            <summary>Sets the stub of FrameOptionsAttribute.GetCustomOrigin(HttpRequestBase request)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.GetCustomOriginHttpRequestBase">
            <summary>Sets the stub of FrameOptionsAttribute.GetCustomOrigin(HttpRequestBase request)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubFrameOptionsAttribute</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of ActionFilterAttribute.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of ActionFilterAttribute.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of FrameOptionsAttribute.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of FrameOptionsAttribute.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Thinktecture.IdentityModel.Web.Mvc.Fakes.StubFrameOptionsAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
    </members>
</doc>
